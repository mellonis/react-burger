{"version":3,"sources":["types.ts","components/order-status/style.module.css","components/modal/modal-overlay/style.module.css","components/app-header/menu-item/style.module.css","components/feed/style.module.css","components/burger-ingredients/burger-ingredient-type/style.module.css","components/app-body/style.module.css","components/app/style.module.css","pages/page-style.module.css","services/api/consts.ts","services/api/index.ts","consts.ts","components/burger-constructor/style.module.css","components/ingredient-icon/index.tsx","hooks/useOrderIngredients.ts","helpers/localization.ts","components/amount/index.tsx","components/order-status/index.tsx","components/order-details/ingredients-and-price/index.tsx","components/order-details/index.tsx","components/feed-activity/index.tsx","components/feed/order/ingredients-and-price/index.tsx","components/feed/order/index.tsx","components/feed/intex.tsx","components/form/helpers.tsx","pages/feed/feed/index.tsx","pages/feed/index.tsx","components/form/index.tsx","pages/forgot-password/index.tsx","components/ingredient-details/index.tsx","pages/ingredients/index.tsx","pages/login/index.tsx","pages/logout/index.tsx","components/burger-constructor/index.tsx","components/burger-ingredients/burger-ingredient/index.tsx","components/burger-ingredients/burger-ingredient-type/index.tsx","components/burger-ingredients/index.tsx","components/modal/modal-overlay/index.tsx","components/modal/index.tsx","components/placed-order-details/index.tsx","pages/main/index.tsx","pages/not-found/index.tsx","pages/profile/orders/index.tsx","pages/profile/profile/index.tsx","pages/profile/index.tsx","pages/register/index.tsx","pages/reset-password/index.tsx","components/protected-route/index.tsx","components/app-body/index.tsx","components/app-header/menu-item/index.tsx","components/app-header/index.tsx","components/app/index.tsx","reportWebVitals.ts","index.tsx","services/reducers/user.ts","services/helpers/index.ts","services/reducers/burger.ts","services/reducers/orders.ts","pages/profile/style.module.css","services/middleware/socketMiddleware.ts","components/feed-activity/style.module.css","components/form/style.module.css","components/ingredient-details/style.module.css","components/burger-constructor/burger-constructor-item/style.module.css","components/burger-ingredients/burger-ingredient/style.module.css","components/burger-ingredients/style.module.css","components/order-details/style.module.css","pages/feed/feed/style.module.css","components/modal/style.module.css","components/placed-order-details/style.module.css","components/app-header/style.module.css","components/feed/order/style.module.css","services/store.ts","components/amount/style.module.css","components/feed/order/ingredients-and-price/style.module.css","pages/main/style.module.css","components/ingredient-icon/style.module.css","components/order-details/ingredients-and-price/style.module.css","components/burger-constructor/burger-constructor-item/index.tsx"],"names":["ActualIngredientType","DraggableTypes","IngredientType","OrderStatus_t","module","exports","apiHostUrl","getAccessSchemaAndTokenAndRefreshToken","response","accessTokenWithSchema","accessToken","refreshToken","split","accessSchema","fetchIngredients","a","fetch","json","result","success","data","Error","login","email","password","body","JSON","stringify","headers","Headers","method","user","userEmailFromServer","userNameFromServer","name","logout","token","placeAnOrder","ingredients","auth","id","order","number","message","status","pending","refreshTokens","registerUser","requestPasswordResettingForEmail","requestNewPasswordSetting","getUserData","updateUserData","orderStatusToStatusTitleMap","created","done","lexemes","assembleABurger","bottom","buns","burgerFillings","calories","carbohydrates","constructor","fat","ingredientDetails","orderDetails","orderId","orderIngredients","orderList","ordersTotalCount","ordersTodayTotalCount","profile","proteins","sauces","top","noInformation","forms","__common__","__errors__","required","passwordLength","doHidePassword","doLogin","doRegister","doShowPassword","haveYouRememberedYourPassword","resetForm","forgotPassword","doResetPassword","provideYourEmail","title","areYouForgetYourPassword","areYouTheNewUser","doResetYourPassword","doEdit","register","areYouRegisteredAlready","resetPassword","doReset","provideApprovalCode","provideYourNewPassword","IngredientIconRenderType","useOrderIngredients","limit","Infinity","idToIngredientMap","useAppSelector","state","burger","useMemo","ingredientQuantityPairs","moreIngredientsCount","totalPrice","map","ingredientId","some","ingredient","isItValid","length","NaN","bun","find","type","ingredientsWithoutABun","filter","ingredientToQuantityMap","Map","set","forEach","has","currentQuantity","get","entries","getOrderIngredientEntries","slice","reduce","price","formatOrderDate","date","formatRelative","Date","locale","ru","Amount","amount","className","isTotal","cs","style","orderStatusClassname","OrderStatus","orderStyles","ingredientIconClassname","IngredientIcon","Tag","tag","ingredientIconStyles","alt","src","image","defaultProps","div","ingredientAndPriceClassname","IngredientAndPrice","quantity","ingredientAndPriceStyles","orderDetailsClassname","OrderDetails","useParams","orders","_id","orderDetailsStyles","ix","Fragment","createdAt","feedActivityClassname","FeedActivity","total","totalToday","statusToOrdersMap","hasOwnProperty","push","statusToStatusUlsMap","feedActivityStyles","ingredientsAndPriceClassname","IngredientsAndPrice","ingredientsAndPriceStyles","undefined","li","orderClassname","Order","renderStatus","location","useLocation","history","useHistory","onClick","pathname","backgroundPageLocation","Feed","feedStyles","ComponentInputType","feedPageClassname","FeedPage","feedPageStyles","FeedPageSwitcher","path","useRouteMatch","exact","to","produceAdditionalActionReactNode","index","url","urlTitle","dangerouslySetInnerHTML","__html","produceInputReactNode","inputDeclaration","component","componentType","input","icon","placeholder","control","this","render","field","onChange","value","passwordInput","Form","additionalActions","buttonTitle","inputDeclarations","isButtonHiddenOnNotModifiedForm","onSubmit","resetButtonTitle","showErrors","componentElementRef","useRef","schema","yup","shape","Object","assign","min","useForm","defaultValues","initialValue","mode","resolver","yupResolver","handleSubmit","formState","errors","isDirty","reset","onInvalidFormHandler","useCallback","console","error","onValidFormHandler","componentElement","current","args","apply","onButtonClickHandler","formElement","dispatchEvent","Event","isButtonVisible","isResetButtonVisible","ref","fromStyles","keys","sort","fieldNameA","fieldNameB","localeCompare","fieldName","forgotPasswordPageClassname","ForgotPasswordPage","userLoginPhase","passwordResettingPhase","dispatch","useAppDispatch","UserLoginPhase","fulfilled","includes","PasswordResettingPhase","requestingCredentialsFromUser","pendingResetting","pageStyles","initial","IngredientDetails","nutritionalValues","list","key","ingredientsPageClassname","IngredientsPage","params","ingredientsRequest","loginPageClassname","LoginPage","redirectedFrom","useEffect","rejected","interruptUserLogin","LogoutPage","BurgerConstructor","actualIngredients","orderDetailsRequest","totalAmount","topBun","bottomBun","placeAnOrderClickHandler","refId","replace","useDrop","accept","canDrop","item","monitor","getItemType","drop","addIngredient","collect","isCanDrop","isDragOver","isOver","dropRef","isLocked","onShowIngredientInfo","onDelete","removeIngredient","size","BurgerIngredient","idToActualIngredientsCountMap","useDrag","options","dropEffect","monitoring","isItPicked","isDragging","dragRef","preview","DragPreviewImage","connect","count","BurgerIngredientType","data-type","ingredientTypeTitles","sauce","main","ingredientTypes","thresholds","Array","from","thresholdsStepsCount","_","BurgerIngredients","useState","selectedIngredientType","setSelectedIngredientType","ingredientTypeToIngredientsMap","axillaryMap","ingredientType","clear","typeListElementRef","typeListElement","items","querySelectorAll","ingredientToIntersectionRatioMap","intersectionObserver","IntersectionObserver","intersectionObserverEntries","target","intersectionRatio","dataset","mostVisibleType","irA","root","threshold","observe","disconnect","active","currentListItemElement","querySelector","scrollIntoView","behavior","ModalOverlay","Modal","children","onClose","modalElementRef","modalElement","focus","keyDownHandler","onKeyDown","tabIndex","placedOrderDetails","PlacedOrderDetails","placedOrderDetailsStyles","String","padStart","mainPageClassname","MainPage","mainPageStyles","DndProvider","backend","Html5Backend","resetOrderDetails","burgerConstructorStyles","notFoundPageClassname","NotFoundPage","Orders","userOrders","subscribeForUserOrders","unsubscribeForUserOrders","Profile","updateUserDataPhase","interruptUpdateUserData","actualInputDeclarations","inputDeclarationCopy","prototype","call","UpdateUserDataPhase","profilePageClassname","ProfilePage","userTimeStamp","isProfileSubpageMatched","isOrdersSubpageMatched","profilePageStyle","registerPageClassname","RegisterPage","userRegistrationPhase","interruptUserRegistration","UserRegistrationPhase","resetPasswordPageClassname","ResetPasswordPage","interruptPasswordResettingWorkflow","newPassword","approvalCode","ProtectedRoute","rest","AppBody","locationState","isItPageRefresh","action","styles","goBack","MenuItem","Icon","isActive","text","text_color_inactive","role","AppHeader","mainPageMatch","feedPageMatch","profilePageMatch","BurgerIcon","isExact","ListIcon","Boolean","ProfileIcon","App","ingredientsError","autoLoginPhase","doAutoLogin","subscribeForOrders","AutoLoginPhase","app","basename","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","store","document","getElementById","authRefreshTokenKey","cookiesCtrl","Cookies","authenticationSideEffect","cookies","cookieName","cookieValue","localStorage","setItem","getAccessSchemaAndToken","getRefreshToken","authRefreshToken","setUser","getTime","generateIngredientId","uuidV4","initialState","orderDetailsError","calcTotal","buildIdToActualIngredientsCountMap","actualIngredient","createAsyncThunk","apiFetchIngredients","apiPlaceAnOrder","createSlice","reducers","payload","newValue","splice","moveIngredient","fromIndex","toIndex","actualIngredientsFromState","idToRemove","removableIngredients","extraReducers","builder","addCase","reducer","actions","chunkCodeToChunkWsDataMap","wsActionTypes","wsCloseConnection","WsActionType","wsConnectionSuccess","wsConnectionError","wsConnectionClose","wsGetMessage","wsOpenConnection","wsSendMessage","generateActionTypes","subscribe","unsubscribe","urlAndWaActionTypesPairs","values","chunkWsData","fromEntries","waActionType","actionType","apiGetUserData","apiRefreshTokens","apiLogin","apiLogout","apiRegisterUser","apiRequestNewPasswordSetting","apiRequestPasswordResettingForEmail","apiUpdateUserData","requestingApprovalCode","removeItem","remove","resetUser","socketMiddlewareFabric","socket","next","WebSocket","onopen","onmessage","event","serializedData","parse","onerror","onclose","close","send","configureStore","devTools","middleware","getDefaultMiddleware","concat","burgerReducer","ordersReducer","userReducer","useDispatch","func","cmp","useSelector","BurgerConstructorItem","canDrag","hover","draggableIndex","setImmediate","closest","handleClose","thumbnail"],"mappings":"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","file":"static/js/main.9b1f2587.chunk.js","sourcesContent":["export interface AdditionalAction {\n  title: string;\n  url: string;\n  urlTitle: string;\n}\n\nexport enum ActualIngredientType {\n  top = 'top',\n  bottom = 'bottom',\n}\n\nexport type ActualIngredient_t = {\n  id: string;\n  refId: string;\n  isLocked?: boolean;\n  type?: ActualIngredientType;\n};\n\nexport enum DraggableTypes {\n  ingredient = 'ingredient',\n  actualIngredient = 'actualIngredient',\n}\n\nexport enum IngredientType {\n  bun = 'bun',\n  sauce = 'sauce',\n  main = 'main',\n}\n\nexport type Ingredient_t = {\n  _id: string;\n  name: string;\n  type: IngredientType;\n  proteins: number;\n  fat: number;\n  carbohydrates: number;\n  calories: number;\n  price: number;\n  image: string;\n  image_mobile: string;\n  image_large: string;\n  __v: number;\n};\n\nexport type IngredientDragItem = {\n  refId: Ingredient_t['_id'];\n  type: IngredientType;\n};\n\nexport type ActualIngredientDragItem = {\n  index: number;\n};\n\nexport enum OrderStatus_t {\n  created = 'created',\n  pending = 'pending',\n  done = 'done',\n}\n\nexport type OrderDetails_t = {\n  id: number;\n  status: OrderStatus_t;\n  message: string;\n};\n\nexport interface User {\n  email: string;\n  name: string;\n}\n\nexport interface RefreshTokensResponse {\n  accessSchema: string;\n  accessToken: string;\n  refreshToken: string;\n}\n\nexport interface UserResponse {\n  user: User;\n}\n\nexport type AuthUserResponse = RefreshTokensResponse & UserResponse;\n\nexport interface Order {\n  _id: string;\n  ingredients: string[];\n  status: OrderStatus_t;\n  name: string;\n  createdAt: string;\n  updatedAt: string;\n  number: number;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-status\":\"style_order-status__2JeIy\",\"order-status_done\":\"style_order-status_done__1xhid\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal-overlay\":\"style_modal-overlay__v0yzo\",\"modal-overlay_interactive\":\"style_modal-overlay_interactive__1pDN1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu-item\":\"style_menu-item__3CXGR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed\":\"style_feed__3FRNS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-ingredient-type\":\"style_burger-ingredient-type__MQwyq\",\"burger-ingredient-type__ingredient-list\":\"style_burger-ingredient-type__ingredient-list__lsh46\",\"burger-ingredient-type__ingredient-details\":\"style_burger-ingredient-type__ingredient-details__3Z88b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-body\":\"style_app-body__2ijFH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"style_app__1uR4E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"page-style_page__3yGBB\"};","export const apiHostUrl = 'https://norma.nomoreparties.space';\n","import {\n  AuthUserResponse,\n  Ingredient_t,\n  OrderDetails_t,\n  OrderStatus_t,\n  RefreshTokensResponse,\n  User,\n  UserResponse,\n} from '../../types';\nimport { apiHostUrl } from './consts';\n\nconst getAccessSchemaAndTokenAndRefreshToken = (\n  response: any\n): RefreshTokensResponse => {\n  const { accessToken: accessTokenWithSchema, refreshToken } = response;\n  const [accessSchema, accessToken] = accessTokenWithSchema.split(' ');\n\n  return {\n    accessSchema,\n    accessToken,\n    refreshToken,\n  };\n};\n\nexport const fetchIngredients = async (): Promise<Ingredient_t[]> => {\n  const response = await fetch(`${apiHostUrl}/api/ingredients`);\n  const result = await response.json();\n\n  if (result.success === true) {\n    return result.data;\n  } else {\n    throw new Error(\"Can't get data from server\");\n  }\n};\n\ninterface LoginRequestParams {\n  email: string;\n  password: string;\n}\n\nexport const login = async ({\n  email,\n  password,\n}: LoginRequestParams): Promise<AuthUserResponse> => {\n  const response = await fetch(`${apiHostUrl}/api/auth/login`, {\n    body: JSON.stringify({ email, password }),\n    headers: new Headers([['Content-Type', 'application/json']]),\n    method: 'POST',\n  });\n  const result = await response.json();\n\n  if (result.success !== true) {\n    throw new Error(\"Can't get data from server\");\n  }\n\n  const {\n    user: { email: userEmailFromServer, name: userNameFromServer },\n  } = result;\n\n  return {\n    ...getAccessSchemaAndTokenAndRefreshToken(result),\n    user: {\n      email: userEmailFromServer,\n      name: userNameFromServer,\n    },\n  };\n};\n\nexport const logout = async ({\n  refreshToken,\n}: Pick<RefreshTokensResponse, 'refreshToken'>): Promise<void> => {\n  const response = await fetch(`${apiHostUrl}/api/auth/logout`, {\n    body: JSON.stringify({ token: refreshToken }),\n    headers: new Headers([['Content-Type', 'application/json']]),\n    method: 'POST',\n  });\n  const result = await response.json();\n\n  if (result.success !== true) {\n    throw new Error(\"Can't get data from server\");\n  }\n};\n\nexport const placeAnOrder = async ({\n  ingredients,\n  auth: { accessSchema, accessToken },\n}: {\n  ingredients: Ingredient_t['_id'][];\n} & GetUserDataParams): Promise<OrderDetails_t> => {\n  const response = await fetch(`${apiHostUrl}/api/orders`, {\n    body: JSON.stringify({ ingredients }),\n    headers: new Headers([\n      ['Content-Type', 'application/json'],\n      ['Authorization', `${accessSchema} ${accessToken}`],\n    ]),\n    method: 'POST',\n  });\n  const result = await response.json();\n\n  if (result.success === true) {\n    return {\n      id: result.order.number,\n      message: 'Дождитесь готовности на орбитальной станции',\n      status: OrderStatus_t.pending,\n    };\n  } else {\n    throw new Error(\"Can't get data from server\");\n  }\n};\n\nexport const refreshTokens = async ({\n  refreshToken: token,\n}: Pick<\n  RefreshTokensResponse,\n  'refreshToken'\n>): Promise<RefreshTokensResponse> => {\n  const response = await fetch(`${apiHostUrl}/api/auth/token`, {\n    body: JSON.stringify({ token }),\n    headers: new Headers([['Content-Type', 'application/json']]),\n    method: 'POST',\n  });\n  const result = await response.json();\n\n  if (result.success === true) {\n    return getAccessSchemaAndTokenAndRefreshToken(result);\n  } else {\n    throw new Error(\"Can't get data from server\");\n  }\n};\n\ninterface RegisterUserRequestParams {\n  email: string;\n  name: string;\n  password: string;\n}\n\nexport const registerUser = async ({\n  email,\n  name,\n  password,\n}: RegisterUserRequestParams): Promise<AuthUserResponse> => {\n  const response = await fetch(`${apiHostUrl}/api/auth/register`, {\n    body: JSON.stringify({ email, name, password }),\n    headers: new Headers([['Content-Type', 'application/json']]),\n    method: 'POST',\n  });\n  const result = await response.json();\n\n  if (result.success !== true) {\n    throw new Error(\"Can't get data from server\");\n  }\n\n  const {\n    accessToken: accessTokenWithSchema,\n    refreshToken,\n    user: { email: userEmailFromServer, name: userNameFromServer },\n  } = result;\n\n  const [accessSchema, accessToken] = accessTokenWithSchema.split(' ');\n\n  return {\n    accessSchema,\n    accessToken,\n    refreshToken,\n    user: {\n      email: userEmailFromServer,\n      name: userNameFromServer,\n    },\n  };\n};\n\ninterface RequestPasswordResettingForEmailParams {\n  email: string;\n}\n\nexport const requestPasswordResettingForEmail = async ({\n  email,\n}: RequestPasswordResettingForEmailParams): Promise<void> => {\n  const response = await fetch(`${apiHostUrl}/api/password-reset`, {\n    body: JSON.stringify({ email }),\n    headers: new Headers([['Content-Type', 'application/json']]),\n    method: 'POST',\n  });\n  const result = await response.json();\n\n  if (result.success !== true) {\n    throw new Error(\"Can't get data from server\");\n  }\n};\n\ninterface RequestNewPasswordSettingParams {\n  password: string;\n  token: string;\n}\n\nexport const requestNewPasswordSetting = async ({\n  password,\n  token,\n}: RequestNewPasswordSettingParams): Promise<void> => {\n  const response = await fetch(`${apiHostUrl}/api/password-reset/reset`, {\n    body: JSON.stringify({ password, token }),\n    headers: new Headers([['Content-Type', 'application/json']]),\n    method: 'POST',\n  });\n  const result = await response.json();\n\n  if (result.success !== true) {\n    throw new Error(\"Can't get data from server\");\n  }\n};\n\nexport type AccessSchemaWithToken = Pick<\n  RefreshTokensResponse,\n  'accessSchema' | 'accessToken'\n>;\n\ntype GetUserDataParams = {\n  auth: AccessSchemaWithToken;\n};\n\nexport const getUserData = async ({\n  auth: { accessSchema, accessToken },\n}: GetUserDataParams): Promise<User> => {\n  const response = await fetch(`${apiHostUrl}/api/auth/user`, {\n    headers: new Headers([\n      ['Content-Type', 'application/json'],\n      ['Authorization', `${accessSchema} ${accessToken}`],\n    ]),\n    method: 'GET',\n  });\n  const result = await response.json();\n\n  if (result.success !== true) {\n    throw new Error(\"Can't get data from server\");\n  }\n\n  return result.user;\n};\n\ntype UpdateUserDataParams = {\n  auth: AccessSchemaWithToken;\n  data: {\n    email: string;\n    name: string;\n    password: string;\n  };\n};\n\nexport const updateUserData = async ({\n  auth: { accessSchema, accessToken },\n  data: { email, name, password },\n}: UpdateUserDataParams): Promise<UserResponse> => {\n  const response = await fetch(`${apiHostUrl}/api/auth/user`, {\n    body: JSON.stringify({ name, email, password }),\n    headers: new Headers([\n      ['Content-Type', 'application/json'],\n      ['Authorization', `${accessSchema} ${accessToken}`],\n    ]),\n    method: 'PATCH',\n  });\n  const result = await response.json();\n\n  if (result.success !== true) {\n    throw new Error(\"Can't get data from server\");\n  }\n\n  return {\n    user: result.user,\n  };\n};\n\nexport { apiHostUrl };\n","import { OrderStatus_t } from './types';\n\nexport const orderStatusToStatusTitleMap: {\n  [key in OrderStatus_t]: string;\n} = {\n  [OrderStatus_t.created]: 'Создан',\n  [OrderStatus_t.pending]: 'В работе',\n  [OrderStatus_t.done]: 'Готов',\n};\n\nconst allLexemes = {\n  ru: {\n    assembleABurger: 'Соберите бургер',\n    bottom: 'низ',\n    buns: 'Булки',\n    burgerFillings: 'Начинки',\n    calories: 'Калории, ккал',\n    carbohydrates: 'Углеводы, г',\n    constructor: 'Конструктор',\n    fat: 'Жиры, г',\n    ingredientDetails: 'Детали ингредиента',\n    orderDetails: 'Информация о заказе',\n    orderId: 'Идентификатор заказа',\n    orderIngredients: 'Состав',\n    orderList: 'Лента заказов',\n    ordersTotalCount: 'Выполнено за все время',\n    ordersTodayTotalCount: 'Выполнено за сегодня',\n    placeAnOrder: 'Оформить заказ',\n    profile: 'Личный кабинет',\n    proteins: 'Белки, г',\n    sauces: 'Соусы',\n    top: 'верх',\n    noInformation: 'Нет информации',\n    forms: {\n      __common__: {\n        __errors__: {\n          required: 'Заполните обязательное поле',\n          passwordLength: 'Пароль должен содержать как минимум 6 символов',\n        },\n        doHidePassword: 'Скрыть пароль',\n        doLogin: 'Войти',\n        doRegister: 'Зарегистрироваться',\n        doShowPassword: 'Показать пароль',\n        email: 'E-mail',\n        haveYouRememberedYourPassword: 'Вспомнили пароль?',\n        name: 'Имя',\n        password: 'Пароль',\n        resetForm: 'Отмена',\n      },\n      forgotPassword: {\n        doResetPassword: 'Восстановить',\n        provideYourEmail: 'Укажите e-mail',\n        title: 'Восстановление пароля',\n      },\n      login: {\n        areYouForgetYourPassword: 'Забыли пароль?',\n        areYouTheNewUser: 'Вы новый пользователь?',\n        doResetYourPassword: 'Восстановить пароль',\n        title: 'Вход',\n      },\n      profile: {\n        doEdit: 'Изменить',\n        email: 'Логин',\n      },\n      register: {\n        areYouRegisteredAlready: 'Уже зарегистрированы?',\n        title: 'Регистрация',\n      },\n      resetPassword: {\n        doReset: 'Сохранить',\n        provideApprovalCode: 'Введите код из письма',\n        provideYourNewPassword: 'Введите новый пароль',\n        title: 'Восстановление пароля',\n      },\n    },\n  },\n};\n\nexport const lexemes = allLexemes.ru;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-constructor\":\"style_burger-constructor__3a8p5\",\"burger-constructor_is-request\":\"style_burger-constructor_is-request__2YFBf\",\"placingOrder\":\"style_placingOrder__1cLXy\",\"burger-constructor_is-empty\":\"style_burger-constructor_is-empty__1F7G8\",\"burger-constructor__list\":\"style_burger-constructor__list__oWYKC\",\"burger-constructor_is-can-drop\":\"style_burger-constructor_is-can-drop__QK3ua\",\"burger-constructor_is-drag-over\":\"style_burger-constructor_is-drag-over__--itU\",\"burger-constructor__filling\":\"style_burger-constructor__filling__2agyk\",\"burger-constructor__total-wrapper\":\"style_burger-constructor__total-wrapper__21Smn\",\"burger-constructor__order-details\":\"style_burger-constructor__order-details__12HWu\"};","import cs from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Ingredient_t } from '../../types';\nimport ingredientIconStyles from './style.module.css';\n\nexport enum IngredientIconRenderType {\n  div = 'div',\n  li = 'li',\n}\n\nconst ingredientIconClassname = 'ingredient-icon';\n\nconst IngredientIcon = ({\n  className,\n  ingredient,\n  moreIngredientsCount,\n  tag,\n}: {\n  className?: string;\n  ingredient: Ingredient_t;\n  moreIngredientsCount?: number;\n  tag?: IngredientIconRenderType;\n}) => {\n  const Tag = tag!;\n\n  return (\n    <Tag\n      className={cs(ingredientIconStyles[ingredientIconClassname], className)}\n    >\n      <img\n        alt={ingredient.name}\n        className={ingredientIconStyles[`${ingredientIconClassname}__image`]}\n        src={ingredient.image}\n      />\n      {moreIngredientsCount ? (\n        <div\n          className={cs(\n            ingredientIconStyles[\n              `${ingredientIconClassname}__more-ingredients-count`\n            ],\n            'text text_type_digits-default text_type_main-medium'\n          )}\n        >\n          +{moreIngredientsCount}\n        </div>\n      ) : null}\n    </Tag>\n  );\n};\n\nIngredientIcon.propTypes = {\n  ingredient: PropTypes.object.isRequired,\n  moreIngredientsCount: PropTypes.number,\n  tag: PropTypes.oneOf([\n    IngredientIconRenderType.div,\n    IngredientIconRenderType.li,\n  ]),\n};\n\nIngredientIcon.defaultProps = {\n  tag: IngredientIconRenderType.div,\n};\n\nexport { IngredientIcon };\n","import { useMemo } from 'react';\nimport { useAppSelector } from '../services/store';\nimport { Ingredient_t, IngredientType, Order } from '../types';\n\nconst getOrderIngredientEntries = (ingredients: Ingredient_t[]) => {\n  const bun = ingredients.find(({ type }) => type === IngredientType.bun);\n  const ingredientsWithoutABun = ingredients.filter(\n    ({ type }) => type !== IngredientType.bun\n  );\n  const ingredientToQuantityMap: Map<Ingredient_t, number> = new Map();\n\n  if (bun) {\n    ingredientToQuantityMap.set(bun, 2);\n  }\n\n  ingredientsWithoutABun.forEach((ingredient) => {\n    if (!ingredientToQuantityMap.has(ingredient)) {\n      ingredientToQuantityMap.set(ingredient, 0);\n    }\n\n    const currentQuantity = ingredientToQuantityMap.get(ingredient)!;\n\n    ingredientToQuantityMap.set(ingredient, currentQuantity + 1);\n  });\n\n  return [...ingredientToQuantityMap.entries()];\n};\n\nexport const useOrderIngredients = ({\n  limit = Infinity,\n  order,\n}: {\n  limit?: number;\n  order: Order;\n}) => {\n  const idToIngredientMap = useAppSelector(\n    (state) => state.burger.idToIngredientMap\n  );\n  return useMemo(() => {\n    if (!order) {\n      return {\n        ingredientQuantityPairs: [],\n        moreIngredientsCount: 0,\n        totalPrice: 0,\n      };\n    }\n\n    const ingredients = order.ingredients.map(\n      (ingredientId) => idToIngredientMap[ingredientId]\n    );\n    const areThereSomeUndefinedIngredients = ingredients.some(\n      (ingredient) => ingredient == null\n    );\n\n    if (areThereSomeUndefinedIngredients) {\n      return {\n        ingredientQuantityPairs: [],\n        isItValid: false,\n        moreIngredientsCount: ingredients.length,\n        totalPrice: NaN,\n      };\n    }\n\n    const ingredientQuantityPairs = getOrderIngredientEntries(ingredients);\n\n    return {\n      ingredientQuantityPairs: ingredientQuantityPairs.slice(0, limit),\n      isItValid: true,\n      moreIngredientsCount:\n        limit < ingredientQuantityPairs.length\n          ? ingredientQuantityPairs.length - limit\n          : 0,\n      totalPrice: ingredientQuantityPairs.reduce(\n        (result, [{ price }, quantity]) => result + price * quantity,\n        0\n      ),\n    };\n  }, [idToIngredientMap, limit, order]);\n};\n","import { formatRelative } from 'date-fns';\nimport { ru } from 'date-fns/locale';\n\nexport const formatOrderDate = (date: string) => {\n  return formatRelative(new Date(date), new Date(), {\n    locale: ru,\n  });\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport style from './style.module.css';\n\nconst Amount = ({\n  amount,\n  className,\n  isTotal,\n}: {\n  amount: number;\n  className?: string;\n  isTotal?: boolean;\n}) => (\n  <div\n    className={cs(\n      style['amount'],\n      'text',\n      {\n        [style['amount_type_total']]: isTotal,\n        'text_type_digits-default': !isTotal,\n        'text_type_digits-medium': isTotal,\n      },\n      className\n    )}\n  >\n    <div className={style['amount__amount']}>{amount}</div>\n    <div className={style['amount__currency-wrapper']}>\n      <CurrencyIcon type={'primary'} />\n    </div>\n  </div>\n);\n\nAmount.propTypes = {\n  amount: PropTypes.number.isRequired,\n  className: PropTypes.string,\n  isTotal: PropTypes.bool,\n};\n\nexport { Amount };\n","import cs from 'classnames';\nimport React from 'react';\nimport { orderStatusToStatusTitleMap } from '../../consts';\nimport { OrderStatus_t } from '../../types';\nimport orderStyles from './style.module.css';\n\nconst orderStatusClassname = 'order-status';\n\nconst OrderStatus = ({ status }: { status: OrderStatus_t }) => (\n  <div\n    className={cs(orderStyles[orderStatusClassname], {\n      [orderStyles[`${orderStatusClassname}_${OrderStatus_t.done}`]]:\n        status === OrderStatus_t.done,\n    })}\n  >\n    {orderStatusToStatusTitleMap[status]}\n  </div>\n);\n\nexport { OrderStatus };\n","import cs from 'classnames';\nimport React from 'react';\nimport { Ingredient_t } from '../../../types';\nimport { Amount } from '../../amount';\nimport { IngredientIcon } from '../../ingredient-icon';\nimport ingredientAndPriceStyles from './style.module.css';\n\nconst ingredientAndPriceClassname = 'ingredient-and-price';\n\nconst IngredientAndPrice = ({\n  ingredient,\n  quantity,\n}: {\n  ingredient: Ingredient_t;\n  quantity: number;\n}) => (\n  <li\n    className={cs(\n      ingredientAndPriceStyles[ingredientAndPriceClassname],\n      'mr-6'\n    )}\n  >\n    <IngredientIcon ingredient={ingredient} />\n    <div className={'pl-4'} />\n    <div>{ingredient.name}</div>\n    <div className={'pl-4'} />\n    <div\n      className={\n        ingredientAndPriceStyles[\n          `${ingredientAndPriceClassname}__quantity-and-price-wrapper`\n        ]\n      }\n    >\n      <div\n        className={\n          ingredientAndPriceStyles[`${ingredientAndPriceClassname}__quantity`]\n        }\n      >\n        {quantity} x{' '}\n      </div>\n      <Amount amount={ingredient.price * quantity} />\n    </div>\n  </li>\n);\n\nexport { IngredientAndPrice };\n","import cs from 'classnames';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { lexemes } from '../../consts';\nimport { useOrderIngredients } from '../../hooks';\nimport { formatOrderDate } from '../../helpers';\nimport { useAppSelector } from '../../services/store';\nimport { Amount } from '../amount';\nimport { OrderStatus } from '../order-status';\nimport { IngredientAndPrice } from './ingredients-and-price';\nimport orderDetailsStyles from './style.module.css';\n\nconst orderDetailsClassname = 'order-details';\n\nconst OrderDetails = () => {\n  const { id } = useParams() as { id: string };\n  const orders = useAppSelector((state) => state.orders.orders);\n  const order = orders.find(({ _id }) => id === _id)!;\n  const { ingredientQuantityPairs, isItValid, totalPrice } =\n    useOrderIngredients({\n      order,\n    });\n\n  if (!order) {\n    return null;\n  }\n\n  return (\n    <div className={orderDetailsStyles[orderDetailsClassname]}>\n      <div\n        className={cs(\n          orderDetailsStyles[`${orderDetailsClassname}__number`],\n          'text text_type_digits-default'\n        )}\n      >\n        #{order.number}\n      </div>\n      <div className={'pt-10'} />\n      <div className={'text text_type_main-medium'}>{order.name}</div>\n      <div className={'pt-3'} />\n      <OrderStatus status={order.status} />\n      <div className={'pt-15'} />\n      <div className={'text text_type_main-medium'}>\n        {lexemes.orderIngredients}:\n      </div>\n      <div className={'pt-6'} />\n      {isItValid ? (\n        <ul\n          className={cs(\n            orderDetailsStyles[`${orderDetailsClassname}__ingredients`],\n            'custom-scroll'\n          )}\n        >\n          {ingredientQuantityPairs.map(([ingredient, quantity], ix) => (\n            <React.Fragment key={ix}>\n              <IngredientAndPrice ingredient={ingredient} quantity={quantity} />\n              {ix + 1 < ingredientQuantityPairs.length ? (\n                <div className={'pt-4'} />\n              ) : null}\n            </React.Fragment>\n          ))}\n        </ul>\n      ) : (\n        <div className={'text text_color_error'}>{lexemes.noInformation}</div>\n      )}\n      <div className={'pt-10'} />\n      <div\n        className={cs(\n          orderDetailsStyles[\n            `${orderDetailsClassname}__date-and-price-wrapper`\n          ],\n          'mr-6'\n        )}\n      >\n        <div\n          className={cs(\n            orderDetailsStyles[`${orderDetailsClassname}__date`],\n            'text text_color_inactive'\n          )}\n        >\n          {formatOrderDate(order.createdAt)}\n        </div>\n        {isItValid ? (\n          <div\n            className={orderDetailsStyles[`${orderDetailsClassname}__price`]}\n          >\n            <Amount amount={totalPrice} />\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport { OrderDetails };\n","import cs from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { ReactNode, useMemo } from 'react';\nimport { lexemes, orderStatusToStatusTitleMap } from '../../consts';\nimport { Order, OrderStatus_t } from '../../types';\nimport feedActivityStyles from './style.module.css';\n\nconst feedActivityClassname = 'feed-activity';\n\nconst FeedActivity = ({\n  className,\n  orders,\n  total,\n  totalToday,\n}: {\n  className?: string;\n  orders: Order[];\n  total?: number;\n  totalToday?: number;\n}) => {\n  const statusToOrdersMap = useMemo(() => {\n    return orders.reduce(\n      (result, order) => {\n        const { status } = order;\n\n        if (!result.hasOwnProperty(status)) {\n          result[status] = [];\n        }\n\n        result[status].push(order);\n\n        return result;\n      },\n      {} as {\n        [key in OrderStatus_t]: Order[];\n      }\n    );\n  }, [orders]);\n  const statusToStatusUlsMap = [\n    OrderStatus_t.created,\n    OrderStatus_t.pending,\n    OrderStatus_t.done,\n  ].reduce((result, status) => {\n    const orders = statusToOrdersMap[status];\n\n    // INFO: (mellonis) I am completely sure that the useMemo hook will be called the required number of times,\n    //       so I added the eslint disable command\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    result[status] = useMemo(() => {\n      return orders\n        ? [orders.slice(0, 5), orders.slice(5, 10)].map((orderList, ix) =>\n            orderList.length > 0 ? (\n              <React.Fragment key={ix}>\n                <ul\n                  key={ix}\n                  className={cs(\n                    feedActivityStyles[`${feedActivityClassname}__orders`],\n                    'text text_type_digits-default'\n                  )}\n                >\n                  {orderList.map(({ _id: id, number }, ix) => (\n                    <React.Fragment key={id}>\n                      {ix > 0 ? <div className={'pt-2'} /> : null}\n                      <li\n                        className={cs(\n                          feedActivityStyles[`${feedActivityClassname}__order`]\n                        )}\n                      >\n                        {number}\n                      </li>\n                    </React.Fragment>\n                  ))}\n                </ul>\n              </React.Fragment>\n            ) : null\n          )\n        : null;\n    }, [orders]);\n\n    return result;\n  }, {} as { [key in OrderStatus_t]: ReactNode });\n\n  return (\n    <div\n      className={cs(\n        feedActivityStyles[feedActivityClassname],\n        'custom-scroll',\n        className\n      )}\n    >\n      <div\n        className={\n          feedActivityStyles[`${feedActivityClassname}__orders-by-status`]\n        }\n      >\n        {[OrderStatus_t.done, OrderStatus_t.pending].map((status, ix) => (\n          <React.Fragment key={status}>\n            {ix > 0 ? <div className={'pb-6'} /> : null}\n            <div\n              className={cs(\n                feedActivityStyles[`${feedActivityClassname}__orders-list`],\n                feedActivityStyles[\n                  `${feedActivityClassname}__orders-list_${status}`\n                ]\n              )}\n            >\n              <div className={'pb-6'}>\n                {orderStatusToStatusTitleMap[status]}:\n              </div>\n              <div\n                className={\n                  feedActivityStyles[`${feedActivityClassname}__orders-wrapper`]\n                }\n              >\n                {statusToStatusUlsMap[status]}\n              </div>\n            </div>\n          </React.Fragment>\n        ))}\n      </div>\n      {total ? (\n        <>\n          <div className={'pt-15'} />\n          <div className={'text text_type_main-medium'}>\n            {lexemes.ordersTotalCount}:\n          </div>\n          <div\n            className={cs(\n              feedActivityStyles[\n                `${feedActivityClassname}__orders-total-count`\n              ],\n              'text text_type_digits-large'\n            )}\n          >\n            {total}\n          </div>\n        </>\n      ) : null}\n      {totalToday ? (\n        <>\n          <div className={'pt-15'} />\n          <div className={'text text_type_main-medium'}>\n            {lexemes.ordersTodayTotalCount}:\n          </div>\n          <div\n            className={cs(\n              feedActivityStyles[\n                `${feedActivityClassname}__orders-total-count`\n              ],\n              'text text_type_digits-large'\n            )}\n          >\n            {totalToday}\n          </div>\n        </>\n      ) : null}\n    </div>\n  );\n};\n\nFeedActivity.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array,\n  total: PropTypes.number,\n  totalToday: PropTypes.number,\n};\n\nexport { FeedActivity };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { lexemes } from '../../../../consts';\nimport { useOrderIngredients } from '../../../../hooks';\nimport { Order } from '../../../../types';\nimport { Amount } from '../../../amount';\nimport {\n  IngredientIcon,\n  IngredientIconRenderType,\n} from '../../../ingredient-icon';\nimport ingredientsAndPriceStyles from './style.module.css';\n\nconst ingredientsAndPriceClassname = 'ingredients-and-price';\nconst ingredientsToRenderLimit = 6;\n\nconst IngredientsAndPrice = ({ order }: { order: Order }) => {\n  const {\n    ingredientQuantityPairs,\n    isItValid,\n    moreIngredientsCount,\n    totalPrice,\n  } = useOrderIngredients({\n    limit: 6,\n    order,\n  });\n\n  return (\n    <div className={ingredientsAndPriceStyles[ingredientsAndPriceClassname]}>\n      {isItValid ? (\n        <>\n          <ul\n            className={\n              ingredientsAndPriceStyles[\n                `${ingredientsAndPriceClassname}__ingredients`\n              ]\n            }\n          >\n            {ingredientQuantityPairs.map(([ingredient], ix) => (\n              <IngredientIcon\n                key={ingredient._id}\n                className={\n                  ingredientsAndPriceStyles[\n                    `${ingredientsAndPriceClassname}__ingredient`\n                  ]\n                }\n                ingredient={ingredient}\n                moreIngredientsCount={\n                  moreIngredientsCount > 0 &&\n                  ix + 1 === ingredientsToRenderLimit\n                    ? moreIngredientsCount\n                    : undefined\n                }\n                tag={IngredientIconRenderType.li}\n              />\n            ))}\n          </ul>\n          <div className={'pl-6'} />\n          <div\n            className={\n              ingredientsAndPriceStyles[\n                `${ingredientsAndPriceClassname}__price`\n              ]\n            }\n          >\n            <Amount amount={totalPrice} />\n          </div>\n        </>\n      ) : (\n        <div className={'text text_color_error'}>{lexemes.noInformation}</div>\n      )}\n    </div>\n  );\n};\n\nIngredientsAndPrice.propTypes = {\n  order: PropTypes.object.isRequired,\n};\n\nexport { IngredientsAndPrice };\n","import cs from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { formatOrderDate } from '../../../helpers';\nimport { Order as OrderType } from '../../../types';\nimport { OrderStatus } from '../../order-status';\nimport { IngredientsAndPrice } from './ingredients-and-price';\nimport orderStyles from './style.module.css';\n\nconst orderClassname = 'order';\n\nconst Order = ({\n  order,\n  renderStatus,\n}: {\n  order: OrderType;\n  renderStatus?: boolean;\n}) => {\n  const location = useLocation();\n  const history = useHistory();\n\n  return (\n    <li\n      className={cs(orderStyles[orderClassname], 'p-6 mr-2')}\n      onClick={() => {\n        history.push({\n          pathname: `/feed/${order._id}`,\n          state: {\n            backgroundPageLocation: location,\n          },\n        });\n      }}\n    >\n      <div\n        className={orderStyles[`${orderClassname}__number-and-date-wrapper`]}\n      >\n        <div\n          className={cs(\n            orderStyles[`${orderClassname}__number`],\n            'text text_type_digits-default'\n          )}\n        >\n          #{order.number}\n        </div>\n        <div\n          className={cs(\n            orderStyles[`${orderClassname}__date`],\n            'text text_color_inactive'\n          )}\n        >\n          {formatOrderDate(order.createdAt)}\n        </div>\n      </div>\n      <div\n        className={cs(\n          orderStyles[`${orderClassname}__title`],\n          'pt-6 text text_type_main-medium'\n        )}\n      >\n        {order.name}\n      </div>\n      {renderStatus ? (\n        <>\n          <div className={'pt-2'} />\n          <OrderStatus status={order.status} />\n        </>\n      ) : null}\n      <div className={'pt-6'} />\n      <IngredientsAndPrice order={order} />\n    </li>\n  );\n};\n\nOrder.propTypes = {\n  order: PropTypes.object.isRequired,\n  renderStatus: PropTypes.bool,\n};\n\nOrder.defaultProps = {\n  renderStatus: false,\n};\n\nexport { Order };\n","import cs from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Order } from '../../types';\nimport { Order as OrderComponent } from './order';\nimport feedStyles from './style.module.css';\n\nconst Feed = ({\n  className,\n  orders,\n  renderStatus,\n}: {\n  className?: string;\n  orders: Order[];\n  renderStatus?: boolean;\n}) => {\n  return (\n    <ul className={cs(feedStyles['feed'], 'custom-scroll', className)}>\n      {orders.map((order, ix) => (\n        <React.Fragment key={order._id}>\n          <OrderComponent order={order} renderStatus={renderStatus} />\n          {ix + 1 < orders.length ? <div className={'pt-4'} /> : null}\n        </React.Fragment>\n      ))}\n    </ul>\n  );\n};\n\nFeed.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired,\n  renderStatus: PropTypes.bool,\n};\n\nFeed.defaultProps = {\n  renderStatus: false,\n};\n\nexport { Feed };\n","import { TICons } from '@ya.praktikum/react-developer-burger-ui-components/dist/ui/icons';\nimport React, { ReactNode } from 'react';\nimport { Control, Controller } from 'react-hook-form';\nimport {\n  Input,\n  PasswordInput,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport { Link } from 'react-router-dom';\n\nimport { AdditionalAction } from '../../types';\n\nexport const produceAdditionalActionReactNode: (\n  value: AdditionalAction,\n  index: number,\n  array: AdditionalAction[]\n) => ReactNode = ({ title, url, urlTitle }, index) => (\n  <React.Fragment key={index}>\n    {index > 0 ? <div className={'pt-4'} /> : null}\n    <div>\n      <span\n        dangerouslySetInnerHTML={{\n          __html: title,\n        }}\n      />\n      &nbsp;\n      <Link\n        to={url}\n        dangerouslySetInnerHTML={{\n          __html: urlTitle,\n        }}\n      />\n    </div>\n  </React.Fragment>\n);\n\nexport enum ComponentInputType {\n  input = 'input',\n  passwordInput = 'passwordInput',\n}\n\ninterface InputDeclaration {\n  componentType: ComponentInputType.input;\n  icon?: keyof TICons;\n  initialValue?: string;\n  name: string;\n  placeholder?: string;\n  type?: React.ComponentProps<typeof Input>['type'];\n}\n\ninterface PasswordInputDeclaration1 {\n  componentType: ComponentInputType.passwordInput;\n  initialValue?: string;\n  name: string;\n  placeholder?: string;\n}\n\ntype InputDeclarations = InputDeclaration | PasswordInputDeclaration1;\n\nexport type { InputDeclarations as InputDeclaration };\n\nexport const produceInputReactNode: (\n  value: InputDeclarations,\n  index: number,\n  array: InputDeclarations[]\n) => ReactNode = function (this: Control, inputDeclaration, ix) {\n  let component: ReactNode;\n\n  switch (inputDeclaration.componentType) {\n    case ComponentInputType.input: {\n      const { icon, name, placeholder, type = 'text' } = inputDeclaration;\n\n      component = (\n        <Controller\n          control={this}\n          name={name as 'email' | 'name' | 'password'}\n          render={({ field: { onChange, value } }) => (\n            <Input\n              icon={icon}\n              onChange={onChange}\n              placeholder={placeholder}\n              type={type}\n              value={value}\n            />\n          )}\n        />\n      );\n      break;\n    }\n    case ComponentInputType.passwordInput: {\n      const { name } = inputDeclaration;\n\n      component = (\n        <Controller\n          control={this}\n          name={name as 'email' | 'name' | 'password'}\n          render={({ field: { onChange, value } }) => (\n            <PasswordInput name={name} onChange={onChange} value={value} />\n          )}\n          // TODO: (mellonis) provide placeholder after @ya.praktikum/react-developer-burger-ui-components library is update\n        />\n      );\n      break;\n    }\n  }\n\n  return (\n    <React.Fragment key={ix}>\n      {ix > 0 ? <div className={'pt-6'} /> : null}\n      {component}\n    </React.Fragment>\n  );\n};\n","import cs from 'classnames';\nimport React from 'react';\nimport { FeedActivity } from '../../../components/feed-activity';\nimport { Feed as FeedComponent } from '../../../components/feed/intex';\nimport { lexemes } from '../../../consts';\nimport { useAppSelector } from '../../../services/store';\nimport feedPageStyles from './style.module.css';\n\nconst feedPageClassname = 'feed-page';\n\nconst FeedPage = () => {\n  const { orders, total, totalToday } = useAppSelector((state) => state.orders);\n\n  if (orders.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={feedPageStyles[feedPageClassname]}>\n      <div\n        className={cs(\n          feedPageStyles[`${feedPageClassname}__feed-wrapper`],\n          'pt-10  pb-5'\n        )}\n      >\n        <div\n          className={cs(\n            feedPageStyles[`${feedPageClassname}__title`],\n            'text text_type_main-large  pb-5'\n          )}\n        >\n          {lexemes.orderList}\n        </div>\n        <FeedComponent\n          className={feedPageStyles[`${feedPageClassname}__feed`]}\n          orders={orders}\n        />\n      </div>\n      <div\n        className={cs(feedPageStyles[`${feedPageClassname}__space`], 'pl-15')}\n      />\n      <div\n        className={cs(\n          feedPageStyles[`${feedPageClassname}__activity`],\n          'pt-25 pb-5 text'\n        )}\n      >\n        <FeedActivity orders={orders} total={total} totalToday={totalToday} />\n      </div>\n    </div>\n  );\n};\n\nexport { FeedPage };\n","import React from 'react';\nimport { Redirect, Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { OrderDetails } from '../../components/order-details';\nimport { FeedPage } from './feed';\n\nconst FeedPageSwitcher = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${path}`}>\n        <FeedPage />\n      </Route>\n      <Route path={`${path}/:id`}>\n        <OrderDetails />\n      </Route>\n      <Route>\n        <Redirect to={path} />\n      </Route>\n    </Switch>\n  );\n};\n\nexport { FeedPageSwitcher };\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport cs from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { MutableRefObject, useCallback, useMemo, useRef } from 'react';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { lexemes } from '../../consts';\n\nimport { AdditionalAction } from '../../types';\nimport {\n  ComponentInputType,\n  InputDeclaration,\n  produceAdditionalActionReactNode,\n  produceInputReactNode,\n} from './helpers';\n\nimport fromStyles from './style.module.css';\n\nconst Form = ({\n  additionalActions,\n  buttonTitle,\n  inputDeclarations,\n  isButtonHiddenOnNotModifiedForm,\n  onSubmit,\n  resetButtonTitle,\n  showErrors,\n  title,\n}: {\n  additionalActions?: AdditionalAction[];\n  buttonTitle?: string;\n  inputDeclarations: InputDeclaration[];\n  isButtonHiddenOnNotModifiedForm?: boolean;\n  onSubmit: SubmitHandler<any>;\n  resetButtonTitle?: string;\n  showErrors?: boolean;\n  title?: string;\n}) => {\n  const componentElementRef: MutableRefObject<HTMLFormElement | null> =\n    useRef(null);\n  const schema = useMemo(() => {\n    return yup.object().shape(\n      inputDeclarations.reduce(\n        (result, inputDeclaration) =>\n          Object.assign(result, {\n            [inputDeclaration.name]: (() => {\n              const isItPasswordField =\n                inputDeclaration.componentType ===\n                  ComponentInputType.passwordInput ||\n                inputDeclaration.name === 'password';\n\n              return isItPasswordField\n                ? yup\n                    .string()\n                    .min(\n                      6,\n                      `${lexemes.forms.__common__.__errors__.passwordLength} (${\n                        inputDeclaration.placeholder ?? inputDeclaration.name\n                      })`\n                    ) // INFO: (mellonis) empirical knowledge for a password value requirements\n                : yup\n                    .string()\n                    .required(\n                      `${lexemes.forms.__common__.__errors__.required} (${inputDeclaration.placeholder})`\n                    );\n            })(),\n          }),\n        {}\n      )\n    );\n  }, [inputDeclarations]);\n  const {\n    control,\n    handleSubmit,\n    formState: { errors, isDirty },\n    reset,\n  } = useForm({\n    defaultValues: inputDeclarations.reduce(\n      (result, { name, initialValue }) =>\n        Object.assign(result, { [name]: initialValue ?? '' }),\n      {}\n    ),\n    mode: 'onSubmit',\n    resolver: yupResolver(schema),\n  });\n  const onInvalidFormHandler = useCallback((errors) => {\n    console.error(errors);\n  }, []);\n  const onValidFormHandler = useCallback(\n    (...args) => {\n      const { current: componentElement } = componentElementRef;\n\n      if (!componentElement) {\n        return;\n      }\n\n      onSubmit.apply(null, args as any);\n    },\n    [onSubmit]\n  );\n  const onButtonClickHandler = useCallback(() => {\n    const { current: formElement } = componentElementRef;\n\n    if (formElement) {\n      formElement.dispatchEvent(new Event('submit'));\n    }\n  }, []);\n\n  const isButtonVisible =\n    buttonTitle &&\n    (!isButtonHiddenOnNotModifiedForm ||\n      (isButtonHiddenOnNotModifiedForm && isDirty));\n  const isResetButtonVisible = resetButtonTitle && isDirty;\n\n  return (\n    <form\n      ref={componentElementRef}\n      className={fromStyles['form']}\n      onSubmit={handleSubmit(onValidFormHandler, onInvalidFormHandler)}\n    >\n      {title ? (\n        <>\n          <div\n            className={fromStyles['form__header']}\n            dangerouslySetInnerHTML={{ __html: title }}\n          />\n          <div className={'pt-6'} />\n        </>\n      ) : null}\n      <div className={fromStyles['form__body']}>\n        {inputDeclarations.map(produceInputReactNode, control)}\n      </div>\n      {isDirty && showErrors && Object.keys(errors).length > 0 ? (\n        <>\n          <div className={'pt-6'} />\n          <ul className={cs(fromStyles['form__errors'], 'text_color_error')}>\n            {Object.entries(errors)\n              .sort(([fieldNameA], [fieldNameB]) =>\n                fieldNameA.localeCompare(fieldNameB)\n              )\n              .map(([fieldName, error]) => {\n                return (\n                  <li key={fieldName} className={fromStyles['form__error']}>\n                    {(error as { message?: string })?.message ?? 'unknown'}\n                  </li>\n                );\n              })}\n          </ul>\n        </>\n      ) : null}\n      {isButtonVisible || isResetButtonVisible ? (\n        <>\n          <div className={'pt-6'} />\n          <div className={fromStyles['form__buttons-container']}>\n            {isButtonVisible ? (\n              <div className={fromStyles['form__button-wrapper']}>\n                <Button type={'primary'} onClick={onButtonClickHandler}>\n                  {buttonTitle}\n                </Button>\n              </div>\n            ) : null}\n            {isButtonVisible && isResetButtonVisible ? (\n              <div className={'pl-6'} />\n            ) : null}\n            {isResetButtonVisible ? (\n              <div className={fromStyles['form__button-wrapper']}>\n                <Button type={'primary'} onClick={() => reset()}>\n                  {resetButtonTitle}\n                </Button>\n              </div>\n            ) : null}\n          </div>\n        </>\n      ) : null}\n      {additionalActions ? (\n        <>\n          <div className={'pt-20'} />\n          <div\n            className={cs(\n              fromStyles['form__additional-actions'],\n              'text_color_inactive'\n            )}\n          >\n            {additionalActions.map(produceAdditionalActionReactNode)}\n          </div>\n        </>\n      ) : null}\n    </form>\n  );\n};\n\nForm.propTypes = {\n  additionalActions: PropTypes.array,\n  buttonTitle: PropTypes.string,\n  inputDeclarations: PropTypes.array.isRequired,\n  isButtonHiddenOnNotModifiedForm: PropTypes.bool,\n  onSubmit: PropTypes.func.isRequired,\n  resetButtonTitle: PropTypes.string,\n  showErrors: PropTypes.bool,\n  title: PropTypes.string,\n};\n\nForm.defaultProps = {\n  isButtonHiddenOnNotModifiedForm: false,\n  showErrors: false,\n};\n\nexport { ComponentInputType } from './helpers';\nexport { Form };\nexport type { InputDeclaration };\n","import cs from 'classnames';\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {\n  ComponentInputType,\n  Form,\n  InputDeclaration,\n} from '../../components/form';\nimport { lexemes } from '../../consts';\nimport {\n  PasswordResettingPhase,\n  requestPasswordResettingForEmail,\n  UserLoginPhase,\n} from '../../services/reducers';\nimport { useAppDispatch, useAppSelector } from '../../services/store';\n\nimport { AdditionalAction } from '../../types';\n\nimport pageStyles from '../page-style.module.css';\n\nconst forgotPasswordPageClassname = 'forgot-password-page';\n\nconst additionalActions: AdditionalAction[] = [\n  {\n    title: lexemes.forms.__common__.haveYouRememberedYourPassword,\n    url: '/login',\n    urlTitle: lexemes.forms.__common__.doLogin,\n  },\n];\nconst inputDeclarations: InputDeclaration[] = [\n  {\n    componentType: ComponentInputType.input,\n    name: 'email',\n    placeholder: lexemes.forms.forgotPassword.provideYourEmail,\n    type: 'email',\n  },\n];\n\nconst ForgotPasswordPage = () => {\n  const { userLoginPhase, passwordResettingPhase } = useAppSelector(\n    (state) => state.user\n  );\n  const dispatch = useAppDispatch();\n\n  if ([UserLoginPhase.fulfilled].includes(userLoginPhase)) {\n    return <Redirect to={'/'} />;\n  }\n\n  if (\n    [\n      PasswordResettingPhase.requestingCredentialsFromUser,\n      PasswordResettingPhase.pendingResetting,\n      PasswordResettingPhase.fulfilled,\n    ].includes(passwordResettingPhase)\n  ) {\n    return <Redirect to={'/reset-password'} />;\n  }\n\n  return (\n    <div\n      className={cs(\n        pageStyles['page'],\n        pageStyles[`page_${forgotPasswordPageClassname}`], // for BEM methodology accomplishments\n        forgotPasswordPageClassname\n      )}\n    >\n      <Form\n        additionalActions={additionalActions}\n        buttonTitle={lexemes.forms.forgotPassword.doResetPassword}\n        inputDeclarations={inputDeclarations}\n        onSubmit={({ email }) => {\n          if (passwordResettingPhase === PasswordResettingPhase.initial) {\n            dispatch(requestPasswordResettingForEmail({ email }));\n          }\n        }}\n        title={lexemes.forms.forgotPassword.title}\n      />\n    </div>\n  );\n};\n\nexport { ForgotPasswordPage };\n","import cs from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { lexemes } from '../../consts';\nimport { useAppSelector } from '../../services/store';\n\nimport style from './style.module.css';\n\nconst IngredientDetails = ({ className }: { className?: string }) => {\n  const { id } = useParams() as { id: string };\n  const { idToIngredientMap } = useAppSelector((state) => state.burger);\n  const {\n    calories,\n    carbohydrates,\n    fat,\n    proteins,\n    image,\n    name: title,\n  } = idToIngredientMap[id];\n  const nutritionalValues = useMemo(() => {\n    return {\n      calories,\n      carbohydrates,\n      fat,\n      proteins,\n    };\n  }, [calories, carbohydrates, fat, proteins]);\n\n  return (\n    <div className={cs(style['ingredient-details'], 'mb-5', className)}>\n      <div\n        className={cs(\n          style['ingredient-details__picture-wrapper'],\n          'pl-5 pr-5'\n        )}\n      >\n        <img\n          alt={title}\n          className={style['ingredient-details__picture']}\n          src={image}\n        />\n      </div>\n      <div className={'pt-4'} />\n      <div\n        className={cs(\n          style['ingredient-details__title'],\n          'text text_type_main-medium'\n        )}\n      >\n        {title}\n      </div>\n      <div className={'pt-8'} />\n      <div\n        className={cs(\n          style['ingredient-details__nutritional-values'],\n          'text_color_inactive'\n        )}\n      >\n        {Object.entries(nutritionalValues).map(([key, value], ix, list) => (\n          <React.Fragment key={key}>\n            <div className={style['ingredient-details__nutritional-value']}>\n              <div\n                className={style['ingredient-details__nutritional-value-title']}\n              >\n                {(lexemes as any)[key]}\n              </div>\n              <div\n                className={cs(\n                  style['ingredient-details__nutritional-value-value'],\n                  'text text_type_digits-default pt-2'\n                )}\n              >\n                {value}\n              </div>\n            </div>\n            {ix + 1 < list.length ? <div className={'pl-5'} /> : null}\n          </React.Fragment>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nIngredientDetails.propTypes = {\n  className: PropTypes.string,\n};\n\nexport { IngredientDetails };\n","import React from 'react';\nimport cs from 'classnames';\nimport { Redirect, useRouteMatch } from 'react-router-dom';\nimport { IngredientDetails } from '../../components/ingredient-details';\nimport { useAppSelector } from '../../services/store';\n\nimport pageStyles from '../page-style.module.css';\n\nconst ingredientsPageClassname = 'ingredients-page';\n\nconst IngredientsPage = () => {\n  const {\n    params: { id },\n  } = useRouteMatch() as { params: { id: string } };\n  const { idToIngredientMap, ingredientsRequest } = useAppSelector(\n    (state) => state.burger\n  );\n\n  if (ingredientsRequest) {\n    return null;\n  }\n\n  const { [id]: ingredient } = idToIngredientMap;\n\n  if (!ingredient) {\n    return <Redirect to={'/'} />;\n  }\n\n  return (\n    <div\n      className={cs(\n        pageStyles['page'],\n        pageStyles[`page_${ingredientsPageClassname}`], // for BEM methodology accomplishments\n        ingredientsPageClassname\n      )}\n    >\n      <IngredientDetails />\n    </div>\n  );\n};\n\nexport { IngredientsPage };\n","import cs from 'classnames';\nimport React, { useEffect } from 'react';\nimport { Redirect, useLocation } from 'react-router-dom';\nimport {\n  ComponentInputType,\n  Form,\n  InputDeclaration,\n} from '../../components/form';\nimport { lexemes } from '../../consts';\nimport {\n  interruptUserLogin,\n  login,\n  UserLoginPhase,\n} from '../../services/reducers';\nimport { useAppDispatch, useAppSelector } from '../../services/store';\n\nimport { AdditionalAction } from '../../types';\n\nimport pageStyles from '../page-style.module.css';\n\nconst loginPageClassname = 'login-page';\n\nconst additionalActions: AdditionalAction[] = [\n  {\n    title: lexemes.forms.login.areYouTheNewUser,\n    url: '/register',\n    urlTitle: lexemes.forms.__common__.doRegister,\n  },\n  {\n    title: lexemes.forms.login.areYouForgetYourPassword,\n    url: '/forgot-password',\n    urlTitle: lexemes.forms.login.doResetYourPassword,\n  },\n];\nconst inputDeclarations: InputDeclaration[] = [\n  {\n    componentType: ComponentInputType.input,\n    name: 'email',\n    placeholder: lexemes.forms.__common__.email,\n    type: 'email',\n  },\n  {\n    componentType: ComponentInputType.passwordInput,\n    name: 'password',\n  },\n];\n\nconst LoginPage = () => {\n  const { userLoginPhase } = useAppSelector((state) => state.user);\n  const dispatch = useAppDispatch();\n  const { state: { redirectedFrom = '/' } = {} } = useLocation() as {\n    state: { redirectedFrom?: string };\n  };\n\n  useEffect(() => {\n    return () => {\n      if ([UserLoginPhase.rejected].includes(userLoginPhase)) {\n        dispatch(interruptUserLogin());\n      }\n    };\n  }, [dispatch, userLoginPhase]);\n\n  if ([UserLoginPhase.fulfilled].includes(userLoginPhase)) {\n    return <Redirect to={redirectedFrom} />;\n  }\n\n  return (\n    <div\n      className={cs(\n        pageStyles['page'],\n        pageStyles[`page_${loginPageClassname}`], // for BEM methodology accomplishments\n        loginPageClassname\n      )}\n    >\n      <Form\n        additionalActions={additionalActions}\n        inputDeclarations={inputDeclarations}\n        buttonTitle={lexemes.forms.__common__.doLogin}\n        onSubmit={({ email, password }) => {\n          if (\n            [UserLoginPhase.initial, UserLoginPhase.rejected].includes(\n              userLoginPhase\n            )\n          ) {\n            dispatch(login({ email, password }));\n          }\n        }}\n        title={lexemes.forms.login.title}\n      />\n    </div>\n  );\n};\n\nexport { LoginPage };\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { logout, UserLoginPhase } from '../../services/reducers';\nimport { useAppDispatch, useAppSelector } from '../../services/store';\n\nconst LogoutPage = () => {\n  const { userLoginPhase } = useAppSelector((state) => state.user);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (userLoginPhase === UserLoginPhase.fulfilled) {\n      dispatch(logout());\n    }\n  });\n\n  if (\n    [\n      UserLoginPhase.initial,\n      UserLoginPhase.pending,\n      UserLoginPhase.rejected,\n    ].includes(userLoginPhase)\n  ) {\n    return <Redirect to={'/login'} />;\n  }\n\n  return null;\n};\n\nexport { LogoutPage };\n","import { Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport cs from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useCallback } from 'react';\nimport { useDrop } from 'react-dnd';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { lexemes } from '../../consts';\nimport {\n  addIngredient,\n  placeAnOrder,\n  removeIngredient,\n} from '../../services/reducers';\nimport { useAppDispatch, useAppSelector } from '../../services/store';\nimport {\n  DraggableTypes,\n  IngredientDragItem,\n  IngredientType,\n} from '../../types';\nimport { Amount } from '../amount';\nimport { BurgerConstructorItem } from './burger-constructor-item';\n\nimport style from './style.module.css';\n\nconst BurgerConstructor = ({ className }: { className?: string }) => {\n  const {\n    actualIngredients,\n    idToIngredientMap,\n    orderDetailsRequest,\n    totalAmount,\n  } = useAppSelector((state) => state.burger);\n  const { user } = useAppSelector((state) => state.user);\n  const dispatch = useAppDispatch();\n  const location = useLocation();\n  const history = useHistory();\n\n  const topBun = actualIngredients.slice(0, 1)[0];\n  const bottomBun = actualIngredients.slice(-1)[0];\n  const placeAnOrderClickHandler = useCallback(() => {\n    if (!user) {\n      history.replace('/login');\n    } else {\n      if (!orderDetailsRequest) {\n        dispatch(placeAnOrder(actualIngredients.map(({ refId }) => refId)));\n      }\n    }\n  }, [actualIngredients, dispatch, history, orderDetailsRequest, user]);\n\n  const [{ isCanDrop, isDragOver }, dropRef] = useDrop({\n    accept: DraggableTypes.ingredient,\n    canDrop(item, monitor) {\n      return !(\n        actualIngredients.length === 0 &&\n        monitor.getItemType() === DraggableTypes.ingredient &&\n        (item as IngredientDragItem).type !== IngredientType.bun\n      );\n    },\n    drop(item) {\n      const { refId } = item as IngredientDragItem;\n\n      if (!orderDetailsRequest) {\n        dispatch(addIngredient(idToIngredientMap[refId]));\n      }\n    },\n    collect(monitor) {\n      return {\n        isCanDrop: monitor.canDrop() && !orderDetailsRequest,\n        isDragOver: monitor.isOver(),\n      };\n    },\n  });\n\n  return (\n    <div\n      className={cs(\n        style['burger-constructor'],\n        'pt-25 pb-5',\n        {\n          [style['burger-constructor_is-empty']]:\n            actualIngredients.length === 0,\n          [style['burger-constructor_is-can-drop']]: isCanDrop,\n          [style['burger-constructor_is-drag-over']]: isDragOver,\n          [style['burger-constructor_is-request']]: orderDetailsRequest,\n        },\n        className\n      )}\n    >\n      <div ref={dropRef} className={style['burger-constructor__list']}>\n        {topBun && (\n          <>\n            {(() => {\n              const { isLocked = false, refId, type } = topBun;\n              const ingredient = idToIngredientMap[refId];\n\n              return (\n                ingredient && (\n                  <BurgerConstructorItem\n                    ingredient={idToIngredientMap[refId]!}\n                    isLocked={isLocked}\n                    onShowIngredientInfo={() => {\n                      history.push({\n                        pathname: `/ingredients/${ingredient._id}`,\n                        state: {\n                          backgroundPageLocation: location,\n                        },\n                      });\n                    }}\n                    type={type}\n                  />\n                )\n              );\n            })()}\n            <div className={'pt-4'} />\n          </>\n        )}\n        <div\n          className={cs(style['burger-constructor__filling'], 'custom-scroll')}\n        >\n          {actualIngredients\n            .slice(1, -1)\n            .map(({ id, isLocked = false, refId, type }, ix) => {\n              const ingredient = idToIngredientMap[refId];\n\n              return (\n                ingredient && (\n                  <BurgerConstructorItem\n                    key={id}\n                    id={id}\n                    index={ix + 1}\n                    ingredient={idToIngredientMap[refId]!}\n                    isLocked={isLocked}\n                    onShowIngredientInfo={() => {\n                      history.push({\n                        pathname: `/ingredients/${ingredient._id}`,\n                        state: {\n                          backgroundPageLocation: location,\n                        },\n                      });\n                    }}\n                    onDelete={() => {\n                      dispatch(removeIngredient(id));\n                    }}\n                    type={type}\n                  />\n                )\n              );\n            })}\n        </div>\n        {bottomBun && (\n          <>\n            <div className={'pt-4'} />\n            {(() => {\n              const { isLocked = false, refId, type } = bottomBun;\n              const ingredient = idToIngredientMap[refId];\n\n              return (\n                ingredient && (\n                  <BurgerConstructorItem\n                    ingredient={idToIngredientMap[refId]!}\n                    isLocked={isLocked}\n                    onShowIngredientInfo={() => {\n                      history.push({\n                        pathname: `/ingredients/${ingredient._id}`,\n                        state: {\n                          backgroundPageLocation: location,\n                        },\n                      });\n                    }}\n                    type={type}\n                  />\n                )\n              );\n            })()}\n          </>\n        )}\n      </div>\n      <div className={cs(style['burger-constructor__total-wrapper'], 'pt-10')}>\n        <Amount\n          amount={totalAmount}\n          className={style['burger-constructor__total']}\n          isTotal={true}\n        />\n        <div className={'pl-10'} />\n        <Button\n          onClick={placeAnOrderClickHandler}\n          size={'large'}\n          type={'primary'}\n        >\n          {lexemes.placeAnOrder}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nBurgerConstructor.propTypes = { className: PropTypes.string };\n\nexport { BurgerConstructor };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { DragPreviewImage, useDrag } from 'react-dnd';\nimport {\n  DraggableTypes,\n  Ingredient_t,\n  IngredientDragItem,\n} from '../../../types';\nimport { useAppSelector } from '../../../services/store';\nimport { Amount } from '../../amount';\nimport { Counter } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport style from './style.module.css';\n\nconst BurgerIngredient = ({\n  ingredient: { _id, image, name: title, price, type },\n  onClick,\n}: {\n  ingredient: Ingredient_t;\n  onClick?: () => void;\n}) => {\n  const { idToActualIngredientsCountMap } = useAppSelector(\n    (state) => state.burger\n  );\n  const [{ isItPicked }, dragRef, preview] = useDrag({\n    type: DraggableTypes.ingredient,\n    options: {\n      dropEffect: 'copy',\n    },\n    item: {\n      refId: _id,\n      type,\n    } as IngredientDragItem,\n    collect(monitoring) {\n      return {\n        isItPicked: monitoring.isDragging(),\n      };\n    },\n  });\n\n  return (\n    <li\n      ref={dragRef}\n      className={cs(style['burger-ingredient'], {\n        [style['burger-ingredient_interactive']]: onClick,\n        [style['burger-ingredient_is-picked']]: isItPicked,\n      })}\n      onClick={onClick}\n    >\n      <DragPreviewImage connect={preview} src={image} />\n      {idToActualIngredientsCountMap[_id] && (\n        <Counter count={idToActualIngredientsCountMap[_id]} />\n      )}\n      <div>\n        <div\n          className={cs(style['burger-ingredient__image-wrapper'], 'pl-4 pr-4')}\n        >\n          <img\n            alt={title}\n            className={style['burger-ingredient__image']}\n            src={image}\n          />\n        </div>\n        <Amount\n          amount={price}\n          className={cs(style['burger-ingredient__price-wrapper'], 'pt-1 pb-1')}\n        />\n        <div className={cs(style['burger-ingredient__title'])}>{title}</div>\n      </div>\n    </li>\n  );\n};\n\nBurgerIngredient.propTypes = {\n  ingredient: PropTypes.object.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport { BurgerIngredient };\n","import cs from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Ingredient_t } from '../../../types';\nimport { BurgerIngredient } from '../burger-ingredient';\n\nimport style from './style.module.css';\n\nconst BurgerIngredientType = ({\n  className,\n  ingredients,\n  title,\n  type,\n}: {\n  className?: string;\n  ingredients: Ingredient_t[];\n  title: string;\n  type: string;\n}) => {\n  const location = useLocation();\n  const history = useHistory();\n\n  return (\n    <li className={cs('pt-10', className)} data-type={type}>\n      <div className={'text text_type_main-medium'}>{title}</div>\n      <ul\n        className={cs(\n          style['burger-ingredient-type__ingredient-list'],\n          'pt-6 pr-4 pl-4'\n        )}\n      >\n        {ingredients.map((ingredient, ix) => (\n          <React.Fragment key={ingredient._id}>\n            <BurgerIngredient\n              ingredient={ingredient}\n              onClick={() => {\n                history.push({\n                  pathname: `/ingredients/${ingredient._id}`,\n                  state: {\n                    backgroundPageLocation: location,\n                  },\n                });\n              }}\n            />\n            <li\n              className={cs({\n                'pl-6': ix % 2 === 0,\n                'pt-8': ix % 2 === 1,\n              })}\n            />\n          </React.Fragment>\n        ))}\n      </ul>\n    </li>\n  );\n};\n\nBurgerIngredientType.propTypes = {\n  className: PropTypes.string,\n  ingredients: PropTypes.arrayOf(PropTypes.object).isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport { BurgerIngredientType };\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { IngredientType } from '../../types';\nimport { useAppSelector } from '../../services/store';\nimport { lexemes } from '../../consts';\nimport { BurgerIngredientType } from './burger-ingredient-type';\n\nimport style from './style.module.css';\n\nconst ingredientTypeTitles = {\n  bun: lexemes.buns,\n  sauce: lexemes.sauces,\n  main: lexemes.burgerFillings,\n};\nconst ingredientTypes = Object.keys(ingredientTypeTitles) as Array<\n  keyof typeof ingredientTypeTitles\n>;\n\nconst thresholdsStepsCount = 50;\nconst thresholds = [\n  ...Array.from({ length: thresholdsStepsCount - 1 }).map(\n    (_, ix) => ix / (thresholdsStepsCount - 1)\n  ),\n  1,\n];\n\nconst BurgerIngredients = ({ className }: { className?: string }) => {\n  const { ingredients } = useAppSelector((state) => state.burger);\n  const [selectedIngredientType, setSelectedIngredientType] = useState(\n    ingredientTypes[0]\n  );\n  const ingredientTypeToIngredientsMap = useMemo(() => {\n    const axillaryMap = new Map();\n\n    ingredients.forEach((ingredient) => {\n      const { type } = ingredient;\n\n      if (!axillaryMap.has(type)) {\n        axillaryMap.set(type, []);\n      }\n\n      axillaryMap.get(type).push(ingredient);\n    });\n\n    const result = ingredientTypes.reduce((result, ingredientType) => {\n      if (axillaryMap.has(ingredientType)) {\n        result.set(ingredientType, axillaryMap.get(ingredientType));\n      } else {\n        result.set(ingredientType, []);\n      }\n\n      return result;\n    }, new Map());\n\n    axillaryMap.clear();\n\n    return result;\n  }, [ingredients]);\n  const typeListElementRef = useRef<HTMLUListElement>(null);\n\n  useEffect(() => {\n    const { current: typeListElement } = typeListElementRef;\n    const items = typeListElement!.querySelectorAll(\n      `.${style['burger-ingredients__type-item']}`\n    ) as NodeListOf<HTMLLIElement>;\n\n    if (items.length > 0) {\n      const ingredientToIntersectionRatioMap = new Map();\n\n      const intersectionObserver = new IntersectionObserver(\n        (intersectionObserverEntries) => {\n          intersectionObserverEntries.forEach(\n            ({ target, intersectionRatio }) => {\n              const {\n                dataset: { type },\n              } = target as HTMLLIElement;\n\n              if (type) {\n                ingredientToIntersectionRatioMap.set(type, intersectionRatio);\n              }\n            }\n          );\n\n          const mostVisibleType = [\n            // @ts-ignore\n            ...ingredientToIntersectionRatioMap.entries(),\n          ].sort(([, irA], [, irB]) => irB - irA)[0][0];\n\n          setSelectedIngredientType(mostVisibleType);\n        },\n        {\n          root: typeListElement,\n          threshold: thresholds,\n        }\n      );\n\n      items.forEach((item) => {\n        ingredientToIntersectionRatioMap.set(item.dataset.type, 0);\n        intersectionObserver.observe(item);\n      });\n\n      return () => {\n        intersectionObserver.disconnect();\n        ingredientToIntersectionRatioMap.clear();\n      };\n    }\n  }, []);\n\n  return (\n    <div className={cs(style['burger-ingredients'], 'pb-5', className)}>\n      <div\n        className={cs(\n          style['burger-ingredients__title'],\n          'pt-10 pb-5 text text_type_main-large'\n        )}\n      >\n        {lexemes.assembleABurger}\n      </div>\n      <div className={cs(style['burger-ingredients__filter'])}>\n        {ingredientTypes.map((type) => (\n          <Tab\n            key={type}\n            active={selectedIngredientType === type}\n            value={type}\n            onClick={(type) => {\n              const { current: typeListElement } = typeListElementRef;\n\n              if (typeListElement) {\n                const currentListItemElement = typeListElement.querySelector(\n                  `.${style['burger-ingredients__type-item']}[data-type=\"${type}\"]`\n                );\n\n                if (currentListItemElement) {\n                  currentListItemElement.scrollIntoView({ behavior: 'smooth' });\n                }\n              }\n            }}\n          >\n            {(ingredientTypeTitles as any)[type]}\n          </Tab>\n        ))}\n      </div>\n      <ul\n        ref={typeListElementRef}\n        className={cs(style['burger-ingredients__type-list'], 'custom-scroll')}\n      >\n        {Array.from(ingredientTypeToIngredientsMap.entries()).map(\n          ([type, ingredients]) => (\n            <BurgerIngredientType\n              key={type}\n              className={style['burger-ingredients__type-item']}\n              ingredients={ingredients}\n              title={ingredientTypeTitles[type as IngredientType]}\n              type={type}\n            />\n          )\n        )}\n      </ul>\n    </div>\n  );\n};\n\nBurgerIngredients.propTypes = { className: PropTypes.string };\n\nexport { BurgerIngredients };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\n\nimport style from './style.module.css';\n\nconst ModalOverlay = ({\n  className,\n  onClick,\n}: {\n  className?: string;\n  onClick?: () => void;\n}) => (\n  <div\n    className={cs(\n      style['modal-overlay'],\n      {\n        [`${style['modal-overlay_interactive']}`]: onClick,\n      },\n      className\n    )}\n    onClick={onClick}\n  />\n);\n\nModalOverlay.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nexport { ModalOverlay };\n","import React, {\n  MutableRefObject,\n  ReactNode,\n  ReactPortal,\n  useCallback,\n  useEffect,\n  useRef,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { ModalOverlay } from './modal-overlay';\n\nimport style from './style.module.css';\n\nconst Modal = ({\n  children,\n  className,\n  onClose,\n  title,\n}: {\n  children?: ReactNode | ReactPortal;\n  className?: string;\n  onClose: () => void;\n  title?: string;\n}) => {\n  const modalElementRef = useRef(null);\n\n  useEffect(() => {\n    const { current: modalElement } =\n      modalElementRef as MutableRefObject<HTMLElement | null>;\n\n    if (modalElement) {\n      modalElement.focus();\n    }\n  }, []);\n\n  const keyDownHandler = useCallback(\n    ({ key }) => {\n      if (key === 'Escape' && onClose) {\n        onClose();\n      }\n    },\n    [onClose]\n  );\n\n  return (\n    <>\n      <ModalOverlay className={style['modal__overlay']} onClick={onClose} />\n      <div\n        ref={modalElementRef}\n        className={cs(style['modal'], 'p-10', className)}\n        onKeyDown={keyDownHandler}\n        tabIndex={0}\n      >\n        <div className={style['modal__header']}>\n          <div\n            className={cs(style['modal__title'], ' text text_type_main-large')}\n          >\n            {title}\n          </div>\n          <button className={style['modal__close-button']} onClick={onClose}>\n            <CloseIcon type={'primary'} />\n          </button>\n        </div>\n        <div className={cs(style['modal__content'], 'custom-scroll')}>\n          {children}\n        </div>\n      </div>\n    </>\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  className: PropTypes.string,\n  onClose: PropTypes.func.isRequired,\n  title: PropTypes.string,\n};\n\nexport { Modal };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { CheckMarkIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { OrderDetails_t } from '../../types';\nimport { lexemes, orderStatusToStatusTitleMap } from '../../consts';\n\nimport placedOrderDetailsStyles from './style.module.css';\n\nconst placedOrderDetails = 'placed-order-details';\n\nconst PlacedOrderDetails = ({\n  className,\n  orderDetails: { id, status, message },\n}: {\n  className?: string;\n  orderDetails: OrderDetails_t;\n}) => (\n  <div className={cs(placedOrderDetailsStyles[placedOrderDetails], className)}>\n    <div\n      className={cs(\n        placedOrderDetailsStyles[`${placedOrderDetails}__id`],\n        'text text_type_digits-large'\n      )}\n    >\n      {String(id).padStart(6, '0')}\n    </div>\n    <div className={'pt-8'} />\n    <div\n      className={cs(\n        placedOrderDetailsStyles[`${placedOrderDetails}__id-title`],\n        'text text_type_main-medium'\n      )}\n    >\n      {lexemes.orderId}\n    </div>\n    <div className={'pt-15'} />\n    <div\n      className={\n        placedOrderDetailsStyles[`${placedOrderDetails}__status-icon-wrapper`]\n      }\n    >\n      <CheckMarkIcon type={'primary'} />\n    </div>\n    <div className={'pt-15'} />\n    <div\n      className={\n        placedOrderDetailsStyles[`${placedOrderDetails}__status-title`]\n      }\n    >\n      {orderStatusToStatusTitleMap[status]}\n    </div>\n    <div className={'pt-2'} />\n    <div\n      className={cs(\n        placedOrderDetailsStyles[`${placedOrderDetails}__message`],\n        'text_color_inactive'\n      )}\n    >\n      {message}\n    </div>\n  </div>\n);\n\nPlacedOrderDetails.propTypes = {\n  className: PropTypes.string,\n  orderDetails: PropTypes.object.isRequired,\n};\n\nexport { PlacedOrderDetails };\n","import cs from 'classnames';\nimport React from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend as Html5Backend } from 'react-dnd-html5-backend';\nimport { BurgerConstructor } from '../../components/burger-constructor';\nimport burgerConstructorStyles from '../../components/burger-constructor/style.module.css';\nimport { BurgerIngredients } from '../../components/burger-ingredients';\nimport { Modal } from '../../components/modal';\nimport { PlacedOrderDetails } from '../../components/placed-order-details';\nimport { resetOrderDetails } from '../../services/reducers';\nimport { useAppDispatch, useAppSelector } from '../../services/store';\n\nimport pageStyles from '../page-style.module.css';\nimport mainPageStyles from './style.module.css';\n\nconst mainPageClassname = 'main-page';\n\nconst MainPage = () => {\n  const { orderDetails } = useAppSelector((state) => state.burger);\n  const dispatch = useAppDispatch();\n\n  return (\n    <div\n      className={cs(\n        pageStyles['page'],\n        pageStyles[`page_${mainPageClassname}`], // for BEM methodology accomplishments\n        mainPageStyles[mainPageClassname]\n      )}\n    >\n      <DndProvider backend={Html5Backend}>\n        <BurgerIngredients\n          className={mainPageStyles[`${mainPageClassname}__ingredients`]}\n        />\n        <div\n          className={cs(mainPageStyles[`${mainPageClassname}__space`], 'pl-10')}\n        />\n        <BurgerConstructor\n          className={mainPageStyles[`${mainPageClassname}__constructor`]}\n        />\n      </DndProvider>\n      {orderDetails && (\n        <Modal onClose={() => dispatch(resetOrderDetails())}>\n          <PlacedOrderDetails\n            className={cs(\n              burgerConstructorStyles['burger-constructor__order-details'],\n              'mt-4 mb-20'\n            )}\n            orderDetails={orderDetails}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport { MainPage };\n","import React from 'react';\nimport cs from 'classnames';\n\nimport pageStyles from '../page-style.module.css';\n\nconst notFoundPageClassname = 'not-found-page';\n\nconst NotFoundPage = () => (\n  <div\n    className={cs(\n      pageStyles['page'],\n      pageStyles[`page_${notFoundPageClassname}`], // for BEM methodology accomplishments\n      notFoundPageClassname\n    )}\n  >\n    Not Found Page\n  </div>\n);\n\nexport { NotFoundPage };\n","import React, { useEffect } from 'react';\nimport { Feed } from '../../../components/feed/intex';\nimport {\n  subscribeForUserOrders,\n  unsubscribeForUserOrders,\n} from '../../../services/reducers';\nimport { useAppDispatch, useAppSelector } from '../../../services/store';\n\nconst Orders = () => {\n  const orders = useAppSelector((state) => state.orders.userOrders);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(subscribeForUserOrders());\n\n    return () => {\n      dispatch(unsubscribeForUserOrders());\n    };\n  }, [dispatch]);\n\n  return <Feed orders={orders} renderStatus={true} />;\n};\n\nexport { Orders };\n","import React, { useEffect, useMemo } from 'react';\nimport {\n  ComponentInputType,\n  Form,\n  InputDeclaration,\n} from '../../../components/form';\nimport { lexemes } from '../../../consts';\nimport {\n  interruptUpdateUserData,\n  updateUserData,\n  UpdateUserDataPhase,\n} from '../../../services/reducers';\nimport { useAppDispatch, useAppSelector } from '../../../services/store';\n\nconst inputDeclarations: Readonly<InputDeclaration>[] = [\n  {\n    componentType: ComponentInputType.input,\n    icon: 'EditIcon',\n    name: 'name',\n    placeholder: lexemes.forms.__common__.name,\n    type: 'text',\n  },\n  {\n    componentType: ComponentInputType.input,\n    icon: 'EditIcon',\n    name: 'email',\n    placeholder: lexemes.forms.profile.email,\n    type: 'email',\n  },\n  {\n    componentType: ComponentInputType.input,\n    icon: 'EditIcon',\n    name: 'password',\n    placeholder: lexemes.forms.__common__.password,\n    type: 'password',\n  },\n];\n\nconst Profile = () => {\n  const { user, updateUserDataPhase } = useAppSelector((state) => state.user);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    return () => {\n      dispatch(interruptUpdateUserData());\n    };\n  }, [dispatch]);\n\n  const actualInputDeclarations = useMemo(() => {\n    if (!user) {\n      return inputDeclarations;\n    }\n\n    return inputDeclarations.map((inputDeclaration) => {\n      const inputDeclarationCopy: InputDeclaration = {\n        ...inputDeclaration,\n      };\n\n      if (Object.prototype.hasOwnProperty.call(user, inputDeclaration.name)) {\n        inputDeclarationCopy.initialValue =\n          user[inputDeclaration.name as keyof typeof user];\n      }\n\n      return inputDeclarationCopy;\n    });\n  }, [user]);\n\n  return (\n    <div>\n      <Form\n        inputDeclarations={actualInputDeclarations}\n        isButtonHiddenOnNotModifiedForm={true}\n        buttonTitle={lexemes.forms.profile.doEdit}\n        onSubmit={({ email, name, password }) => {\n          if (updateUserDataPhase === UpdateUserDataPhase.initial) {\n            dispatch(updateUserData({ email, name, password }));\n          }\n        }}\n        resetButtonTitle={lexemes.forms.__common__.resetForm}\n        showErrors={true}\n      />\n    </div>\n  );\n};\n\nexport { Profile };\n","import cs from 'classnames';\nimport React from 'react';\nimport { Link, Redirect, Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { useAppSelector } from '../../services/store';\n\nimport pageStyles from '../page-style.module.css';\nimport { Orders } from './orders';\nimport { Profile } from './profile';\nimport profilePageStyle from './style.module.css';\n\nconst profilePageClassname = 'profile-page';\n\nconst ProfilePage = () => {\n  const { userTimeStamp } = useAppSelector((state) => state.user);\n  const { path } = useRouteMatch();\n  const isProfileSubpageMatched = useRouteMatch({ path, exact: true });\n  const isOrdersSubpageMatched = useRouteMatch({ path: `${path}/orders` });\n\n  return (\n    <div\n      className={cs(\n        pageStyles['page'],\n        pageStyles[`page_${profilePageClassname}`], // for BEM methodology accomplishments\n        profilePageStyle[profilePageClassname],\n        'pt-25'\n      )}\n    >\n      <ul\n        className={cs(\n          profilePageStyle[`${profilePageClassname}__menu`],\n          'text_color_inactive'\n        )}\n      >\n        <li\n          className={cs(\n            profilePageStyle[`${profilePageClassname}__menu-item`],\n            {\n              [profilePageStyle[`${profilePageClassname}__menu-item-active`]]:\n                isProfileSubpageMatched,\n            }\n          )}\n        >\n          <Link\n            className={profilePageStyle[`${profilePageClassname}__link`]}\n            to={`${path}`}\n          >\n            Профиль\n          </Link>\n        </li>\n        <li\n          className={cs(\n            profilePageStyle[`${profilePageClassname}__menu-item`],\n            {\n              [profilePageStyle[`${profilePageClassname}__menu-item-active`]]:\n                isOrdersSubpageMatched,\n            }\n          )}\n        >\n          <Link\n            className={profilePageStyle[`${profilePageClassname}__link`]}\n            to={`${path}/orders`}\n          >\n            История заказов\n          </Link>\n        </li>\n        <li className={profilePageStyle[`${profilePageClassname}__menu-item`]}>\n          <Link\n            className={profilePageStyle[`${profilePageClassname}__link`]}\n            to={`/logout`}\n          >\n            Выход\n          </Link>\n        </li>\n      </ul>\n      <div className={'pl-15'} />\n      <div className={profilePageStyle[`${profilePageClassname}__content`]}>\n        <Switch>\n          <Route exact path={`${path}`}>\n            <Profile key={userTimeStamp} />\n          </Route>\n          <Route path={`${path}/orders`}>\n            <Orders />\n          </Route>\n          <Route>\n            <Redirect to={path} />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport { ProfilePage };\n","import cs from 'classnames';\nimport React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {\n  ComponentInputType,\n  Form,\n  InputDeclaration,\n} from '../../components/form';\nimport { lexemes } from '../../consts';\nimport {\n  interruptUserRegistration,\n  registerUser,\n  UserLoginPhase,\n  UserRegistrationPhase,\n} from '../../services/reducers';\nimport { useAppDispatch, useAppSelector } from '../../services/store';\nimport { AdditionalAction } from '../../types';\n\nimport pageStyles from '../page-style.module.css';\n\nconst registerPageClassname = 'register-page';\n\nconst additionalActions: AdditionalAction[] = [\n  {\n    title: lexemes.forms.register.areYouRegisteredAlready,\n    url: '/login',\n    urlTitle: lexemes.forms.__common__.doLogin,\n  },\n];\nconst inputDeclarations: InputDeclaration[] = [\n  {\n    componentType: ComponentInputType.input,\n    name: 'name',\n    placeholder: lexemes.forms.__common__.name,\n  },\n  {\n    componentType: ComponentInputType.input,\n    name: 'email',\n    placeholder: lexemes.forms.__common__.email,\n    type: 'email',\n  },\n  {\n    componentType: ComponentInputType.passwordInput,\n    name: 'password',\n  },\n];\n\nconst RegisterPage = () => {\n  const { userLoginPhase, userRegistrationPhase } = useAppSelector(\n    (state) => state.user\n  );\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    return () => {\n      dispatch(interruptUserRegistration());\n    };\n  }, [dispatch]);\n\n  if ([UserLoginPhase.fulfilled].includes(userLoginPhase)) {\n    return <Redirect to={'/login'} />;\n  }\n\n  if (\n    [UserRegistrationPhase.fulfilled, UserRegistrationPhase.rejected].includes(\n      userRegistrationPhase\n    )\n  ) {\n    return <Redirect to={'/login'} />;\n  }\n\n  return (\n    <div\n      className={cs(\n        pageStyles['page'],\n        pageStyles[`page_${registerPageClassname}`], // for BEM methodology accomplishments\n        registerPageClassname\n      )}\n    >\n      <Form\n        additionalActions={additionalActions}\n        inputDeclarations={inputDeclarations}\n        buttonTitle={lexemes.forms.__common__.doRegister}\n        onSubmit={({ email, name, password }) => {\n          if (userRegistrationPhase === UserRegistrationPhase.initial) {\n            dispatch(\n              registerUser({\n                email,\n                name,\n                password,\n              })\n            );\n          }\n        }}\n        showErrors={true}\n        title={lexemes.forms.register.title}\n      />\n    </div>\n  );\n};\n\nexport { RegisterPage };\n","import cs from 'classnames';\nimport React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {\n  ComponentInputType,\n  Form,\n  InputDeclaration,\n} from '../../components/form';\nimport { lexemes } from '../../consts';\nimport {\n  interruptPasswordResettingWorkflow,\n  PasswordResettingPhase,\n  requestNewPasswordSetting,\n  UserLoginPhase,\n} from '../../services/reducers';\nimport { useAppDispatch, useAppSelector } from '../../services/store';\nimport { AdditionalAction } from '../../types';\n\nimport pageStyles from '../page-style.module.css';\n\nconst resetPasswordPageClassname = 'reset-password-page';\n\nconst additionalActions: AdditionalAction[] = [\n  {\n    title: lexemes.forms.__common__.haveYouRememberedYourPassword,\n    url: '/login',\n    urlTitle: lexemes.forms.__common__.doLogin,\n  },\n];\nconst inputDeclarations: InputDeclaration[] = [\n  {\n    componentType: ComponentInputType.passwordInput,\n    name: 'newPassword',\n  },\n  {\n    componentType: ComponentInputType.input,\n    name: 'approvalCode',\n    type: 'text',\n    placeholder: lexemes.forms.resetPassword.provideApprovalCode,\n  },\n];\n\nconst ResetPasswordPage = () => {\n  const { userLoginPhase, passwordResettingPhase } = useAppSelector(\n    (state) => state.user\n  );\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    return () => {\n      dispatch(interruptPasswordResettingWorkflow());\n    };\n  }, [dispatch]);\n\n  if ([UserLoginPhase.fulfilled].includes(userLoginPhase)) {\n    return <Redirect to={'/'} />;\n  }\n\n  if (\n    [\n      PasswordResettingPhase.fulfilled,\n      PasswordResettingPhase.initial,\n      PasswordResettingPhase.rejected,\n    ].includes(passwordResettingPhase)\n  ) {\n    return <Redirect to={'/login'} />;\n  }\n\n  return (\n    <div\n      className={cs(\n        pageStyles['page'],\n        pageStyles[`page_${resetPasswordPageClassname}`], // for BEM methodology accomplishments\n        resetPasswordPageClassname\n      )}\n    >\n      <Form\n        additionalActions={additionalActions}\n        inputDeclarations={inputDeclarations}\n        buttonTitle={lexemes.forms.resetPassword.doReset}\n        onSubmit={({ newPassword: password, approvalCode: token }) => {\n          if (\n            passwordResettingPhase ===\n            PasswordResettingPhase.requestingCredentialsFromUser\n          ) {\n            dispatch(requestNewPasswordSetting({ password, token }));\n          }\n        }}\n        showErrors={true}\n        title={lexemes.forms.resetPassword.title}\n      />\n    </div>\n  );\n};\n\nexport { ResetPasswordPage };\n","import React, { ReactNode } from 'react';\nimport { Redirect, Route, useLocation } from 'react-router-dom';\nimport { UserLoginPhase } from '../../services/reducers';\nimport { useAppSelector } from '../../services/store';\n\nimport PropTypes from 'prop-types';\n\nconst ProtectedRoute = ({\n  children,\n  ...rest\n}: {\n  children: ReactNode;\n  [key: string]: any;\n}) => {\n  const { userLoginPhase } = useAppSelector((state) => state.user);\n  const { pathname } = useLocation();\n\n  return (\n    <Route\n      {...rest}\n      render={() =>\n        userLoginPhase === UserLoginPhase.fulfilled ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: {\n                redirectedFrom: pathname,\n              },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nProtectedRoute.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport { ProtectedRoute };\n","import cs from 'classnames';\nimport React from 'react';\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\nimport { lexemes } from '../../consts';\nimport {\n  FeedPageSwitcher,\n  ForgotPasswordPage,\n  IngredientsPage,\n  LoginPage,\n  LogoutPage,\n  MainPage,\n  NotFoundPage,\n  ProfilePage,\n  RegisterPage,\n  ResetPasswordPage,\n} from '../../pages';\nimport burgerConstructorStyles from '../burger-constructor/style.module.css';\nimport { IngredientDetails } from '../ingredient-details';\nimport { Modal } from '../modal';\nimport { OrderDetails } from '../order-details';\nimport { ProtectedRoute } from '../protected-route';\n\nimport styles from './style.module.css';\n\nconst AppBody = () => {\n  let location = useLocation();\n  const { state: locationState } = useLocation() as {\n    state: { backgroundPageLocation?: typeof location } | null;\n  };\n  const { backgroundPageLocation } = locationState ?? {};\n  const history = useHistory();\n  const isItPageRefresh = history.action === 'POP';\n\n  if (backgroundPageLocation && !isItPageRefresh) {\n    location = backgroundPageLocation;\n  }\n\n  return (\n    <main\n      className={cs(\n        styles['app-body'],\n        'pl-5 pr-5 text text_type_main-default'\n      )}\n    >\n      <Switch location={location}>\n        <Route exact path=\"/\">\n          <MainPage />\n        </Route>\n        <Route exact path=\"/login\">\n          <LoginPage />\n        </Route>\n        <Route exact path=\"/register\">\n          <RegisterPage />\n        </Route>\n        <Route exact path=\"/forgot-password\">\n          <ForgotPasswordPage />\n        </Route>\n        <Route exact path=\"/reset-password\">\n          <ResetPasswordPage />\n        </Route>\n        <Route path=\"/feed\">\n          <FeedPageSwitcher />\n        </Route>\n        <ProtectedRoute path=\"/profile\">\n          <ProfilePage />\n        </ProtectedRoute>\n        <Route path=\"/ingredients/:id\">\n          <IngredientsPage />\n        </Route>\n        <Route path=\"/logout\">\n          <LogoutPage />\n        </Route>\n        <Route>\n          <NotFoundPage />\n        </Route>\n      </Switch>\n      {backgroundPageLocation && !isItPageRefresh ? (\n        <>\n          <Route path=\"/ingredients/:id\">\n            <Modal\n              onClose={() => history.goBack()}\n              title={lexemes.ingredientDetails}\n            >\n              <IngredientDetails\n                className={cs(\n                  burgerConstructorStyles[\n                    'burger-constructor__ingredient-details'\n                  ]\n                )}\n              />\n            </Modal>\n          </Route>\n          <Route path=\"/feed/:id\">\n            <Modal\n              className={cs()}\n              onClose={() => history.goBack()}\n              title={lexemes.orderDetails}\n            >\n              <OrderDetails />\n            </Modal>\n          </Route>\n        </>\n      ) : null}\n    </main>\n  );\n};\n\nexport { AppBody };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { TIconProps } from '@ya.praktikum/react-developer-burger-ui-components/dist/ui/icons/utils';\nimport style from './style.module.css';\n\ntype Icon_t = ({ type }: TIconProps) => JSX.Element;\n\nconst MenuItem = ({\n  className,\n  Icon,\n  isActive,\n  onClick,\n  text,\n}: {\n  className?: string;\n  Icon: Icon_t;\n  isActive?: boolean;\n  onClick?: (...a: any[]) => void;\n  text: string;\n}) => {\n  return (\n    <li\n      className={cs(\n        style['menu-item'],\n        {\n          [style['menu-item_active']]: isActive,\n        },\n        className,\n        'p-5 text',\n        {\n          text_color_inactive: !isActive,\n        }\n      )}\n      onClick={onClick}\n      role=\"button\"\n    >\n      <Icon type={isActive ? 'primary' : 'secondary'} />\n      <span className=\"ml-2\">{text}</span>\n    </li>\n  );\n};\n\nMenuItem.propTypes = {\n  className: PropTypes.string,\n  Icon: PropTypes.elementType.isRequired,\n  isActive: PropTypes.bool,\n  onClick: PropTypes.func,\n  text: PropTypes.string.isRequired,\n};\n\nMenuItem.defaultProps = {\n  isActive: true,\n};\n\nexport { MenuItem };\n","import React from 'react';\nimport { Link, useHistory, useRouteMatch } from 'react-router-dom';\nimport cs from 'classnames';\nimport {\n  Logo,\n  BurgerIcon,\n  ListIcon,\n  ProfileIcon,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport { lexemes } from '../../consts';\nimport { MenuItem } from './menu-item';\n\nimport styles from './style.module.css';\n\nconst AppHeader = () => {\n  const history = useHistory();\n  const mainPageMatch = useRouteMatch('/');\n  const feedPageMatch = useRouteMatch('/feed');\n  const profilePageMatch = useRouteMatch('/profile');\n\n  return (\n    <header\n      className={cs(\n        styles['app-header'],\n        'text text_type_main-default pt-3 pb-3'\n      )}\n    >\n      <nav>\n        <ul className={cs(styles['app-header__menu-list'], 'pt-4 pb-4')}>\n          <MenuItem\n            className={styles['app-header__menu-item']}\n            Icon={BurgerIcon}\n            isActive={(mainPageMatch && mainPageMatch.isExact) ?? false}\n            onClick={() => {\n              history.push({\n                pathname: '/',\n              });\n            }}\n            text={lexemes.constructor}\n          />\n          <MenuItem\n            className={styles['app-header__menu-item']}\n            Icon={ListIcon}\n            isActive={Boolean(feedPageMatch)}\n            onClick={() => {\n              history.push({\n                pathname: '/feed',\n              });\n            }}\n            text={lexemes.orderList}\n          />\n          <li className={styles['app-header__logo-wrapper']}>\n            <Link to={'/'}>\n              <Logo />\n            </Link>\n          </li>\n          <MenuItem\n            className={styles['app-header__menu-item']}\n            Icon={ProfileIcon}\n            isActive={Boolean(profilePageMatch)}\n            onClick={() => {\n              history.push({\n                pathname: '/profile',\n              });\n            }}\n            text={lexemes.profile}\n          />\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport { AppHeader };\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport {\n  AutoLoginPhase,\n  doAutoLogin,\n  fetchIngredients,\n  subscribeForOrders,\n} from '../../services/reducers';\nimport { useAppDispatch, useAppSelector } from '../../services/store';\nimport { AppBody } from '../app-body';\nimport { AppHeader } from '../app-header';\n\nimport style from './style.module.css';\n\nconst App = () => {\n  const { ingredientsError, ingredientsRequest } = useAppSelector(\n    (state) => state.burger\n  );\n  const { autoLoginPhase } = useAppSelector((state) => state.user);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(fetchIngredients());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(doAutoLogin());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(subscribeForOrders());\n  }, [dispatch]);\n\n  if (\n    ![AutoLoginPhase.fulfilled, AutoLoginPhase.rejected].includes(\n      autoLoginPhase\n    )\n  ) {\n    return null;\n  }\n\n  return (\n    <div className={style.app}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <AppHeader />\n        {!ingredientsRequest && !ingredientsError && <AppBody />}\n      </Router>\n    </div>\n  );\n};\n\nexport { App };\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './components/app';\n\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './services/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    <div id=\"modal-container\" />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  AuthUserResponse,\n  RefreshTokensResponse,\n  User,\n  UserResponse,\n} from '../../types';\nimport {\n  getUserData as apiGetUserData,\n  login as apiLogin,\n  logout as apiLogout,\n  refreshTokens as apiRefreshTokens,\n  registerUser as apiRegisterUser,\n  requestNewPasswordSetting as apiRequestNewPasswordSetting,\n  requestPasswordResettingForEmail as apiRequestPasswordResettingForEmail,\n  updateUserData as apiUpdateUserData,\n} from '../api';\nimport {\n  authenticationSideEffect,\n  cleanUpAuthenticationSideEffect,\n  getAccessSchemaAndToken,\n  getRefreshToken,\n  resetUser,\n  setUser,\n} from '../helpers';\n\nexport enum PasswordResettingPhase {\n  initial = 'initial',\n  requestingApprovalCode = 'requesting-approval-code',\n  requestingCredentialsFromUser = 'requesting-credentials-from-user',\n  pendingResetting = 'pending-resetting',\n  fulfilled = 'fulfilled',\n  rejected = 'rejected',\n}\n\nexport enum UserRegistrationPhase {\n  initial = 'initial',\n  pending = 'pending',\n  fulfilled = 'fulfilled',\n  rejected = 'rejected',\n}\n\nexport enum UserLoginPhase {\n  initial = 'initial',\n  pending = 'pending',\n  fulfilled = 'fulfilled',\n  rejected = 'rejected',\n}\n\nexport enum UpdateUserDataPhase {\n  initial = 'initial',\n  pending = 'pending',\n  fulfilled = 'fulfilled',\n  rejected = 'rejected',\n}\n\nexport enum AutoLoginPhase {\n  initial = 'initial',\n  pending = 'pending',\n  fulfilled = 'fulfilled',\n  rejected = 'rejected',\n}\n\nconst initialState: Readonly<{\n  accessToken?: string;\n  autoLoginPhase: AutoLoginPhase;\n  passwordResettingPhase: PasswordResettingPhase;\n  refreshToken?: string;\n  user?: User;\n  userLoginPhase: UserLoginPhase;\n  userRegistrationPhase: UserRegistrationPhase;\n  userTimeStamp?: number;\n  updateUserDataPhase: UpdateUserDataPhase;\n}> = {\n  autoLoginPhase: AutoLoginPhase.initial,\n  passwordResettingPhase: PasswordResettingPhase.initial,\n  userLoginPhase: UserLoginPhase.initial,\n  userRegistrationPhase: UserRegistrationPhase.initial,\n  updateUserDataPhase: UpdateUserDataPhase.initial,\n};\n\nexport const doAutoLogin = createAsyncThunk('user/doAutoLogin', async () => {\n  const { accessSchema, accessToken } = getAccessSchemaAndToken();\n\n  if (!accessSchema || !accessToken) {\n    throw new Error('Action cannot be handled');\n  }\n\n  try {\n    return await apiGetUserData({ auth: { accessSchema, accessToken } });\n  } catch (error) {\n    if (error.message !== 'jwt expired') {\n      throw error;\n    }\n\n    const refreshToken = getRefreshToken();\n\n    if (!refreshToken) {\n      throw error;\n    }\n\n    const payload = await apiRefreshTokens({ refreshToken });\n\n    authenticationSideEffect(payload);\n\n    const { accessSchema, accessToken } = getAccessSchemaAndToken() as Pick<\n      RefreshTokensResponse,\n      'accessSchema' | 'accessToken'\n    >;\n\n    return apiGetUserData({\n      auth: {\n        accessSchema,\n        accessToken,\n      },\n    });\n  }\n});\n\nexport const login = createAsyncThunk('user/login', apiLogin);\n\nexport const logout = createAsyncThunk('user/logout', async () => {\n  const refreshToken = getRefreshToken();\n\n  if (refreshToken) {\n    return apiLogout({ refreshToken: refreshToken });\n  }\n});\n\nexport const registerUser = createAsyncThunk(\n  'user/registerUser',\n  apiRegisterUser\n);\n\nexport const requestNewPasswordSetting = createAsyncThunk(\n  'user/requestNewPasswordSetting',\n  apiRequestNewPasswordSetting\n);\n\nexport const requestPasswordResettingForEmail = createAsyncThunk(\n  'user/requestPasswordResettingForEmail',\n  apiRequestPasswordResettingForEmail\n);\n\nexport const updateUserData = createAsyncThunk(\n  'user/updateUserData',\n  async ({\n    email,\n    name,\n    password,\n  }: {\n    email: string;\n    name: string;\n    password: string;\n  }) => {\n    const { accessSchema, accessToken } = getAccessSchemaAndToken();\n\n    if (!accessSchema || !accessToken) {\n      throw new Error('Action cannot be handled');\n    }\n\n    try {\n      return await apiUpdateUserData({\n        auth: {\n          accessSchema,\n          accessToken,\n        },\n        data: {\n          email,\n          name,\n          password,\n        },\n      });\n    } catch (error) {\n      if (error.message !== 'jwt expired') {\n        throw error;\n      }\n\n      const refreshToken = getRefreshToken();\n\n      if (!refreshToken) {\n        throw error;\n      }\n\n      const payload = await apiRefreshTokens({ refreshToken });\n\n      authenticationSideEffect(payload);\n\n      const { accessSchema, accessToken } = getAccessSchemaAndToken() as Pick<\n        RefreshTokensResponse,\n        'accessSchema' | 'accessToken'\n      >;\n\n      return apiUpdateUserData({\n        auth: { accessSchema, accessToken },\n        data: { email, name, password },\n      });\n    }\n  }\n);\n\nconst slice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    interruptPasswordResettingWorkflow(state) {\n      state.passwordResettingPhase = PasswordResettingPhase.initial;\n    },\n    interruptUpdateUserData(state) {\n      state.updateUserDataPhase = UpdateUserDataPhase.initial;\n    },\n    interruptUserLogin(state) {\n      state.userLoginPhase = UserLoginPhase.initial;\n    },\n    interruptUserRegistration(state) {\n      state.userRegistrationPhase = UserRegistrationPhase.initial;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(requestPasswordResettingForEmail.pending, (state) => {\n        state.passwordResettingPhase =\n          PasswordResettingPhase.requestingApprovalCode;\n      })\n      .addCase(requestPasswordResettingForEmail.fulfilled, (state) => {\n        state.passwordResettingPhase =\n          PasswordResettingPhase.requestingCredentialsFromUser;\n      })\n      .addCase(requestPasswordResettingForEmail.rejected, (state) => {\n        state.passwordResettingPhase = PasswordResettingPhase.initial;\n      });\n\n    builder\n      .addCase(requestNewPasswordSetting.pending, (state) => {\n        state.passwordResettingPhase = PasswordResettingPhase.pendingResetting;\n      })\n      .addCase(requestNewPasswordSetting.fulfilled, (state) => {\n        state.passwordResettingPhase = PasswordResettingPhase.fulfilled;\n      })\n      .addCase(requestNewPasswordSetting.rejected, (state) => {\n        state.passwordResettingPhase = PasswordResettingPhase.rejected;\n      });\n\n    builder\n      .addCase(registerUser.pending, (state) => {\n        state.userRegistrationPhase = UserRegistrationPhase.pending;\n      })\n      .addCase(\n        registerUser.fulfilled,\n        (state, { payload }: PayloadAction<AuthUserResponse>) => {\n          authenticationSideEffect(payload);\n          state.userRegistrationPhase = UserRegistrationPhase.fulfilled;\n          setUser(state, payload.user);\n        }\n      )\n      .addCase(registerUser.rejected, (state) => {\n        state.userRegistrationPhase = UserRegistrationPhase.rejected;\n      });\n\n    builder\n      .addCase(login.pending, (state) => {\n        state.userLoginPhase = UserLoginPhase.pending;\n      })\n      .addCase(\n        login.fulfilled,\n        (state, { payload }: PayloadAction<AuthUserResponse>) => {\n          authenticationSideEffect(payload);\n          state.userLoginPhase = UserLoginPhase.fulfilled;\n          setUser(state, payload.user);\n        }\n      )\n      .addCase(login.rejected, (state) => {\n        state.userLoginPhase = UserLoginPhase.rejected;\n      });\n\n    builder\n      .addCase(logout.pending, () => {})\n      .addCase(logout.fulfilled, (state) => {\n        cleanUpAuthenticationSideEffect();\n        resetUser(state);\n        state.userLoginPhase = UserLoginPhase.initial;\n      })\n      .addCase(logout.rejected, () => {});\n\n    builder\n      .addCase(updateUserData.pending, (state) => {\n        state.updateUserDataPhase = UpdateUserDataPhase.pending;\n      })\n      .addCase(\n        updateUserData.fulfilled,\n        (state, { payload }: PayloadAction<UserResponse>) => {\n          setUser(state, payload.user);\n          state.updateUserDataPhase = UpdateUserDataPhase.fulfilled;\n        }\n      )\n      .addCase(updateUserData.rejected, (state) => {\n        state.updateUserDataPhase = UpdateUserDataPhase.rejected;\n      });\n\n    builder\n      .addCase(doAutoLogin.pending, (state) => {\n        state.autoLoginPhase = AutoLoginPhase.pending;\n      })\n      .addCase(\n        doAutoLogin.fulfilled,\n        (state, { payload }: PayloadAction<User>) => {\n          state.autoLoginPhase = AutoLoginPhase.fulfilled;\n          state.userLoginPhase = UserLoginPhase.fulfilled;\n          setUser(state, payload);\n        }\n      )\n      .addCase(doAutoLogin.rejected, (state) => {\n        state.autoLoginPhase = AutoLoginPhase.rejected;\n      });\n  },\n});\n\nconst { reducer } = slice;\n\nexport { reducer as userReducer };\n\nexport const {\n  interruptPasswordResettingWorkflow,\n  interruptUpdateUserData,\n  interruptUserLogin,\n  interruptUserRegistration,\n} = slice.actions;\n","import Cookies from 'universal-cookie';\nimport { v4 as uuidV4 } from 'uuid';\nimport { AuthUserResponse, RefreshTokensResponse } from '../../types';\nimport { WsActionType, WsActionTypes } from '../middleware';\n\nconst authRefreshTokenKey = 'authRefreshToken';\nconst cookiesCtrl = new Cookies();\n\nexport const authenticationSideEffect = ({\n  accessSchema,\n  accessToken,\n  refreshToken,\n}: RefreshTokensResponse) => {\n  const cookies = {\n    accessSchema,\n    accessToken,\n  };\n\n  Object.entries(cookies).forEach(([cookieName, cookieValue]) =>\n    cookiesCtrl.set(cookieName, cookieValue, { path: '/' })\n  );\n  localStorage.setItem(authRefreshTokenKey, refreshToken);\n};\n\nexport const cleanUpAuthenticationSideEffect = () => {\n  localStorage.removeItem(authRefreshTokenKey);\n  ['accessSchema', 'accessToken'].forEach((cookieName) =>\n    cookiesCtrl.remove(cookieName, { path: '/' })\n  );\n};\n\nexport const generateActionTypes = (): WsActionTypes => {\n  const id = uuidV4();\n\n  return {\n    wsCloseConnection: `${WsActionType.wsCloseConnection}_${id}`,\n    wsConnectionSuccess: `${WsActionType.wsConnectionSuccess}_${id}`,\n    wsConnectionError: `${WsActionType.wsConnectionError}_${id}`,\n    wsConnectionClose: `${WsActionType.wsConnectionClose}_${id}`,\n    wsGetMessage: `${WsActionType.wsGetMessage}_${id}`,\n    wsOpenConnection: `${WsActionType.wsOpenConnection}_${id}`,\n    wsSendMessage: `${WsActionType.wsSendMessage}_${id}`,\n  };\n};\n\nexport const getAccessSchemaAndToken = (): Partial<\n  Pick<RefreshTokensResponse, 'accessSchema' | 'accessToken'>\n> => {\n  return ['accessSchema', 'accessToken'].reduce(\n    (result, cookieName) =>\n      Object.assign(result, {\n        [cookieName]: cookiesCtrl.get(cookieName),\n      }),\n    {}\n  );\n};\n\nexport const getRefreshToken = ():\n  | AuthUserResponse['refreshToken']\n  | undefined => {\n  return localStorage.authRefreshToken;\n};\n\nexport const getAuthHeaderValue = (): string | undefined => {\n  const { accessSchema, accessToken } = getAccessSchemaAndToken();\n\n  if (accessSchema && accessToken) {\n    return `${accessSchema} ${accessToken}`;\n  }\n};\n\nexport const setUser = (state: any, user: any) => {\n  state.user = user;\n  state.userTimeStamp = new Date().getTime();\n};\n\nexport const resetUser = (state: any) => {\n  delete state.user;\n  delete state.userTimeStamp;\n};\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { v4 as uuidV4 } from 'uuid';\nimport {\n  ActualIngredient_t,\n  ActualIngredientType,\n  Ingredient_t,\n  IngredientType,\n  OrderDetails_t,\n} from '../../types';\nimport {\n  fetchIngredients as apiFetchIngredients,\n  placeAnOrder as apiPlaceAnOrder,\n} from '../api';\nimport { getAccessSchemaAndToken } from '../helpers';\n\nconst generateIngredientId = () => uuidV4();\n\nconst initialState: Readonly<{\n  actualIngredients: ActualIngredient_t[];\n  idToIngredientMap: { [key: string]: Ingredient_t };\n  idToActualIngredientsCountMap: { [key: string]: number };\n  ingredients: Ingredient_t[];\n  ingredientsError: unknown | null;\n  ingredientsRequest: boolean;\n  orderDetails: OrderDetails_t | null;\n  orderDetailsError: unknown | null;\n  orderDetailsRequest: boolean;\n  totalAmount: number;\n}> = {\n  actualIngredients: [],\n  idToActualIngredientsCountMap: {},\n  idToIngredientMap: {},\n  ingredients: [],\n  ingredientsError: null,\n  ingredientsRequest: true,\n  orderDetails: null,\n  orderDetailsError: null,\n  orderDetailsRequest: false,\n  totalAmount: 0,\n};\n\ntype InitialState_t = typeof initialState;\n\nconst calcTotal = ({\n  actualIngredients,\n  idToIngredientMap,\n}: InitialState_t) => {\n  const ingredientIds = actualIngredients.map(({ refId }) => refId);\n\n  return ingredientIds.reduce((result, refId) => {\n    const { price } = idToIngredientMap[refId]!;\n\n    return result + price;\n  }, 0);\n};\n\nconst buildIdToActualIngredientsCountMap = ({\n  actualIngredients,\n}: InitialState_t): InitialState_t['idToActualIngredientsCountMap'] =>\n  actualIngredients.reduce((map, actualIngredient) => {\n    if (Object.prototype.hasOwnProperty.call(map, actualIngredient.refId)) {\n      map[actualIngredient.refId] += 1;\n    } else {\n      map[actualIngredient.refId] = 1;\n    }\n\n    return map;\n  }, {} as InitialState_t['idToActualIngredientsCountMap']);\n\nexport const fetchIngredients = createAsyncThunk(\n  'burger/fetchIngredients',\n  apiFetchIngredients\n);\n\nexport const placeAnOrder = createAsyncThunk(\n  'burger/placeAnOrder',\n  async (ingredients: Ingredient_t['_id'][]) => {\n    const { accessSchema, accessToken } = getAccessSchemaAndToken();\n\n    if (ingredients.length === 0) {\n      throw new Error(\n        'Unable to place an order for the empty ingredients list'\n      );\n    }\n\n    if (!accessSchema || !accessToken) {\n      throw new Error('Action cannot be handled');\n    }\n\n    return apiPlaceAnOrder({\n      ingredients,\n      auth: { accessSchema, accessToken },\n    });\n  }\n);\n\nconst slice = createSlice({\n  name: 'burger',\n  initialState,\n  reducers: {\n    addIngredient(state, { payload: ingredient }: PayloadAction<Ingredient_t>) {\n      const { actualIngredients } = state;\n      const { _id, type } = ingredient;\n\n      if (type === IngredientType.bun) {\n        const [topBun, bottomBun] = [\n          ActualIngredientType.top,\n          ActualIngredientType.bottom,\n        ].map((type) => ({\n          id: generateIngredientId(),\n          type,\n          isLocked: true,\n          refId: _id,\n        }));\n\n        state.actualIngredients = [\n          topBun,\n          ...actualIngredients.slice(1, -1),\n          bottomBun,\n        ];\n      } else {\n        const newValue = [...actualIngredients];\n\n        newValue.splice(-1, 0, {\n          id: generateIngredientId(),\n          refId: _id,\n        });\n\n        state.actualIngredients = newValue;\n      }\n\n      state.totalAmount = calcTotal(state);\n      state.idToActualIngredientsCountMap =\n        buildIdToActualIngredientsCountMap(state);\n    },\n    moveIngredient(\n      state,\n      { payload: [fromIndex, toIndex] }: PayloadAction<[number, number]>\n    ) {\n      const { actualIngredients: actualIngredientsFromState } = state;\n      const actualIngredients = [...actualIngredientsFromState];\n\n      actualIngredients.splice(\n        toIndex,\n        0,\n        actualIngredients.splice(fromIndex, 1)[0]\n      );\n\n      state.actualIngredients = actualIngredients;\n    },\n    removeIngredient(\n      state,\n      { payload: idToRemove }: PayloadAction<ActualIngredient_t['id']>\n    ) {\n      const { actualIngredients } = state;\n      const removableIngredients = state.actualIngredients.slice(1, -1);\n\n      if (removableIngredients.map(({ id }) => id).includes(idToRemove)) {\n        state.actualIngredients = [\n          actualIngredients[0],\n          ...removableIngredients.filter(({ id }) => id !== idToRemove),\n          actualIngredients[actualIngredients.length - 1],\n        ];\n        state.totalAmount = calcTotal(state);\n        state.idToActualIngredientsCountMap =\n          buildIdToActualIngredientsCountMap(state);\n      }\n    },\n    resetOrderDetails(state) {\n      if (!state.orderDetailsRequest) {\n        Object.assign(state, {\n          orderDetails: null,\n          orderDetailsError: null,\n          orderDetailsRequest: false,\n        });\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchIngredients.pending, (state) => {\n        Object.assign(state, {\n          ...initialState,\n          ingredientsRequest: true,\n        });\n      })\n      .addCase(\n        fetchIngredients.fulfilled,\n        (state, { payload: ingredients }: PayloadAction<Ingredient_t[]>) => {\n          const idToIngredientMap: InitialState_t['idToIngredientMap'] = {};\n\n          ingredients.forEach((ingredient) => {\n            idToIngredientMap[ingredient._id] = ingredient;\n          });\n\n          Object.assign(state, {\n            idToIngredientMap,\n            ingredients,\n            ingredientsRequest: false,\n          });\n        }\n      )\n      .addCase(\n        fetchIngredients.rejected,\n        (\n          state,\n          { error }: PayloadAction<unknown, string, unknown, unknown>\n        ) => {\n          Object.assign(state, {\n            ingredientsError: error,\n            ingredientsRequest: false,\n          });\n        }\n      );\n    builder\n      .addCase(placeAnOrder.pending, (state) => {\n        Object.assign(state, {\n          orderDetails: null,\n          orderDetailsError: null,\n          orderDetailsRequest: true,\n        });\n      })\n      .addCase(\n        placeAnOrder.fulfilled,\n        (state, { payload: orderDetails }: PayloadAction<OrderDetails_t>) => {\n          state.orderDetailsRequest = false;\n          state.orderDetails = orderDetails;\n          state.actualIngredients = [];\n          state.totalAmount = calcTotal(state);\n          state.idToActualIngredientsCountMap =\n            buildIdToActualIngredientsCountMap(state);\n        }\n      )\n      .addCase(\n        placeAnOrder.rejected,\n        (\n          state,\n          { error }: PayloadAction<unknown, string, unknown, unknown>\n        ) => {\n          Object.assign(state, {\n            orderDetailsError: error,\n            orderDetailsRequest: false,\n          });\n        }\n      );\n  },\n});\n\nconst { reducer } = slice;\n\nexport { reducer as burgerReducer };\n\nexport const {\n  addIngredient,\n  moveIngredient,\n  removeIngredient,\n  resetOrderDetails,\n} = slice.actions;\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Order } from '../../types';\nimport { generateActionTypes, getAccessSchemaAndToken } from '../helpers';\nimport { WsActionTypes } from '../middleware';\n\nconst initialState: Readonly<{\n  orders: Order[];\n  total?: number;\n  totalToday?: number;\n  userOrders: Order[];\n}> = {\n  orders: [],\n  userOrders: [],\n};\n\nconst chunkCodeToUrlMap: {\n  orders: string;\n  userOrders: string;\n} = {\n  orders: '/orders/all',\n  userOrders: '/orders',\n};\n\ntype ChunkCodeToChunkWsDataMap = {\n  [key in keyof typeof chunkCodeToUrlMap]: {\n    subscribe: any;\n    unsubscribe: any;\n    url: string;\n    wsActionTypes: WsActionTypes;\n  };\n};\n\nconst chunkCodeToChunkWsDataMap: ChunkCodeToChunkWsDataMap = Object.entries(\n  chunkCodeToUrlMap\n).reduce((result, [key, url]) => {\n  const wsActionTypes = generateActionTypes();\n\n  result[key as keyof typeof chunkCodeToUrlMap] = {\n    subscribe: createAsyncThunk(\n      `orders/${key}/subscribe`,\n      (_, { dispatch }) => {\n        if (key === 'orders') {\n          dispatch({ type: wsActionTypes.wsOpenConnection });\n        }\n        if (key === 'userOrders') {\n          const { accessSchema, accessToken } = getAccessSchemaAndToken();\n\n          if (!accessSchema || !accessToken) {\n            throw new Error('Action cannot be handled');\n          }\n\n          dispatch({\n            type: wsActionTypes.wsOpenConnection,\n            payload: { auth: { accessSchema, accessToken } },\n          });\n        }\n      }\n    ),\n    unsubscribe: createAsyncThunk(\n      `orders/${key}/unsubscribe`,\n      (_, { dispatch }) => {\n        dispatch({\n          type: wsActionTypes.wsCloseConnection,\n        });\n      }\n    ),\n    url,\n    wsActionTypes,\n  };\n\n  return result;\n}, {} as ChunkCodeToChunkWsDataMap);\n\nconst slice = createSlice({\n  name: 'orders',\n  initialState,\n  reducers: {\n    [chunkCodeToChunkWsDataMap.orders.wsActionTypes.wsGetMessage](\n      state,\n      {\n        payload: { success, orders, total, totalToday },\n      }: PayloadAction<{\n        success: boolean;\n        orders?: Order[];\n        total?: number;\n        totalToday?: number;\n      }>\n    ) {\n      if (success) {\n        state.orders = orders!;\n        state.total = total!;\n        state.totalToday = totalToday!;\n      }\n    },\n    [chunkCodeToChunkWsDataMap.userOrders.wsActionTypes.wsGetMessage](\n      state,\n      {\n        payload: { success, orders },\n      }: PayloadAction<{\n        success: boolean;\n        orders?: Order[];\n        total?: number;\n        totalToday?: number;\n      }>\n    ) {\n      if (success) {\n        state.userOrders = orders!;\n      }\n    },\n  },\n  extraReducers(builder) {\n    builder.addCase(\n      chunkCodeToChunkWsDataMap.orders.subscribe.pending,\n      () => {}\n    );\n    builder.addCase(\n      chunkCodeToChunkWsDataMap.userOrders.subscribe.pending,\n      () => {}\n    );\n  },\n});\n\nconst { reducer } = slice;\n\nexport const urlAndWaActionTypesPairs = Object.values(chunkCodeToChunkWsDataMap)\n  .map((chunkWsData) => ({\n    ...chunkWsData,\n    wsActionTypes: Object.fromEntries(\n      Object.entries(chunkWsData.wsActionTypes).map(\n        ([waActionType, actionType]) => [\n          waActionType,\n          slice.actions[actionType]\n            ? slice.actions[actionType].type\n            : actionType,\n        ]\n      )\n    ) as WsActionTypes,\n  }))\n  .map(({ url, wsActionTypes }): [string, WsActionTypes] => [\n    url,\n    wsActionTypes,\n  ]);\n\nexport { reducer as ordersReducer };\n\nexport const subscribeForOrders = chunkCodeToChunkWsDataMap.orders.subscribe;\nexport const subscribeForUserOrders =\n  chunkCodeToChunkWsDataMap.userOrders.subscribe;\nexport const unsubscribeForUserOrders =\n  chunkCodeToChunkWsDataMap.userOrders.unsubscribe;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-page\":\"style_profile-page__12ojB\",\"profile-page__menu\":\"style_profile-page__menu__2OSFh\",\"profile-page__content\":\"style_profile-page__content__2Awb7\",\"profile-page__menu-item\":\"style_profile-page__menu-item__2eOTc\",\"profile-page__menu-item-active\":\"style_profile-page__menu-item-active__2p6ra\",\"profile-page__link\":\"style_profile-page__link__9hpBo\"};","import { Dispatch, MiddlewareAPI, PayloadAction } from '@reduxjs/toolkit';\nimport { Action, Middleware } from 'redux';\nimport { AccessSchemaWithToken } from '../api';\n\ninterface WsGeneralActionPayload {\n  message?: {};\n}\n\nexport enum WsActionType {\n  wsCloseConnection = 'wsCloseConnection',\n  wsConnectionSuccess = 'wsConnectionSuccess',\n  wsConnectionError = 'wsConnectionError',\n  wsConnectionClose = 'wsConnectionClose',\n  wsGetMessage = 'wsGetMessage',\n  wsOpenConnection = 'wsOpenConnection',\n  wsSendMessage = 'wsSendMessage',\n}\n\nexport type WsActionTypes = {\n  [key in WsActionType]: string;\n};\n\nexport const socketMiddlewareFabric = (\n  url: string,\n  wsActionTypes: WsActionTypes\n): Middleware => {\n  return (\n    store: MiddlewareAPI<Dispatch<Action<WsActionTypes[keyof WsActionTypes]>>>\n  ) => {\n    let socket: WebSocket | undefined;\n\n    return (next) =>\n      (\n        action: PayloadAction<\n          WsGeneralActionPayload,\n          WsActionTypes[keyof WsActionTypes]\n        >\n      ) => {\n        const { dispatch } = store;\n        const { type, payload } = action;\n\n        switch (type) {\n          case wsActionTypes.wsOpenConnection: {\n            const { auth } = (payload ?? {}) as {\n              auth?: AccessSchemaWithToken;\n            };\n            const { accessToken } = (auth ?? {}) as AccessSchemaWithToken;\n\n            socket = new WebSocket(\n              `${url}${accessToken ? `?token=${accessToken}` : ''}`\n            );\n            socket.onopen = () => {\n              dispatch({\n                type: wsActionTypes.wsConnectionSuccess,\n              });\n            };\n            socket.onmessage = (event) => {\n              const { data: serializedData } = event;\n              const data = JSON.parse(serializedData);\n\n              dispatch({\n                type: wsActionTypes.wsGetMessage,\n                payload: data,\n              });\n            };\n            socket.onerror = () => {\n              dispatch({\n                type: wsActionTypes.wsConnectionError,\n              });\n            };\n            socket.onclose = () => {\n              dispatch({\n                type: wsActionTypes.wsConnectionClose,\n              });\n            };\n            break;\n          }\n          case wsActionTypes.wsCloseConnection:\n            socket?.close();\n            socket = undefined;\n            break;\n          case wsActionTypes.wsSendMessage: {\n            const { message } = payload;\n\n            socket?.send(JSON.stringify(message));\n            break;\n          }\n        }\n\n        next(action);\n      };\n  };\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed-activity\":\"style_feed-activity__2zM2N\",\"feed-activity__orders-by-status\":\"style_feed-activity__orders-by-status__1Kga_\",\"feed-activity__orders-list\":\"style_feed-activity__orders-list__2-LdL\",\"feed-activity__orders-list_done\":\"style_feed-activity__orders-list_done__Db1G3\",\"feed-activity__order\":\"style_feed-activity__order__3DQ7U\",\"feed-activity__orders-wrapper\":\"style_feed-activity__orders-wrapper__1YlLl\",\"feed-activity__orders\":\"style_feed-activity__orders__1sK3E\",\"feed-activity__orders-total-count\":\"style_feed-activity__orders-total-count__NlUFF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"style_form__3d8HQ\",\"form__header\":\"style_form__header__3sDZb\",\"form__body\":\"style_form__body__2i5xi\",\"form__errors\":\"style_form__errors__29KrO\",\"form__buttons-container\":\"style_form__buttons-container__3hu67\",\"form__button-wrapper\":\"style_form__button-wrapper__I3YEI\",\"form__additional-actions\":\"style_form__additional-actions__3Z0Nm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient-details\":\"style_ingredient-details__13xEY\",\"ingredient-details__picture-wrapper\":\"style_ingredient-details__picture-wrapper__2n82A\",\"ingredient-details__picture\":\"style_ingredient-details__picture__11V57\",\"ingredient-details__title\":\"style_ingredient-details__title__WZMcA\",\"ingredient-details__nutritional-values\":\"style_ingredient-details__nutritional-values__XSWu_\",\"ingredient-details__nutritional-value\":\"style_ingredient-details__nutritional-value__1P1f6\",\"ingredient-details__nutritional-value-title\":\"style_ingredient-details__nutritional-value-title__3110a\",\"ingredient-details__nutritional-value-value\":\"style_ingredient-details__nutritional-value-value__2HErT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-constructor-item\":\"style_burger-constructor-item__6ndAy\",\"burger-constructor-item_is-drag-over\":\"style_burger-constructor-item_is-drag-over__8rJ5N\",\"burger-constructor-item_is-can-drop\":\"style_burger-constructor-item_is-can-drop__1ROm7\",\"burger-constructor-item_is-picked\":\"style_burger-constructor-item_is-picked__bR2iz\",\"burger-constructor-item__constructor-element-wrapper\":\"style_burger-constructor-item__constructor-element-wrapper__2ki39\",\"burger-constructor-item_interactive\":\"style_burger-constructor-item_interactive__3QnkX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-ingredient\":\"style_burger-ingredient__It1Se\",\"burger-ingredient_interactive\":\"style_burger-ingredient_interactive__3zkQq\",\"burger-ingredient_is-picked\":\"style_burger-ingredient_is-picked__3Qo2E\",\"burger-ingredient__image-wrapper\":\"style_burger-ingredient__image-wrapper__2P4Vw\",\"burger-ingredient__price-wrapper\":\"style_burger-ingredient__price-wrapper__2td-g\",\"burger-ingredient__title\":\"style_burger-ingredient__title__26qp_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-ingredients\":\"style_burger-ingredients__2mHyl\",\"burger-ingredients__filter\":\"style_burger-ingredients__filter__1NLWy\",\"burger-ingredients__type-list\":\"style_burger-ingredients__type-list__IM2C3\",\"burger-ingredients__type-item\":\"style_burger-ingredients__type-item__1JXTu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-details\":\"style_order-details__DhWNa\",\"order-details__number\":\"style_order-details__number__V177Z\",\"order-details__ingredients\":\"style_order-details__ingredients__3bnWR\",\"order-details__date-and-price-wrapper\":\"style_order-details__date-and-price-wrapper__22VvY\",\"order-details__date\":\"style_order-details__date__2fzRM\",\"order-details__price\":\"style_order-details__price__3cT3V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed-page\":\"style_feed-page__1EcWu\",\"feed-page__feed-wrapper\":\"style_feed-page__feed-wrapper__a7rWx\",\"feed-page__activity\":\"style_feed-page__activity__3VV0z\",\"feed-page__space\":\"style_feed-page__space__2Tocc\",\"feed-page__title\":\"style_feed-page__title__uWGJ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"style_modal__vQxtL\",\"modal__header\":\"style_modal__header__3dmqg\",\"modal__title\":\"style_modal__title__14q9S\",\"modal__close-button\":\"style_modal__close-button__3aKnX\",\"modal__content\":\"style_modal__content__1zYdw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"placed-order-details\":\"style_placed-order-details__3oQDj\",\"placed-order-details__id\":\"style_placed-order-details__id__36QKe\",\"placed-order-details__id-title\":\"style_placed-order-details__id-title__uZuw6\",\"placed-order-details__status-icon-wrapper\":\"style_placed-order-details__status-icon-wrapper__3cFVu\",\"placed-order-details__status-title\":\"style_placed-order-details__status-title__3epTR\",\"placed-order-details__message\":\"style_placed-order-details__message__3FkGV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-header\":\"style_app-header__C5Utm\",\"app-header__menu-list\":\"style_app-header__menu-list__tOfh6\",\"app-header__logo-wrapper\":\"style_app-header__logo-wrapper__2jy8W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"style_order__zDJGQ\",\"order__number-and-date-wrapper\":\"style_order__number-and-date-wrapper__1jBEz\",\"order__number\":\"style_order__number__2M1gc\",\"order__date\":\"style_order__date__3-Vi4\",\"order__title\":\"style_order__title__1AHlE\"};","import { configureStore } from '@reduxjs/toolkit';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { apiHostUrl } from './api';\nimport { socketMiddlewareFabric } from './middleware';\nimport {\n  burgerReducer,\n  ordersReducer,\n  userReducer,\n  urlAndWaActionTypesPairs,\n} from './reducers';\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(\n      urlAndWaActionTypesPairs.map(([url, wsActionTypes]) =>\n        socketMiddlewareFabric(\n          `ws${`${apiHostUrl.replace(/^http/, '')}`}${url}`,\n          wsActionTypes\n        )\n      )\n    ),\n  reducer: {\n    burger: burgerReducer,\n    orders: ordersReducer,\n    user: userReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector = <T>(\n  func: (state: RootState) => T,\n  cmp?: typeof shallowEqual\n): T => useSelector(func, cmp);\n\nexport { store };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"amount\":\"style_amount__2_jh4\",\"amount_type_total\":\"style_amount_type_total__pvRzS\",\"amount__amount\":\"style_amount__amount__315ja\",\"amount__currency-wrapper\":\"style_amount__currency-wrapper__2m355\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredients-and-price\":\"style_ingredients-and-price__3ETkO\",\"ingredients-and-price__ingredients\":\"style_ingredients-and-price__ingredients__uOPK3\",\"ingredients-and-price__ingredient\":\"style_ingredients-and-price__ingredient__1LWgi\",\"ingredients-and-price__price\":\"style_ingredients-and-price__price__2jACN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-page\":\"style_main-page__Jmc7f\",\"main-page__ingredients\":\"style_main-page__ingredients__1V60h\",\"main-page__constructor\":\"style_main-page__constructor__UVP6s\",\"main-page__space\":\"style_main-page__space__3sPGu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient-icon\":\"style_ingredient-icon__ocBI9\",\"ingredient-icon__image\":\"style_ingredient-icon__image__3UlgI\",\"ingredient-icon__more-ingredients-count\":\"style_ingredient-icon__more-ingredients-count__1Etp1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient-and-price\":\"style_ingredient-and-price__2V9AG\",\"ingredient-and-price__quantity-and-price-wrapper\":\"style_ingredient-and-price__quantity-and-price-wrapper__2OdnI\",\"ingredient-and-price__quantity\":\"style_ingredient-and-price__quantity__2HYYA\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { DragPreviewImage, useDrag, useDrop } from 'react-dnd';\nimport {\n  ConstructorElement,\n  DragIcon,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport {\n  ActualIngredientDragItem,\n  ActualIngredientType,\n  DraggableTypes,\n  Ingredient_t,\n} from '../../../types';\nimport { lexemes } from '../../../consts';\nimport { useAppDispatch, useAppSelector } from '../../../services/store';\nimport { moveIngredient } from '../../../services/reducers';\n\nimport style from './style.module.css';\n\nconst BurgerConstructorItem = ({\n  className,\n  index,\n  ingredient: { _id, image, name, price },\n  isLocked,\n  onShowIngredientInfo,\n  onDelete,\n  type,\n}: {\n  className?: string;\n  index?: number;\n  ingredient: Ingredient_t;\n  isLocked: boolean;\n  onShowIngredientInfo?: () => void;\n  onDelete?: () => void;\n  type?: ActualIngredientType;\n}) => {\n  const orderDetailsRequest = useAppSelector(\n    (state) => state.burger.orderDetailsRequest\n  );\n  const dispatch = useAppDispatch();\n  const [{ isItPicked }, dragRef, preview] = useDrag({\n    type: DraggableTypes.actualIngredient,\n    canDrag: !isLocked && !orderDetailsRequest,\n    item: {\n      index,\n    } as ActualIngredientDragItem,\n    collect(monitor) {\n      return {\n        isItPicked: monitor.isDragging(),\n      };\n    },\n  });\n  const [{ isCanDrop, isDragOver }, dropRef] = useDrop({\n    accept: DraggableTypes.actualIngredient,\n    canDrop() {\n      return !isLocked && !orderDetailsRequest;\n    },\n    collect(monitor) {\n      return {\n        isCanDrop: monitor.canDrop(),\n        isDragOver: monitor.isOver(),\n      };\n    },\n    hover(item) {\n      const { index: draggableIndex } = item as ActualIngredientDragItem;\n\n      if (index === draggableIndex) {\n        return;\n      }\n\n      if (index != null) {\n        //mutate the item in order to prevent multiple dispatches\n        (item as ActualIngredientDragItem).index = index;\n        setImmediate(() => {\n          dispatch(moveIngredient([draggableIndex, index]));\n        });\n      }\n    },\n  });\n\n  return (\n    <div\n      ref={dropRef}\n      className={cs(\n        style['burger-constructor-item'],\n        {\n          [style['burger-constructor-item_interactive']]: onShowIngredientInfo,\n          [style['burger-constructor-item_is-picked']]: isItPicked,\n          [style['burger-constructor-item_is-can-drop']]: isCanDrop,\n          [style['burger-constructor-item_is-drag-over']]: isDragOver,\n          'pt-4': !isLocked,\n        },\n        className\n      )}\n      onClick={(event) => {\n        const target = event.target as HTMLElement;\n\n        if (\n          onShowIngredientInfo &&\n          target.closest(\n            `.${style['burger-constructor-item__constructor-element-wrapper']}`\n          ) &&\n          !target.closest('.constructor-element__action')\n        ) {\n          onShowIngredientInfo();\n        }\n      }}\n    >\n      {!isLocked ? (\n        <div ref={dragRef}>\n          <DragIcon type={'primary'} />\n        </div>\n      ) : (\n        <div className={'pl-8'} />\n      )}\n      <DragPreviewImage connect={preview} src={image} />\n      <div className={'pl-6'} />\n      <div\n        className={\n          style['burger-constructor-item__constructor-element-wrapper']\n        }\n      >\n        <ConstructorElement\n          handleClose={onDelete}\n          isLocked={isLocked}\n          price={price}\n          text={`${name}${\n            type\n              ? ` (${\n                  type === ActualIngredientType.top\n                    ? lexemes.top\n                    : lexemes.bottom\n                })`\n              : ''\n          }`}\n          thumbnail={image}\n          type={type}\n        />\n      </div>\n    </div>\n  );\n};\n\nBurgerConstructorItem.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  index: PropTypes.number,\n  ingredient: PropTypes.object.isRequired,\n  isLocked: PropTypes.bool.isRequired,\n  onShowIngredientInfo: PropTypes.func,\n  onDelete: PropTypes.func,\n  type: PropTypes.oneOf([\n    ActualIngredientType.top,\n    ActualIngredientType.bottom,\n  ]),\n};\n\nexport { BurgerConstructorItem };\n"],"sourceRoot":""}