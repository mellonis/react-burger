{"version":3,"sources":["services/api/index.ts","services/reducers/index.ts","components/burger-constructor/style.module.css","components/ingredient-details/style.module.css","reportWebVitals.ts","components/app-header/menu-item/index.tsx","components/app-header/index.tsx","components/amount/index.tsx","components/burger-ingredients/burger-ingredient/index.tsx","components/burger-ingredients/burger-ingredient-type/index.tsx","components/burger-ingredients/index.tsx","components/burger-constructor/index.tsx","components/ingredient-details/index.tsx","components/modal/modal-overlay/index.tsx","components/modal/index.tsx","components/order-details/index.tsx","components/app-body/index.tsx","components/app/index.tsx","index.tsx","components/burger-ingredients/burger-ingredient/style.module.css","components/burger-ingredients/style.module.css","components/burger-constructor/burger-constructor-item/style.module.css","components/app-header/style.module.css","components/modal/style.module.css","components/order-details/style.module.css","components/amount/style.module.css","components/app-body/style.module.css","components/burger-constructor/burger-constructor-item/index.tsx","consts.ts","components/app-header/menu-item/style.module.css","types.ts","components/modal/modal-overlay/style.module.css","services/store.ts","components/burger-ingredients/burger-ingredient-type/style.module.css","components/app/style.module.css"],"names":["apiHostUrl","fetchIngredients","a","fetch","response","json","result","success","data","Error","placeAnOrder","ingredients","body","JSON","stringify","headers","Headers","method","id","order","number","message","status","OrderStatus_t","BEING_COOKED","generateIngredientId","uuidV4","initialState","actualIngredients","detailedIngredient","idToActualIngredientsCountMap","idToIngredientMap","ingredientsError","ingredientsRequest","orderDetails","orderDetailsError","orderDetailsRequest","totalAmount","calcTotal","map","refId","reduce","price","buildIdToActualIngredientsCountMap","actualIngredient","Object","prototype","hasOwnProperty","call","createAsyncThunk","apiFetchIngredients","length","apiPlaceAnOrder","appSlice","createSlice","name","reducers","addIngredient","state","ingredient","payload","_id","type","IngredientType","bun","ActualIngredientType","top","bottom","isLocked","topBun","bottomBun","slice","newValue","splice","moveIngredient","fromIndex","toIndex","actualIngredientsFromState","removeIngredient","idToRemove","removableIngredients","includes","filter","resetDetailedIngredient","resetOrderDetails","assign","setDetailedIngredient","action","extraReducers","builder","addCase","pending","fulfilled","forEach","rejected","error","actions","module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","MenuItem","className","Icon","isActive","text","cs","style","text_color_inactive","defaultProps","AppHeader","styles","BurgerIcon","lexemes","constructor","ListIcon","orderList","ProfileIcon","profile","Amount","amount","isTotal","BurgerIngredient","image","title","onClick","useAppSelector","main","useDrag","DraggableTypes","options","dropEffect","item","collect","monitoring","isItPicked","isDragging","dragRef","preview","ref","DragPreviewImage","connect","src","count","alt","BurgerIngredientType","dispatch","useAppDispatch","data-type","ix","Fragment","ingredientTypeTitles","buns","sauce","sauces","burgerFillings","ingredientTypes","keys","thresholds","Array","from","thresholdsStepsCount","_","BurgerIngredients","useState","selectedIngredientType","setSelectedIngredientType","ingredientTypeToIngredientsMap","useMemo","axillaryMap","Map","has","set","get","push","ingredientType","clear","typeListElementRef","useRef","useEffect","typeListElement","current","items","querySelectorAll","ingredientToIntersectionRatioMap","intersectionObserver","IntersectionObserver","intersectionObserverEntries","target","intersectionRatio","dataset","mostVisibleType","entries","sort","irA","root","threshold","observe","disconnect","assembleABurger","active","value","currentListItemElement","querySelector","scrollIntoView","behavior","BurgerConstructor","placeAnOrderClickHandler","useCallback","useDrop","accept","canDrop","monitor","getItemType","drop","isCanDrop","isDragOver","isOver","dropRef","onShowIngredientInfo","index","onDelete","size","IngredientDetails","calories","carbohydrates","fat","proteins","nutritionalValues","list","key","ModalOverlay","Modal","children","onClose","modalElementRef","modalElement","focus","keyDownHandler","onKeyDown","tabIndex","OrderDetails","String","padStart","orderId","orderStatusToStatusTitleMap","AppBody","DndProvider","backend","Html5Backend","ingredientDetails","App","ReactDOM","render","StrictMode","store","document","getElementById","BurgerConstructorItem","canDrag","hover","draggableIndex","setImmediate","event","closest","handleClose","thumbnail","COOKED","BEING_DELIVERED","DELIVERED","configureStore","devTools","process","reducer","mainReducer","useDispatch","func","useSelector"],"mappings":"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","file":"static/js/main.3b11b23a.chunk.js","sourcesContent":["import { Ingredient_t, OrderDetails_t, OrderStatus_t } from '../../types';\n\nexport const apiHostUrl = 'https://norma.nomoreparties.space';\n\nexport const fetchIngredients = async (): Promise<Ingredient_t[]> => {\n  const response = await fetch(`${apiHostUrl}/api/ingredients`);\n  const result = await response.json();\n\n  if (result.success === true) {\n    return result.data;\n  } else {\n    throw new Error(\"Can't get data from server\");\n  }\n};\n\nexport const placeAnOrder = async (\n  ingredients: Ingredient_t['_id'][]\n): Promise<OrderDetails_t> => {\n  const response = await fetch(`${apiHostUrl}/api/orders`, {\n    body: JSON.stringify({ ingredients }),\n    headers: new Headers([['Content-Type', 'application/json']]),\n    method: 'POST',\n  });\n  const result = await response.json();\n\n  if (result.success === true) {\n    return {\n      id: result.order.number,\n      message: 'Дождитесь готовности на орбитальной станции',\n      status: OrderStatus_t.BEING_COOKED,\n    };\n  } else {\n    throw new Error(\"Can't get data from server\");\n  }\n};\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { v4 as uuidV4 } from 'uuid';\nimport {\n  ActualIngredient_t,\n  ActualIngredientType,\n  Ingredient_t,\n  IngredientType,\n  OrderDetails_t,\n} from '../../types';\nimport {\n  fetchIngredients as apiFetchIngredients,\n  placeAnOrder as apiPlaceAnOrder,\n} from '../api';\n\nconst generateIngredientId = () => uuidV4();\n\nconst initialState: Readonly<{\n  actualIngredients: ActualIngredient_t[];\n  detailedIngredient: Ingredient_t | null;\n  idToIngredientMap: { [key: string]: Ingredient_t };\n  idToActualIngredientsCountMap: { [key: string]: number };\n  ingredients: Ingredient_t[];\n  ingredientsError: unknown | null;\n  ingredientsRequest: boolean;\n  orderDetails: OrderDetails_t | null;\n  orderDetailsError: unknown | null;\n  orderDetailsRequest: boolean;\n  totalAmount: number;\n}> = {\n  actualIngredients: [],\n  detailedIngredient: null,\n  idToActualIngredientsCountMap: {},\n  idToIngredientMap: {},\n  ingredients: [],\n  ingredientsError: null,\n  ingredientsRequest: false,\n  orderDetails: null,\n  orderDetailsError: null,\n  orderDetailsRequest: false,\n  totalAmount: 0,\n};\n\ntype InitialState_t = typeof initialState;\n\nconst calcTotal = ({\n  actualIngredients,\n  idToIngredientMap,\n}: InitialState_t) => {\n  const ingredientIds = actualIngredients.map(({ refId }) => refId);\n\n  return ingredientIds.reduce((result, refId) => {\n    const { price } = idToIngredientMap[refId]!;\n\n    return result + price;\n  }, 0);\n};\n\nconst buildIdToActualIngredientsCountMap = ({\n  actualIngredients,\n}: InitialState_t): InitialState_t['idToActualIngredientsCountMap'] =>\n  actualIngredients.reduce((map, actualIngredient) => {\n    if (Object.prototype.hasOwnProperty.call(map, actualIngredient.refId)) {\n      map[actualIngredient.refId] += 1;\n    } else {\n      map[actualIngredient.refId] = 1;\n    }\n\n    return map;\n  }, {} as InitialState_t['idToActualIngredientsCountMap']);\n\nexport const fetchIngredients = createAsyncThunk(\n  'main/fetchIngredients',\n  apiFetchIngredients\n);\n\nexport const placeAnOrder = createAsyncThunk(\n  'main/placeAnOrder',\n  async (ingredients: Ingredient_t['_id'][]) => {\n    if (ingredients.length === 0) {\n      throw new Error(\n        'Unable to place an order for the empty ingredients list'\n      );\n    }\n\n    return apiPlaceAnOrder(ingredients);\n  }\n);\n\nexport const appSlice = createSlice({\n  name: 'main',\n  initialState,\n  reducers: {\n    addIngredient(state, { payload: ingredient }: PayloadAction<Ingredient_t>) {\n      const { actualIngredients } = state;\n      const { _id, type } = ingredient;\n\n      if (type === IngredientType.bun) {\n        const [topBun, bottomBun] = [\n          ActualIngredientType.top,\n          ActualIngredientType.bottom,\n        ].map((type) => ({\n          id: generateIngredientId(),\n          type,\n          isLocked: true,\n          refId: _id,\n        }));\n\n        state.actualIngredients = [\n          topBun,\n          ...actualIngredients.slice(1, -1),\n          bottomBun,\n        ];\n      } else {\n        const newValue = [...actualIngredients];\n\n        newValue.splice(-1, 0, {\n          id: generateIngredientId(),\n          refId: _id,\n        });\n\n        state.actualIngredients = newValue;\n      }\n\n      state.totalAmount = calcTotal(state);\n      state.idToActualIngredientsCountMap = buildIdToActualIngredientsCountMap(\n        state\n      );\n    },\n    moveIngredient(\n      state,\n      { payload: [fromIndex, toIndex] }: PayloadAction<[number, number]>\n    ) {\n      const { actualIngredients: actualIngredientsFromState } = state;\n      const actualIngredients = [...actualIngredientsFromState];\n\n      actualIngredients.splice(\n        toIndex,\n        0,\n        actualIngredients.splice(fromIndex, 1)[0]\n      );\n\n      state.actualIngredients = actualIngredients;\n    },\n    removeIngredient(\n      state,\n      { payload: idToRemove }: PayloadAction<ActualIngredient_t['id']>\n    ) {\n      const { actualIngredients } = state;\n      const removableIngredients = state.actualIngredients.slice(1, -1);\n\n      if (removableIngredients.map(({ id }) => id).includes(idToRemove)) {\n        state.actualIngredients = [\n          actualIngredients[0],\n          ...removableIngredients.filter(({ id }) => id !== idToRemove),\n          actualIngredients[actualIngredients.length - 1],\n        ];\n        state.totalAmount = calcTotal(state);\n        state.idToActualIngredientsCountMap = buildIdToActualIngredientsCountMap(\n          state\n        );\n      }\n    },\n    resetDetailedIngredient(state) {\n      state.detailedIngredient = null;\n    },\n    resetOrderDetails(state) {\n      if (!state.orderDetailsRequest) {\n        Object.assign(state, {\n          orderDetails: null,\n          orderDetailsError: null,\n          orderDetailsRequest: false,\n        });\n      }\n    },\n    setDetailedIngredient(state, action: PayloadAction<Ingredient_t>) {\n      state.detailedIngredient = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchIngredients.pending, (state) => {\n        Object.assign(state, {\n          ...initialState,\n          ingredientsRequest: true,\n        });\n      })\n      .addCase(\n        fetchIngredients.fulfilled,\n        (state, { payload: ingredients }: PayloadAction<Ingredient_t[]>) => {\n          const idToIngredientMap: InitialState_t['idToIngredientMap'] = {};\n\n          ingredients.forEach((ingredient) => {\n            idToIngredientMap[ingredient._id] = ingredient;\n          });\n\n          Object.assign(state, {\n            idToIngredientMap,\n            ingredients,\n            ingredientsRequest: false,\n          });\n        }\n      )\n      .addCase(\n        fetchIngredients.rejected,\n        (\n          state,\n          { error }: PayloadAction<unknown, string, unknown, unknown>\n        ) => {\n          Object.assign(state, {\n            ingredientsError: error,\n            ingredientsRequest: false,\n          });\n        }\n      );\n    builder\n      .addCase(placeAnOrder.pending, (state) => {\n        Object.assign(state, {\n          orderDetails: null,\n          orderDetailsError: null,\n          orderDetailsRequest: true,\n        });\n      })\n      .addCase(\n        placeAnOrder.fulfilled,\n        (state, { payload: orderDetails }: PayloadAction<OrderDetails_t>) => {\n          Object.assign(state, {\n            orderDetails,\n            orderDetailsRequest: false,\n          });\n        }\n      )\n      .addCase(\n        placeAnOrder.rejected,\n        (\n          state,\n          { error }: PayloadAction<unknown, string, unknown, unknown>\n        ) => {\n          Object.assign(state, {\n            orderDetailsError: error,\n            orderDetailsRequest: false,\n          });\n        }\n      );\n  },\n});\n\nexport const {\n  addIngredient,\n  moveIngredient,\n  removeIngredient,\n  resetDetailedIngredient,\n  resetOrderDetails,\n  setDetailedIngredient,\n} = appSlice.actions;\nexport default appSlice.reducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-constructor\":\"style_burger-constructor__3a8p5\",\"burger-constructor_is-empty\":\"style_burger-constructor_is-empty__1F7G8\",\"burger-constructor__list\":\"style_burger-constructor__list__oWYKC\",\"burger-constructor_is-can-drop\":\"style_burger-constructor_is-can-drop__QK3ua\",\"burger-constructor_is-drag-over\":\"style_burger-constructor_is-drag-over__--itU\",\"burger-constructor__filling\":\"style_burger-constructor__filling__2agyk\",\"burger-constructor__total-wrapper\":\"style_burger-constructor__total-wrapper__21Smn\",\"burger-constructor__order-details\":\"style_burger-constructor__order-details__12HWu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient-details\":\"style_ingredient-details__13xEY\",\"ingredient-details__picture-wrapper\":\"style_ingredient-details__picture-wrapper__2n82A\",\"ingredient-details__picture\":\"style_ingredient-details__picture__11V57\",\"ingredient-details__title\":\"style_ingredient-details__title__WZMcA\",\"ingredient-details__nutritional-values\":\"style_ingredient-details__nutritional-values__XSWu_\",\"ingredient-details__nutritional-value\":\"style_ingredient-details__nutritional-value__1P1f6\",\"ingredient-details__nutritional-value-title\":\"style_ingredient-details__nutritional-value-title__3110a\",\"ingredient-details__nutritional-value-value\":\"style_ingredient-details__nutritional-value-value__2HErT\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { TIconProps } from '@ya.praktikum/react-developer-burger-ui-components/dist/ui/icons/utils';\nimport style from './style.module.css';\n\ntype Icon_t = ({ type }: TIconProps) => JSX.Element;\n\nconst MenuItem = ({\n  className,\n  Icon,\n  isActive,\n  text,\n}: {\n  className?: string;\n  Icon: Icon_t;\n  isActive?: boolean;\n  text: string;\n}) => {\n  return (\n    <li\n      className={cs(\n        style['menu-item'],\n        {\n          [style['menu-item_active']]: isActive,\n        },\n        className,\n        'p-5 text',\n        {\n          text_color_inactive: !isActive,\n        }\n      )}\n    >\n      <Icon type={isActive ? 'primary' : 'secondary'} />\n      <span className=\"ml-2\">{text}</span>\n    </li>\n  );\n};\n\nMenuItem.propTypes = {\n  className: PropTypes.string,\n  Icon: PropTypes.elementType.isRequired,\n  isActive: PropTypes.bool,\n  text: PropTypes.string.isRequired,\n};\n\nMenuItem.defaultProps = {\n  isActive: true,\n};\n\nexport default MenuItem;\n","import React from 'react';\nimport cs from 'classnames';\nimport {\n  Logo,\n  BurgerIcon,\n  ListIcon,\n  ProfileIcon,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport { lexemes } from '../../consts';\nimport MenuItem from './menu-item';\n\nimport styles from './style.module.css';\n\nconst AppHeader = () => {\n  return (\n    <header\n      className={cs(\n        styles['app-header'],\n        'text text_type_main-default pt-3 pb-3'\n      )}\n    >\n      <nav>\n        <ul className={cs(styles['app-header__menu-list'], 'pt-4 pb-4')}>\n          <MenuItem\n            className={styles['app-header__menu-item']}\n            Icon={BurgerIcon}\n            text={lexemes.constructor}\n          />\n          <MenuItem\n            className={styles['app-header__menu-item']}\n            Icon={ListIcon}\n            isActive={false}\n            text={lexemes.orderList}\n          />\n          <li className={styles['app-header__logo-wrapper']}>\n            <Logo />\n          </li>\n          <MenuItem\n            className={styles['app-header__menu-item']}\n            Icon={ProfileIcon}\n            isActive={false}\n            text={lexemes.profile}\n          />\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport style from './style.module.css';\n\nconst Amount = ({\n  amount,\n  className,\n  isTotal,\n}: {\n  amount: number;\n  className?: string;\n  isTotal?: boolean;\n}) => (\n  <div\n    className={cs(\n      style['amount'],\n      'text',\n      {\n        [style['amount_type_total']]: isTotal,\n        'text_type_digits-default': !isTotal,\n        'text_type_digits-medium': isTotal,\n      },\n      className\n    )}\n  >\n    <div className={style['amount__amount']}>{amount}</div>\n    <div className={style['amount__currency-wrapper']}>\n      <CurrencyIcon type={'primary'} />\n    </div>\n  </div>\n);\n\nAmount.propTypes = {\n  amount: PropTypes.number.isRequired,\n  className: PropTypes.string,\n  isTotal: PropTypes.bool,\n};\n\nexport default Amount;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { DragPreviewImage, useDrag } from 'react-dnd';\nimport {\n  DraggableTypes,\n  Ingredient_t,\n  IngredientDragItem,\n} from '../../../types';\nimport { useAppSelector } from '../../../services/store';\nimport Amount from '../../amount';\nimport { Counter } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport style from './style.module.css';\n\nconst BurgerIngredient = ({\n  ingredient: { _id, image, name: title, price, type },\n  onClick,\n}: {\n  ingredient: Ingredient_t;\n  onClick?: () => void;\n}) => {\n  const { idToActualIngredientsCountMap } = useAppSelector(\n    (state) => state.main\n  );\n  const [{ isItPicked }, dragRef, preview] = useDrag({\n    type: DraggableTypes.ingredient,\n    options: {\n      dropEffect: 'copy',\n    },\n    item: {\n      refId: _id,\n      type,\n    } as IngredientDragItem,\n    collect(monitoring) {\n      return {\n        isItPicked: monitoring.isDragging(),\n      };\n    },\n  });\n\n  return (\n    <li\n      ref={dragRef}\n      className={cs(style['burger-ingredient'], {\n        [style['burger-ingredient_interactive']]: onClick,\n        [style['burger-ingredient_is-picked']]: isItPicked,\n      })}\n      onClick={onClick}\n    >\n      <DragPreviewImage connect={preview} src={image} />\n      {idToActualIngredientsCountMap[_id] && (\n        <Counter count={idToActualIngredientsCountMap[_id]} />\n      )}\n      <div>\n        <div\n          className={cs(style['burger-ingredient__image-wrapper'], 'pl-4 pr-4')}\n        >\n          <img\n            alt={title}\n            className={style['burger-ingredient__image']}\n            src={image}\n          />\n        </div>\n        <Amount\n          amount={price}\n          className={cs(style['burger-ingredient__price-wrapper'], 'pt-1 pb-1')}\n        />\n        <div className={cs(style['burger-ingredient__title'])}>{title}</div>\n      </div>\n    </li>\n  );\n};\n\nBurgerIngredient.propTypes = {\n  ingredient: PropTypes.object.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default BurgerIngredient;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { Ingredient_t } from '../../../types';\nimport { useAppDispatch } from '../../../services/store';\nimport { setDetailedIngredient } from '../../../services/reducers';\nimport BurgerIngredient from '../burger-ingredient';\n\nimport style from './style.module.css';\n\nconst BurgerIngredientType = ({\n  className,\n  ingredients,\n  title,\n  type,\n}: {\n  className?: string;\n  ingredients: Ingredient_t[];\n  title: string;\n  type: string;\n}) => {\n  const dispatch = useAppDispatch();\n\n  return (\n    <li className={cs('pt-10', className)} data-type={type}>\n      <div className={'text text_type_main-medium'}>{title}</div>\n      <ul\n        className={cs(\n          style['burger-ingredient-type__ingredient-list'],\n          'pt-6 pr-4 pl-4'\n        )}\n      >\n        {ingredients.map((ingredient, ix) => (\n          <React.Fragment key={ingredient._id}>\n            <BurgerIngredient\n              ingredient={ingredient}\n              onClick={() => {\n                dispatch(setDetailedIngredient(ingredients[ix]));\n              }}\n            />\n            <li\n              className={cs({\n                'pl-6': ix % 2 === 0,\n                'pt-8': ix % 2 === 1,\n              })}\n            />\n          </React.Fragment>\n        ))}\n      </ul>\n    </li>\n  );\n};\n\nBurgerIngredientType.propTypes = {\n  className: PropTypes.string,\n  ingredients: PropTypes.arrayOf(PropTypes.object).isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default BurgerIngredientType;\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { IngredientType } from '../../types';\nimport { useAppSelector } from '../../services/store';\nimport { lexemes } from '../../consts';\nimport BurgerIngredientType from './burger-ingredient-type';\n\nimport style from './style.module.css';\n\nconst ingredientTypeTitles = {\n  bun: lexemes.buns,\n  sauce: lexemes.sauces,\n  main: lexemes.burgerFillings,\n};\nconst ingredientTypes = Object.keys(ingredientTypeTitles) as Array<\n  keyof typeof ingredientTypeTitles\n>;\n\nconst thresholdsStepsCount = 50;\nconst thresholds = [\n  ...Array.from({ length: thresholdsStepsCount - 1 }).map(\n    (_, ix) => ix / (thresholdsStepsCount - 1)\n  ),\n  1,\n];\n\nconst BurgerIngredients = ({ className }: { className?: string }) => {\n  const { ingredients } = useAppSelector((state) => state.main);\n  const [selectedIngredientType, setSelectedIngredientType] = useState(\n    ingredientTypes[0]\n  );\n  const ingredientTypeToIngredientsMap = useMemo(() => {\n    const axillaryMap = new Map();\n\n    ingredients.forEach((ingredient) => {\n      const { type } = ingredient;\n\n      if (!axillaryMap.has(type)) {\n        axillaryMap.set(type, []);\n      }\n\n      axillaryMap.get(type).push(ingredient);\n    });\n\n    const result = ingredientTypes.reduce((result, ingredientType) => {\n      if (axillaryMap.has(ingredientType)) {\n        result.set(ingredientType, axillaryMap.get(ingredientType));\n      } else {\n        result.set(ingredientType, []);\n      }\n\n      return result;\n    }, new Map());\n\n    axillaryMap.clear();\n\n    return result;\n  }, [ingredients]);\n  const typeListElementRef = useRef<HTMLUListElement>(null);\n\n  useEffect(() => {\n    const { current: typeListElement } = typeListElementRef;\n    const items = typeListElement!.querySelectorAll(\n      `.${style['burger-ingredients__type-item']}`\n    ) as NodeListOf<HTMLLIElement>;\n\n    if (items.length > 0) {\n      const ingredientToIntersectionRatioMap = new Map();\n\n      const intersectionObserver = new IntersectionObserver(\n        (intersectionObserverEntries) => {\n          intersectionObserverEntries.forEach(\n            ({ target, intersectionRatio }) => {\n              const {\n                dataset: { type },\n              } = target as HTMLLIElement;\n\n              if (type) {\n                ingredientToIntersectionRatioMap.set(type, intersectionRatio);\n              }\n            }\n          );\n\n          const mostVisibleType = [\n            // @ts-ignore\n            ...ingredientToIntersectionRatioMap.entries(),\n          ].sort(([, irA], [, irB]) => irB - irA)[0][0];\n\n          setSelectedIngredientType(mostVisibleType);\n        },\n        {\n          root: typeListElement,\n          threshold: thresholds,\n        }\n      );\n\n      items.forEach((item) => {\n        ingredientToIntersectionRatioMap.set(item.dataset.type, 0);\n        intersectionObserver.observe(item);\n      });\n\n      return () => {\n        intersectionObserver.disconnect();\n        ingredientToIntersectionRatioMap.clear();\n      };\n    }\n  }, []);\n\n  return (\n    <div className={cs(style['burger-ingredients'], 'pb-5', className)}>\n      <div\n        className={cs(\n          style['burger-ingredients__title'],\n          'pt-10 pb-5 text text_type_main-large'\n        )}\n      >\n        {lexemes.assembleABurger}\n      </div>\n      <div className={cs(style['burger-ingredients__filter'])}>\n        {ingredientTypes.map((type) => (\n          <Tab\n            key={type}\n            active={selectedIngredientType === type}\n            value={type}\n            onClick={(type) => {\n              const { current: typeListElement } = typeListElementRef;\n\n              if (typeListElement) {\n                const currentListItemElement = typeListElement.querySelector(\n                  `.${style['burger-ingredients__type-item']}[data-type=\"${type}\"]`\n                );\n\n                if (currentListItemElement) {\n                  currentListItemElement.scrollIntoView({ behavior: 'smooth' });\n                }\n              }\n            }}\n          >\n            {(ingredientTypeTitles as any)[type]}\n          </Tab>\n        ))}\n      </div>\n      <ul\n        ref={typeListElementRef}\n        className={cs(style['burger-ingredients__type-list'], 'custom-scroll')}\n      >\n        {Array.from(ingredientTypeToIngredientsMap.entries()).map(\n          ([type, ingredients]) => (\n            <BurgerIngredientType\n              key={type}\n              className={style['burger-ingredients__type-item']}\n              ingredients={ingredients}\n              title={ingredientTypeTitles[type as IngredientType]}\n              type={type}\n            />\n          )\n        )}\n      </ul>\n    </div>\n  );\n};\n\nBurgerIngredients.propTypes = { className: PropTypes.string };\n\nexport default BurgerIngredients;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { useDrop } from 'react-dnd';\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport {\n  DraggableTypes,\n  IngredientDragItem,\n  IngredientType,\n} from '../../types';\nimport { useAppDispatch, useAppSelector } from '../../services/store';\nimport { lexemes } from '../../consts';\nimport {\n  addIngredient,\n  placeAnOrder,\n  removeIngredient,\n  setDetailedIngredient,\n} from '../../services/reducers';\nimport Amount from '../amount';\nimport BurgerConstructorItem from './burger-constructor-item';\n\nimport style from './style.module.css';\n\nconst BurgerConstructor = ({ className }: { className?: string }) => {\n  const {\n    actualIngredients,\n    idToIngredientMap,\n    orderDetailsRequest,\n    totalAmount,\n  } = useAppSelector((state) => state.main);\n  const dispatch = useAppDispatch();\n\n  const topBun = actualIngredients.slice(0, 1)[0];\n  const bottomBun = actualIngredients.slice(-1)[0];\n  const placeAnOrderClickHandler = useCallback(() => {\n    if (!orderDetailsRequest) {\n      dispatch(placeAnOrder(actualIngredients.map(({ refId }) => refId)));\n    }\n  }, [actualIngredients, dispatch, orderDetailsRequest]);\n\n  const [{ isCanDrop, isDragOver }, dropRef] = useDrop({\n    accept: DraggableTypes.ingredient,\n    canDrop(item, monitor) {\n      return !(\n        actualIngredients.length === 0 &&\n        monitor.getItemType() === DraggableTypes.ingredient &&\n        (item as IngredientDragItem).type !== IngredientType.bun\n      );\n    },\n    drop(item) {\n      const { refId } = item as IngredientDragItem;\n\n      dispatch(addIngredient(idToIngredientMap[refId]));\n    },\n    collect(monitor) {\n      return {\n        isCanDrop: monitor.canDrop(),\n        isDragOver: monitor.isOver(),\n      };\n    },\n  });\n\n  return (\n    <div\n      className={cs(\n        style['burger-constructor'],\n        'pt-25 pb-5',\n        {\n          [style['burger-constructor_is-empty']]:\n            actualIngredients.length === 0,\n          [style['burger-constructor_is-can-drop']]: isCanDrop,\n          [style['burger-constructor_is-drag-over']]: isDragOver,\n        },\n        className\n      )}\n    >\n      <div ref={dropRef} className={style['burger-constructor__list']}>\n        {topBun && (\n          <>\n            {(() => {\n              const { isLocked = false, refId, type } = topBun;\n              const ingredient = idToIngredientMap[refId];\n\n              return (\n                ingredient && (\n                  <BurgerConstructorItem\n                    ingredient={idToIngredientMap[refId]!}\n                    isLocked={isLocked}\n                    onShowIngredientInfo={() => {\n                      dispatch(setDetailedIngredient(ingredient));\n                    }}\n                    type={type}\n                  />\n                )\n              );\n            })()}\n            <div className={'pt-4'} />\n          </>\n        )}\n        <div\n          className={cs(style['burger-constructor__filling'], 'custom-scroll')}\n        >\n          {actualIngredients\n            .slice(1, -1)\n            .map(({ id, isLocked = false, refId, type }, ix) => {\n              const ingredient = idToIngredientMap[refId];\n\n              return (\n                ingredient && (\n                  <BurgerConstructorItem\n                    key={id}\n                    id={id}\n                    index={ix + 1}\n                    ingredient={idToIngredientMap[refId]!}\n                    isLocked={isLocked}\n                    onShowIngredientInfo={() => {\n                      dispatch(setDetailedIngredient(ingredient));\n                    }}\n                    onDelete={() => {\n                      dispatch(removeIngredient(id));\n                    }}\n                    type={type}\n                  />\n                )\n              );\n            })}\n        </div>\n        {bottomBun && (\n          <>\n            <div className={'pt-4'} />\n            {(() => {\n              const { isLocked = false, refId, type } = bottomBun;\n              const ingredient = idToIngredientMap[refId];\n\n              return (\n                ingredient && (\n                  <BurgerConstructorItem\n                    ingredient={idToIngredientMap[refId]!}\n                    isLocked={isLocked}\n                    onShowIngredientInfo={() => {\n                      dispatch(setDetailedIngredient(ingredient));\n                    }}\n                    type={type}\n                  />\n                )\n              );\n            })()}\n          </>\n        )}\n      </div>\n      <div className={cs(style['burger-constructor__total-wrapper'], 'pt-10')}>\n        <Amount\n          amount={totalAmount}\n          className={style['burger-constructor__total']}\n          isTotal={true}\n        />\n        <div className={'pl-10'} />\n        <Button\n          onClick={placeAnOrderClickHandler}\n          size={'large'}\n          type={'primary'}\n        >\n          {lexemes.placeAnOrder}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nBurgerConstructor.propTypes = { className: PropTypes.string };\n\nexport default BurgerConstructor;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { Ingredient_t } from '../../types';\nimport { lexemes } from '../../consts';\n\nimport style from './style.module.css';\n\nconst IngredientDetails = ({\n  className,\n  ingredient: { calories, carbohydrates, fat, image, name: title, proteins },\n}: {\n  className?: string;\n  ingredient: Ingredient_t;\n}) => {\n  const nutritionalValues = useMemo(() => {\n    return {\n      calories,\n      carbohydrates,\n      fat,\n      proteins,\n    };\n  }, [calories, carbohydrates, fat, proteins]);\n\n  return (\n    <div className={cs(style['ingredient-details'], 'mb-5', className)}>\n      <div\n        className={cs(\n          style['ingredient-details__picture-wrapper'],\n          'pl-5 pr-5'\n        )}\n      >\n        <img\n          alt={title}\n          className={style['ingredient-details__picture']}\n          src={image}\n        />\n      </div>\n      <div className={'pt-4'} />\n      <div\n        className={cs(\n          style['ingredient-details__title'],\n          'text text_type_main-medium'\n        )}\n      >\n        {title}\n      </div>\n      <div className={'pt-8'} />\n      <div\n        className={cs(\n          style['ingredient-details__nutritional-values'],\n          'text_color_inactive'\n        )}\n      >\n        {Object.entries(nutritionalValues).map(([key, value], ix, list) => (\n          <React.Fragment key={key}>\n            <div className={style['ingredient-details__nutritional-value']}>\n              <div\n                className={style['ingredient-details__nutritional-value-title']}\n              >\n                {(lexemes as any)[key]}\n              </div>\n              <div\n                className={cs(\n                  style['ingredient-details__nutritional-value-value'],\n                  'text text_type_digits-default pt-2'\n                )}\n              >\n                {value}\n              </div>\n            </div>\n            {ix + 1 < list.length ? <div className={'pl-5'} /> : null}\n          </React.Fragment>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nIngredientDetails.propTypes = {\n  className: PropTypes.string,\n  ingredient: PropTypes.object.isRequired,\n};\n\nexport default IngredientDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\n\nimport style from './style.module.css';\n\nconst ModalOverlay = ({\n  className,\n  onClick,\n}: {\n  className?: string;\n  onClick?: () => void;\n}) => (\n  <div\n    className={cs(\n      style['modal-overlay'],\n      {\n        [`${style['modal-overlay_interactive']}`]: onClick,\n      },\n      className\n    )}\n    onClick={onClick}\n  />\n);\n\nModalOverlay.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nexport default ModalOverlay;\n","import React, {\n  MutableRefObject,\n  ReactNode,\n  ReactPortal,\n  useCallback,\n  useEffect,\n  useRef,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport ModalOverlay from './modal-overlay';\n\nimport style from './style.module.css';\n\nconst Modal = ({\n  children,\n  className,\n  onClose,\n  title,\n}: {\n  children?: ReactNode | ReactPortal;\n  className?: string;\n  onClose: () => void;\n  title?: string;\n}) => {\n  const modalElementRef = useRef(null);\n\n  useEffect(() => {\n    const {\n      current: modalElement,\n    } = modalElementRef as MutableRefObject<HTMLElement | null>;\n\n    if (modalElement) {\n      modalElement.focus();\n    }\n  }, []);\n\n  const keyDownHandler = useCallback(\n    ({ key }) => {\n      if (key === 'Escape' && onClose) {\n        onClose();\n      }\n    },\n    [onClose]\n  );\n\n  return (\n    <>\n      <ModalOverlay className={style['modal__overlay']} onClick={onClose} />\n      <div\n        ref={modalElementRef}\n        className={cs(style['modal'], 'p-10', className)}\n        onKeyDown={keyDownHandler}\n        tabIndex={0}\n      >\n        <div className={style['modal__header']}>\n          <div\n            className={cs(style['modal__title'], ' text text_type_main-large')}\n          >\n            {title}\n          </div>\n          <button className={style['modal__close-button']} onClick={onClose}>\n            <CloseIcon type={'primary'} />\n          </button>\n        </div>\n        <div className={style['modal__content']}>{children}</div>\n      </div>\n    </>\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  className: PropTypes.string,\n  onClose: PropTypes.func.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { CheckMarkIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { OrderDetails_t } from '../../types';\nimport { lexemes, orderStatusToStatusTitleMap } from '../../consts';\n\nimport style from './style.module.css';\n\nconst OrderDetails = ({\n  className,\n  orderDetails: { id, status, message },\n}: {\n  className?: string;\n  orderDetails: OrderDetails_t;\n}) => (\n  <div className={cs(style['order-details'], className)}>\n    <div\n      className={cs(style['order-details__id'], 'text text_type_digits-large')}\n    >\n      {String(id).padStart(6, '0')}\n    </div>\n    <div className={'pt-8'} />\n    <div\n      className={cs(\n        style['order-details__id-title'],\n        'text text_type_main-medium'\n      )}\n    >\n      {lexemes.orderId}\n    </div>\n    <div className={'pt-15'} />\n    <div className={style['order-details__status-icon-wrapper']}>\n      <CheckMarkIcon type={'primary'} />\n    </div>\n    <div className={'pt-15'} />\n    <div className={style['order-details__status-title']}>\n      {orderStatusToStatusTitleMap[status]}\n    </div>\n    <div className={'pt-2'} />\n    <div className={cs(style['order-details__message'], 'text_color_inactive')}>\n      {message}\n    </div>\n  </div>\n);\n\nOrderDetails.propTypes = {\n  className: PropTypes.string,\n  orderDetails: PropTypes.object.isRequired,\n};\n\nexport default OrderDetails;\n","import React from 'react';\nimport cs from 'classnames';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend as Html5Backend } from 'react-dnd-html5-backend';\nimport BurgerIngredients from '../burger-ingredients';\nimport BurgerConstructor from '../burger-constructor';\nimport styles from './style.module.css';\nimport { lexemes } from '../../consts';\nimport { useAppDispatch, useAppSelector } from '../../services/store';\nimport {\n  resetDetailedIngredient,\n  resetOrderDetails,\n} from '../../services/reducers';\nimport IngredientDetails from '../ingredient-details';\nimport style from '../burger-constructor/style.module.css';\nimport Modal from '../modal';\nimport OrderDetails from '../order-details';\n\nconst AppBody = () => {\n  const { detailedIngredient, orderDetails } = useAppSelector(\n    (state) => state.main\n  );\n  const dispatch = useAppDispatch();\n\n  return (\n    <main\n      className={cs(\n        styles['app-body'],\n        'pl-5 pr-5 text text_type_main-default'\n      )}\n    >\n      <DndProvider backend={Html5Backend}>\n        <BurgerIngredients className={styles['app-body__ingredients']} />\n        <div className={cs(styles['app-body__space'], 'pl-10')} />\n        <BurgerConstructor className={styles['app-body__constructor']} />\n      </DndProvider>\n      {detailedIngredient && (\n        <Modal\n          onClose={() => dispatch(resetDetailedIngredient())}\n          title={lexemes.ingredientDetails}\n        >\n          <IngredientDetails\n            className={cs(style['burger-constructor__ingredient-details'])}\n            ingredient={detailedIngredient}\n          />\n        </Modal>\n      )}\n      {orderDetails && (\n        <Modal onClose={() => dispatch(resetOrderDetails())}>\n          <OrderDetails\n            className={cs(\n              style['burger-constructor__order-details'],\n              'mt-4 mb-20'\n            )}\n            orderDetails={orderDetails}\n          />\n        </Modal>\n      )}\n    </main>\n  );\n};\n\nexport default AppBody;\n","import React, { useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../services/store';\nimport { fetchIngredients } from '../../services/reducers';\n\nimport AppHeader from '../app-header';\nimport AppBody from '../app-body';\n\nimport style from './style.module.css';\n\nconst App = () => {\n  const { ingredientsError, ingredientsRequest } = useAppSelector(\n    (state) => state.main\n  );\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(fetchIngredients());\n  }, [dispatch]);\n\n  return (\n    <div className={style.main}>\n      <AppHeader />\n      {!ingredientsRequest && !ingredientsError && <AppBody />}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './services/store';\nimport App from './components/app';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    <div id=\"modal-container\" />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-ingredient\":\"style_burger-ingredient__It1Se\",\"burger-ingredient_interactive\":\"style_burger-ingredient_interactive__3zkQq\",\"burger-ingredient_is-picked\":\"style_burger-ingredient_is-picked__3Qo2E\",\"burger-ingredient__image-wrapper\":\"style_burger-ingredient__image-wrapper__2P4Vw\",\"burger-ingredient__price-wrapper\":\"style_burger-ingredient__price-wrapper__2td-g\",\"burger-ingredient__title\":\"style_burger-ingredient__title__26qp_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-ingredients\":\"style_burger-ingredients__2mHyl\",\"burger-ingredients__filter\":\"style_burger-ingredients__filter__1NLWy\",\"burger-ingredients__type-list\":\"style_burger-ingredients__type-list__IM2C3\",\"burger-ingredients__type-item\":\"style_burger-ingredients__type-item__1JXTu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-constructor-item\":\"style_burger-constructor-item__6ndAy\",\"burger-constructor-item_is-drag-over\":\"style_burger-constructor-item_is-drag-over__8rJ5N\",\"burger-constructor-item_is-can-drop\":\"style_burger-constructor-item_is-can-drop__1ROm7\",\"burger-constructor-item_is-picked\":\"style_burger-constructor-item_is-picked__bR2iz\",\"burger-constructor-item__constructor-element-wrapper\":\"style_burger-constructor-item__constructor-element-wrapper__2ki39\",\"burger-constructor-item_interactive\":\"style_burger-constructor-item_interactive__3QnkX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-header\":\"style_app-header__C5Utm\",\"app-header__menu-list\":\"style_app-header__menu-list__tOfh6\",\"app-header__logo-wrapper\":\"style_app-header__logo-wrapper__2jy8W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"style_modal__vQxtL\",\"modal__header\":\"style_modal__header__3dmqg\",\"modal__title\":\"style_modal__title__14q9S\",\"modal__close-button\":\"style_modal__close-button__3aKnX\",\"modal__content\":\"style_modal__content__1zYdw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-details\":\"style_order-details__DhWNa\",\"order-details__id\":\"style_order-details__id__31e3O\",\"order-details__id-title\":\"style_order-details__id-title__3AKtK\",\"order-details__status-icon-wrapper\":\"style_order-details__status-icon-wrapper__3cIJk\",\"order-details__status-title\":\"style_order-details__status-title__3ORfi\",\"order-details__message\":\"style_order-details__message__2ChKS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"amount\":\"style_amount__2_jh4\",\"amount_type_total\":\"style_amount_type_total__pvRzS\",\"amount__amount\":\"style_amount__amount__315ja\",\"amount__currency-wrapper\":\"style_amount__currency-wrapper__2m355\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-body\":\"style_app-body__2ijFH\",\"app-body__ingredients\":\"style_app-body__ingredients__26Gcw\",\"app-body__constructor\":\"style_app-body__constructor__kb7ZL\",\"app-body__space\":\"style_app-body__space__1Y7W2\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { DragPreviewImage, useDrag, useDrop } from 'react-dnd';\nimport {\n  ConstructorElement,\n  DragIcon,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport {\n  ActualIngredientDragItem,\n  ActualIngredientType,\n  DraggableTypes,\n  Ingredient_t,\n} from '../../../types';\nimport { lexemes } from '../../../consts';\nimport { useAppDispatch } from '../../../services/store';\nimport { moveIngredient } from '../../../services/reducers';\n\nimport style from './style.module.css';\n\nconst BurgerConstructorItem = ({\n  className,\n  index,\n  ingredient: { _id, image, name, price },\n  isLocked,\n  onShowIngredientInfo,\n  onDelete,\n  type,\n}: {\n  className?: string;\n  index?: number;\n  ingredient: Ingredient_t;\n  isLocked: boolean;\n  onShowIngredientInfo?: () => void;\n  onDelete?: () => void;\n  type?: ActualIngredientType;\n}) => {\n  const dispatch = useAppDispatch();\n  const [{ isItPicked }, dragRef, preview] = useDrag({\n    type: DraggableTypes.actualIngredient,\n    canDrag: !isLocked,\n    item: {\n      index,\n    } as ActualIngredientDragItem,\n    collect(monitor) {\n      return {\n        isItPicked: monitor.isDragging(),\n      };\n    },\n  });\n  const [{ isCanDrop, isDragOver }, dropRef] = useDrop({\n    accept: DraggableTypes.actualIngredient,\n    canDrop() {\n      return !isLocked;\n    },\n    collect(monitor) {\n      return {\n        isCanDrop: monitor.canDrop(),\n        isDragOver: monitor.isOver(),\n      };\n    },\n    hover(item) {\n      const { index: draggableIndex } = item as ActualIngredientDragItem;\n\n      if (index === draggableIndex) {\n        return;\n      }\n\n      if (index != null) {\n        //mutate the item in order to prevent multiple dispatches\n        (item as ActualIngredientDragItem).index = index;\n        setImmediate(() => {\n          dispatch(moveIngredient([draggableIndex, index]));\n        });\n      }\n    },\n  });\n\n  return (\n    <div\n      ref={dropRef}\n      className={cs(\n        style['burger-constructor-item'],\n        {\n          [style['burger-constructor-item_interactive']]: onShowIngredientInfo,\n          [style['burger-constructor-item_is-picked']]: isItPicked,\n          [style['burger-constructor-item_is-can-drop']]: isCanDrop,\n          [style['burger-constructor-item_is-drag-over']]: isDragOver,\n          'pt-4': !isLocked,\n        },\n        className\n      )}\n      onClick={(event) => {\n        const target = event.target as HTMLElement;\n\n        if (\n          onShowIngredientInfo &&\n          target.closest(\n            `.${style['burger-constructor-item__constructor-element-wrapper']}`\n          ) &&\n          !target.closest('.constructor-element__action')\n        ) {\n          onShowIngredientInfo();\n        }\n      }}\n    >\n      {!isLocked ? (\n        <div ref={dragRef}>\n          <DragIcon type={'primary'} />\n        </div>\n      ) : (\n        <div className={'pl-8'} />\n      )}\n      <DragPreviewImage connect={preview} src={image} />\n      <div className={'pl-6'} />\n      <div\n        className={\n          style['burger-constructor-item__constructor-element-wrapper']\n        }\n      >\n        <ConstructorElement\n          handleClose={onDelete}\n          isLocked={isLocked}\n          price={price}\n          text={`${name}${\n            type\n              ? ` (${\n                  type === ActualIngredientType.top\n                    ? lexemes.top\n                    : lexemes.bottom\n                })`\n              : ''\n          }`}\n          thumbnail={image}\n          type={type}\n        />\n      </div>\n    </div>\n  );\n};\n\nBurgerConstructorItem.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  index: PropTypes.number,\n  ingredient: PropTypes.object.isRequired,\n  isLocked: PropTypes.bool.isRequired,\n  onShowIngredientInfo: PropTypes.func,\n  onDelete: PropTypes.func,\n  type: PropTypes.oneOf([\n    ActualIngredientType.top,\n    ActualIngredientType.bottom,\n  ]),\n};\n\nexport default BurgerConstructorItem;\n","import { OrderStatus_t } from './types';\n\nexport const orderStatusToStatusTitleMap: {\n  [key in OrderStatus_t]: string;\n} = {\n  [OrderStatus_t.BEING_COOKED]: 'Ваш заказ начали готовить',\n  [OrderStatus_t.COOKED]: 'Заказ приготовлен',\n  [OrderStatus_t.BEING_DELIVERED]: 'Ваш заказ доставляется',\n  [OrderStatus_t.DELIVERED]: 'Заказ доставлен',\n};\n\nconst allLexemes = {\n  ru: {\n    assembleABurger: 'Соберите бургер',\n    buns: 'Булки',\n    burgerFillings: 'Начинки',\n    calories: 'Калории, ккал',\n    carbohydrates: 'Углеводы, г',\n    constructor: 'Конструктор',\n    fat: 'Жиры, г',\n    ingredientDetails: 'Детали ингредиента',\n    orderId: 'Идентификатор заказа',\n    orderList: 'Лента заказов',\n    sauces: 'Соусы',\n    placeAnOrder: 'Оформиль заказ',\n    profile: 'Личный кабинет',\n    proteins: 'Белки, г',\n    top: 'верх',\n    bottom: 'низ',\n  },\n};\n\nexport const lexemes = allLexemes.ru;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu-item\":\"style_menu-item__3CXGR\",\"menu-item_active\":\"style_menu-item_active__2ztPt\"};","export enum ActualIngredientType {\n  top = 'top',\n  bottom = 'bottom',\n}\n\nexport type ActualIngredient_t = {\n  id: string;\n  refId: string;\n  isLocked?: boolean;\n  type?: ActualIngredientType;\n};\n\nexport enum DraggableTypes {\n  ingredient = 'ingredient',\n  actualIngredient = 'actualIngredient',\n}\n\nexport enum IngredientType {\n  bun = 'bun',\n  sauce = 'sauce',\n  main = 'main',\n}\n\nexport type Ingredient_t = {\n  _id: string;\n  name: string;\n  type: IngredientType;\n  proteins: number;\n  fat: number;\n  carbohydrates: number;\n  calories: number;\n  price: number;\n  image: string;\n  image_mobile: string;\n  image_large: string;\n  __v: number;\n};\n\nexport type IngredientDragItem = {\n  refId: Ingredient_t['_id'];\n  type: IngredientType;\n};\n\nexport type ActualIngredientDragItem = {\n  index: number;\n};\n\nexport enum OrderStatus_t {\n  BEING_COOKED,\n  COOKED,\n  BEING_DELIVERED,\n  DELIVERED,\n}\n\nexport type OrderDetails_t = {\n  id: number;\n  status: OrderStatus_t;\n  message: string;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal-overlay\":\"style_modal-overlay__v0yzo\",\"modal-overlay_interactive\":\"style_modal-overlay_interactive__1pDN1\"};","import { configureStore } from '@reduxjs/toolkit';\nimport mainReducer from './reducers';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV === 'development',\n  reducer: {\n    main: mainReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector = <T>(func: (state: RootState) => T): T =>\n  useSelector(func);\n\nexport default store;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-ingredient-type\":\"style_burger-ingredient-type__MQwyq\",\"burger-ingredient-type__ingredient-list\":\"style_burger-ingredient-type__ingredient-list__lsh46\",\"burger-ingredient-type__ingredient-details\":\"style_burger-ingredient-type__ingredient-details__3Z88b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"style_app__1uR4E\"};"],"sourceRoot":""}