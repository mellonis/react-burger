{"version":3,"sources":["components/modal/modal-overlay/style.module.css","components/app-header/menu-item/style.module.css","pages/page-style.module.css","components/burger-ingredients/burger-ingredient-type/style.module.css","components/app-body/style.module.css","components/app/style.module.css","types.ts","components/burger-constructor/style.module.css","pages/profile/style.module.css","components/form/helpers.tsx","reportWebVitals.ts","pages/feed/index.tsx","components/form/index.tsx","pages/forgot-password/index.tsx","components/ingredient-details/index.tsx","pages/ingredients/index.tsx","pages/login/index.tsx","pages/logout/index.tsx","components/amount/index.tsx","components/burger-constructor/index.tsx","components/burger-ingredients/burger-ingredient/index.tsx","components/burger-ingredients/burger-ingredient-type/index.tsx","components/burger-ingredients/index.tsx","components/modal/modal-overlay/index.tsx","components/modal/index.tsx","components/order-details/index.tsx","pages/main/index.tsx","pages/not-found/index.tsx","pages/profile/orders/index.tsx","pages/profile/profile/index.tsx","pages/profile/index.tsx","pages/register/index.tsx","pages/reset-password/index.tsx","components/protected-route/index.tsx","components/app-body/index.tsx","components/app-header/menu-item/index.tsx","components/app-header/index.tsx","components/app/index.tsx","index.tsx","components/form/style.module.css","components/ingredient-details/style.module.css","components/burger-constructor/burger-constructor-item/style.module.css","components/burger-ingredients/burger-ingredient/style.module.css","components/burger-ingredients/style.module.css","components/modal/style.module.css","consts.ts","components/order-details/style.module.css","components/app-header/style.module.css","services/reducers/user.ts","services/api/index.ts","services/reducers/burger.ts","services/helpers/index.ts","components/amount/style.module.css","pages/main/style.module.css","services/store.ts","components/burger-constructor/burger-constructor-item/index.tsx"],"names":["module","exports","ActualIngredientType","DraggableTypes","IngredientType","OrderStatus_t","ComponentInputType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","feedPageClassname","FeedPage","className","cs","pageStyles","produceAdditionalActionReactNode","index","title","url","urlTitle","Fragment","dangerouslySetInnerHTML","__html","to","produceInputReactNode","inputDeclaration","ix","component","componentType","input","icon","name","placeholder","type","control","this","render","field","onChange","value","passwordInput","Form","additionalActions","buttonTitle","inputDeclarations","isButtonHiddenOnNotModifiedForm","onSubmit","resetButtonTitle","showErrors","componentElementRef","useRef","schema","useMemo","yup","shape","reduce","result","Object","assign","min","lexemes","forms","__common__","__errors__","passwordLength","required","useForm","defaultValues","initialValue","mode","resolver","yupResolver","handleSubmit","formState","errors","isDirty","reset","onInvalidFormHandler","useCallback","console","error","onValidFormHandler","componentElement","current","args","apply","onButtonClickHandler","formElement","dispatchEvent","Event","isButtonVisible","isResetButtonVisible","ref","fromStyles","map","keys","length","entries","sort","fieldNameA","fieldNameB","localeCompare","fieldName","message","onClick","defaultProps","forgotPasswordPageClassname","haveYouRememberedYourPassword","doLogin","forgotPassword","provideYourEmail","ForgotPasswordPage","useAppSelector","state","user","userLoginPhase","passwordResettingPhase","dispatch","useAppDispatch","UserLoginPhase","fulfilled","includes","PasswordResettingPhase","requestingCredentialsFromUser","pendingResetting","doResetPassword","email","initial","requestPasswordResettingForEmail","IngredientDetails","id","useParams","burger","idToIngredientMap","calories","carbohydrates","fat","proteins","image","nutritionalValues","style","alt","src","list","key","ingredientsPageClassname","IngredientsPage","useRouteMatch","params","ingredientsRequest","loginPageClassname","login","areYouTheNewUser","doRegister","areYouForgetYourPassword","doResetYourPassword","LoginPage","useLocation","redirectedFrom","useEffect","rejected","interruptUserLogin","password","LogoutPage","logout","pending","Amount","amount","isTotal","BurgerConstructor","actualIngredients","orderDetailsRequest","totalAmount","location","history","useHistory","topBun","slice","bottomBun","placeAnOrderClickHandler","placeAnOrder","refId","replace","useDrop","accept","ingredient","canDrop","item","monitor","getItemType","bun","drop","addIngredient","collect","isCanDrop","isDragOver","isOver","dropRef","isLocked","onShowIngredientInfo","push","pathname","_id","backgroundPageLocation","onDelete","removeIngredient","size","BurgerIngredient","price","idToActualIngredientsCountMap","useDrag","options","dropEffect","monitoring","isItPicked","isDragging","dragRef","preview","DragPreviewImage","connect","count","BurgerIngredientType","ingredients","data-type","ingredientTypeTitles","buns","sauce","sauces","main","burgerFillings","ingredientTypes","thresholds","Array","from","thresholdsStepsCount","_","BurgerIngredients","useState","selectedIngredientType","setSelectedIngredientType","ingredientTypeToIngredientsMap","axillaryMap","Map","forEach","has","set","get","ingredientType","clear","typeListElementRef","typeListElement","items","querySelectorAll","ingredientToIntersectionRatioMap","intersectionObserver","IntersectionObserver","intersectionObserverEntries","target","intersectionRatio","dataset","mostVisibleType","irA","root","threshold","observe","disconnect","assembleABurger","active","currentListItemElement","querySelector","scrollIntoView","behavior","ModalOverlay","Modal","children","onClose","modalElementRef","modalElement","focus","keyDownHandler","onKeyDown","tabIndex","OrderDetails","orderDetails","status","String","padStart","orderId","orderStatusToStatusTitleMap","mainPageClassName","MainPage","mainPageStyles","DndProvider","backend","Html5Backend","resetOrderDetails","burgerConstructorStyles","notFoundPageClassname","NotFoundPage","Orders","profile","Profile","updateUserDataPhase","interruptUpdateUserData","actualInputDeclarations","inputDeclarationCopy","prototype","hasOwnProperty","call","doEdit","UpdateUserDataPhase","updateUserData","resetForm","profilePageClassname","ProfilePage","userTimeStamp","path","isProfileSubpageMatched","exact","isOrdersSubpageMatched","profilePageStyle","registerPageClassname","register","areYouRegisteredAlready","RegisterPage","userRegistrationPhase","interruptUserRegistration","UserRegistrationPhase","registerUser","resetPasswordPageClassname","resetPassword","provideApprovalCode","ResetPasswordPage","interruptPasswordResettingWorkflow","doReset","newPassword","token","approvalCode","requestNewPasswordSetting","ProtectedRoute","rest","AppBody","locationState","styles","goBack","ingredientDetails","MenuItem","Icon","isActive","text","text_color_inactive","role","AppHeader","mainPageMatch","feedPageMatch","profilePageMatch","BurgerIcon","isExact","constructor","ListIcon","Boolean","orderList","ProfileIcon","App","ingredientsError","autoLoginPhase","fetchIngredients","doAutoLogin","AutoLoginPhase","app","ReactDOM","StrictMode","store","document","getElementById","BEING_COOKED","COOKED","BEING_DELIVERED","DELIVERED","bottom","top","doHidePassword","doShowPassword","provideYourNewPassword","apiHostUrl","getAccessSchemaAndTokenAndRefreshToken","response","accessTokenWithSchema","accessToken","refreshToken","split","accessSchema","a","fetch","json","success","data","Error","body","JSON","stringify","headers","Headers","method","userEmailFromServer","userNameFromServer","order","number","refreshTokens","getUserData","auth","generateIngredientId","uuidV4","initialState","orderDetailsError","calcTotal","buildIdToActualIngredientsCountMap","actualIngredient","createAsyncThunk","apiFetchIngredients","apiPlaceAnOrder","createSlice","reducers","payload","newValue","splice","moveIngredient","fromIndex","toIndex","actualIngredientsFromState","idToRemove","removableIngredients","filter","extraReducers","builder","addCase","reducer","actions","authRefreshTokenKey","cookiesCtrl","Cookies","authenticationSideEffect","cookies","cookieName","cookieValue","localStorage","setItem","getAccessSchemaAndToken","getRefreshToken","authRefreshToken","setUser","Date","getTime","apiGetUserData","apiRefreshTokens","apiLogin","apiLogout","apiRegisterUser","apiRequestNewPasswordSetting","apiRequestPasswordResettingForEmail","apiUpdateUserData","requestingApprovalCode","removeItem","remove","resetUser","configureStore","devTools","process","burgerReducer","userReducer","useDispatch","func","useSelector","BurgerConstructorItem","canDrag","hover","draggableIndex","setImmediate","event","closest","handleClose","thumbnail"],"mappings":"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","file":"static/js/main.2f53f52d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal-overlay\":\"style_modal-overlay__v0yzo\",\"modal-overlay_interactive\":\"style_modal-overlay_interactive__1pDN1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu-item\":\"style_menu-item__3CXGR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"page-style_page__3yGBB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-ingredient-type\":\"style_burger-ingredient-type__MQwyq\",\"burger-ingredient-type__ingredient-list\":\"style_burger-ingredient-type__ingredient-list__lsh46\",\"burger-ingredient-type__ingredient-details\":\"style_burger-ingredient-type__ingredient-details__3Z88b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-body\":\"style_app-body__2ijFH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"style_app__1uR4E\"};","export interface AdditionalAction {\n  title: string;\n  url: string;\n  urlTitle: string;\n}\n\nexport enum ActualIngredientType {\n  top = 'top',\n  bottom = 'bottom',\n}\n\nexport type ActualIngredient_t = {\n  id: string;\n  refId: string;\n  isLocked?: boolean;\n  type?: ActualIngredientType;\n};\n\nexport enum DraggableTypes {\n  ingredient = 'ingredient',\n  actualIngredient = 'actualIngredient',\n}\n\nexport enum IngredientType {\n  bun = 'bun',\n  sauce = 'sauce',\n  main = 'main',\n}\n\nexport type Ingredient_t = {\n  _id: string;\n  name: string;\n  type: IngredientType;\n  proteins: number;\n  fat: number;\n  carbohydrates: number;\n  calories: number;\n  price: number;\n  image: string;\n  image_mobile: string;\n  image_large: string;\n  __v: number;\n};\n\nexport type IngredientDragItem = {\n  refId: Ingredient_t['_id'];\n  type: IngredientType;\n};\n\nexport type ActualIngredientDragItem = {\n  index: number;\n};\n\nexport enum OrderStatus_t {\n  BEING_COOKED,\n  COOKED,\n  BEING_DELIVERED,\n  DELIVERED,\n}\n\nexport type OrderDetails_t = {\n  id: number;\n  status: OrderStatus_t;\n  message: string;\n};\n\nexport interface User {\n  email: string;\n  name: string;\n}\n\nexport interface RefreshTokensResponse {\n  accessSchema: string;\n  accessToken: string;\n  refreshToken: string;\n}\n\nexport interface UserResponse {\n  user: User;\n}\n\nexport type AuthUserResponse = RefreshTokensResponse & UserResponse;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-constructor\":\"style_burger-constructor__3a8p5\",\"burger-constructor_is-empty\":\"style_burger-constructor_is-empty__1F7G8\",\"burger-constructor__list\":\"style_burger-constructor__list__oWYKC\",\"burger-constructor_is-can-drop\":\"style_burger-constructor_is-can-drop__QK3ua\",\"burger-constructor_is-drag-over\":\"style_burger-constructor_is-drag-over__--itU\",\"burger-constructor__filling\":\"style_burger-constructor__filling__2agyk\",\"burger-constructor__total-wrapper\":\"style_burger-constructor__total-wrapper__21Smn\",\"burger-constructor__order-details\":\"style_burger-constructor__order-details__12HWu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-page\":\"style_profile-page__12ojB\",\"profile-page__menu\":\"style_profile-page__menu__2OSFh\",\"profile-page__content\":\"style_profile-page__content__2Awb7\",\"profile-page__menu-item\":\"style_profile-page__menu-item__2eOTc\",\"profile-page__menu-item-active\":\"style_profile-page__menu-item-active__2p6ra\",\"profile-page__link\":\"style_profile-page__link__9hpBo\"};","import { TICons } from '@ya.praktikum/react-developer-burger-ui-components/dist/ui/icons';\nimport React, { ReactNode } from 'react';\nimport { Control, Controller } from 'react-hook-form';\nimport {\n  Input,\n  PasswordInput,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport { Link } from 'react-router-dom';\n\nimport { AdditionalAction } from '../../types';\n\nexport const produceAdditionalActionReactNode: (\n  value: AdditionalAction,\n  index: number,\n  array: AdditionalAction[]\n) => ReactNode = ({ title, url, urlTitle }, index) => (\n  <React.Fragment key={index}>\n    {index > 0 ? <div className={'pt-4'} /> : null}\n    <div>\n      <span\n        dangerouslySetInnerHTML={{\n          __html: title,\n        }}\n      />\n      &nbsp;\n      <Link\n        to={url}\n        dangerouslySetInnerHTML={{\n          __html: urlTitle,\n        }}\n      />\n    </div>\n  </React.Fragment>\n);\n\nexport enum ComponentInputType {\n  input = 'input',\n  passwordInput = 'passwordInput',\n}\n\ninterface InputDeclaration {\n  componentType: ComponentInputType.input;\n  icon?: keyof TICons;\n  initialValue?: string;\n  name: string;\n  placeholder?: string;\n  type?: React.ComponentProps<typeof Input>['type'];\n}\n\ninterface PasswordInputDeclaration1 {\n  componentType: ComponentInputType.passwordInput;\n  initialValue?: string;\n  name: string;\n  placeholder?: string;\n}\n\ntype InputDeclarations = InputDeclaration | PasswordInputDeclaration1;\n\nexport type { InputDeclarations as InputDeclaration };\n\nexport const produceInputReactNode: (\n  value: InputDeclarations,\n  index: number,\n  array: InputDeclarations[]\n) => ReactNode = function (this: Control, inputDeclaration, ix) {\n  let component: ReactNode;\n\n  switch (inputDeclaration.componentType) {\n    case ComponentInputType.input: {\n      const { icon, name, placeholder, type = 'text' } = inputDeclaration;\n\n      component = (\n        <Controller\n          control={this}\n          name={name as 'email' | 'name' | 'password'}\n          render={({ field: { onChange, value } }) => (\n            <Input\n              icon={icon}\n              onChange={onChange}\n              placeholder={placeholder}\n              type={type}\n              value={value}\n            />\n          )}\n        />\n      );\n      break;\n    }\n    case ComponentInputType.passwordInput: {\n      const { name } = inputDeclaration;\n\n      component = (\n        <Controller\n          control={this}\n          name={name as 'email' | 'name' | 'password'}\n          render={({ field: { onChange, value } }) => (\n            <PasswordInput name={name} onChange={onChange} value={value} />\n          )}\n          // TODO: (mellonis) provide placeholder after @ya.praktikum/react-developer-burger-ui-components library is update\n        />\n      );\n      break;\n    }\n  }\n\n  return (\n    <React.Fragment key={ix}>\n      {ix > 0 ? <div className={'pt-6'} /> : null}\n      {component}\n    </React.Fragment>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport cs from 'classnames';\n\nimport pageStyles from '../page-style.module.css';\n\nconst feedPageClassname = 'feed-page';\n\nconst FeedPage = () => (\n  <div\n    className={cs(\n      pageStyles['page'],\n      pageStyles[`page_${feedPageClassname}`], // for BEM methodology accomplishments\n      feedPageClassname\n    )}\n  >\n    Feed Page\n  </div>\n);\n\nexport { FeedPage };\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport cs from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { MutableRefObject, useCallback, useMemo, useRef } from 'react';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { lexemes } from '../../consts';\n\nimport { AdditionalAction } from '../../types';\nimport {\n  ComponentInputType,\n  InputDeclaration,\n  produceAdditionalActionReactNode,\n  produceInputReactNode,\n} from './helpers';\n\nimport fromStyles from './style.module.css';\n\nconst Form = ({\n  additionalActions,\n  buttonTitle,\n  inputDeclarations,\n  isButtonHiddenOnNotModifiedForm,\n  onSubmit,\n  resetButtonTitle,\n  showErrors,\n  title,\n}: {\n  additionalActions?: AdditionalAction[];\n  buttonTitle?: string;\n  inputDeclarations: InputDeclaration[];\n  isButtonHiddenOnNotModifiedForm?: boolean;\n  onSubmit: SubmitHandler<any>;\n  resetButtonTitle?: string;\n  showErrors?: boolean;\n  title?: string;\n}) => {\n  const componentElementRef: MutableRefObject<HTMLFormElement | null> =\n    useRef(null);\n  const schema = useMemo(() => {\n    return yup.object().shape(\n      inputDeclarations.reduce(\n        (result, inputDeclaration) =>\n          Object.assign(result, {\n            [inputDeclaration.name]: (() => {\n              const isItPasswordField =\n                inputDeclaration.componentType ===\n                  ComponentInputType.passwordInput ||\n                inputDeclaration.name === 'password';\n\n              return isItPasswordField\n                ? yup\n                    .string()\n                    .min(\n                      6,\n                      `${lexemes.forms.__common__.__errors__.passwordLength} (${\n                        inputDeclaration.placeholder ?? inputDeclaration.name\n                      })`\n                    ) // INFO: (mellonis) empirical knowledge for a password value requirements\n                : yup\n                    .string()\n                    .required(\n                      `${lexemes.forms.__common__.__errors__.required} (${inputDeclaration.placeholder})`\n                    );\n            })(),\n          }),\n        {}\n      )\n    );\n  }, [inputDeclarations]);\n  const {\n    control,\n    handleSubmit,\n    formState: { errors, isDirty },\n    reset,\n  } = useForm({\n    defaultValues: inputDeclarations.reduce(\n      (result, { name, initialValue }) =>\n        Object.assign(result, { [name]: initialValue ?? '' }),\n      {}\n    ),\n    mode: 'onSubmit',\n    resolver: yupResolver(schema),\n  });\n  const onInvalidFormHandler = useCallback((errors) => {\n    console.error(errors);\n  }, []);\n  const onValidFormHandler = useCallback(\n    (...args) => {\n      const { current: componentElement } = componentElementRef;\n\n      if (!componentElement) {\n        return;\n      }\n\n      onSubmit.apply(null, args as any);\n    },\n    [onSubmit]\n  );\n  const onButtonClickHandler = useCallback(() => {\n    const { current: formElement } = componentElementRef;\n\n    if (formElement) {\n      formElement.dispatchEvent(new Event('submit'));\n    }\n  }, []);\n\n  const isButtonVisible =\n    buttonTitle &&\n    (!isButtonHiddenOnNotModifiedForm ||\n      (isButtonHiddenOnNotModifiedForm && isDirty));\n  const isResetButtonVisible = resetButtonTitle && isDirty;\n\n  return (\n    <form\n      ref={componentElementRef}\n      className={fromStyles['form']}\n      onSubmit={handleSubmit(onValidFormHandler, onInvalidFormHandler)}\n    >\n      {title ? (\n        <>\n          <div\n            className={fromStyles['form__header']}\n            dangerouslySetInnerHTML={{ __html: title }}\n          />\n          <div className={'pt-6'} />\n        </>\n      ) : null}\n      <div className={fromStyles['form__body']}>\n        {inputDeclarations.map(produceInputReactNode, control)}\n      </div>\n      {isDirty && showErrors && Object.keys(errors).length > 0 ? (\n        <>\n          <div className={'pt-6'} />\n          <ul className={cs(fromStyles['form__errors'], 'text_color_error')}>\n            {Object.entries(errors)\n              .sort(([fieldNameA], [fieldNameB]) =>\n                fieldNameA.localeCompare(fieldNameB)\n              )\n              .map(([fieldName, error]) => {\n                return (\n                  <li key={fieldName} className={fromStyles['form__error']}>\n                    {(error as { message?: string })?.message ?? 'unknown'}\n                  </li>\n                );\n              })}\n          </ul>\n        </>\n      ) : null}\n      {isButtonVisible || isResetButtonVisible ? (\n        <>\n          <div className={'pt-6'} />\n          <div className={fromStyles['form__buttons-container']}>\n            {isButtonVisible ? (\n              <div className={fromStyles['form__button-wrapper']}>\n                <Button type={'primary'} onClick={onButtonClickHandler}>\n                  {buttonTitle}\n                </Button>\n              </div>\n            ) : null}\n            {isButtonVisible && isResetButtonVisible ? (\n              <div className={'pl-6'} />\n            ) : null}\n            {isResetButtonVisible ? (\n              <div className={fromStyles['form__button-wrapper']}>\n                <Button type={'primary'} onClick={() => reset()}>\n                  {resetButtonTitle}\n                </Button>\n              </div>\n            ) : null}\n          </div>\n        </>\n      ) : null}\n      {additionalActions ? (\n        <>\n          <div className={'pt-20'} />\n          <div\n            className={cs(\n              fromStyles['form__additional-actions'],\n              'text_color_inactive'\n            )}\n          >\n            {additionalActions.map(produceAdditionalActionReactNode)}\n          </div>\n        </>\n      ) : null}\n    </form>\n  );\n};\n\nForm.propTypes = {\n  additionalActions: PropTypes.array,\n  buttonTitle: PropTypes.string,\n  inputDeclarations: PropTypes.array.isRequired,\n  isButtonHiddenOnNotModifiedForm: PropTypes.bool,\n  onSubmit: PropTypes.func.isRequired,\n  resetButtonTitle: PropTypes.string,\n  showErrors: PropTypes.bool,\n  title: PropTypes.string,\n};\n\nForm.defaultProps = {\n  isButtonHiddenOnNotModifiedForm: false,\n  showErrors: false,\n};\n\nexport { ComponentInputType } from './helpers';\nexport { Form };\nexport type { InputDeclaration };\n","import cs from 'classnames';\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {\n  ComponentInputType,\n  Form,\n  InputDeclaration,\n} from '../../components/form';\nimport { lexemes } from '../../consts';\nimport {\n  PasswordResettingPhase,\n  requestPasswordResettingForEmail,\n  UserLoginPhase,\n} from '../../services/reducers';\nimport { useAppDispatch, useAppSelector } from '../../services/store';\n\nimport { AdditionalAction } from '../../types';\n\nimport pageStyles from '../page-style.module.css';\n\nconst forgotPasswordPageClassname = 'forgot-password-page';\n\nconst additionalActions: AdditionalAction[] = [\n  {\n    title: lexemes.forms.__common__.haveYouRememberedYourPassword,\n    url: '/login',\n    urlTitle: lexemes.forms.__common__.doLogin,\n  },\n];\nconst inputDeclarations: InputDeclaration[] = [\n  {\n    componentType: ComponentInputType.input,\n    name: 'email',\n    placeholder: lexemes.forms.forgotPassword.provideYourEmail,\n    type: 'email',\n  },\n];\n\nconst ForgotPasswordPage = () => {\n  const { userLoginPhase, passwordResettingPhase } = useAppSelector(\n    (state) => state.user\n  );\n  const dispatch = useAppDispatch();\n\n  if ([UserLoginPhase.fulfilled].includes(userLoginPhase)) {\n    return <Redirect to={'/'} />;\n  }\n\n  if (\n    [\n      PasswordResettingPhase.requestingCredentialsFromUser,\n      PasswordResettingPhase.pendingResetting,\n      PasswordResettingPhase.fulfilled,\n    ].includes(passwordResettingPhase)\n  ) {\n    return <Redirect to={'/reset-password'} />;\n  }\n\n  return (\n    <div\n      className={cs(\n        pageStyles['page'],\n        pageStyles[`page_${forgotPasswordPageClassname}`], // for BEM methodology accomplishments\n        forgotPasswordPageClassname\n      )}\n    >\n      <Form\n        additionalActions={additionalActions}\n        buttonTitle={lexemes.forms.forgotPassword.doResetPassword}\n        inputDeclarations={inputDeclarations}\n        onSubmit={({ email }) => {\n          if (passwordResettingPhase === PasswordResettingPhase.initial) {\n            dispatch(requestPasswordResettingForEmail({ email }));\n          }\n        }}\n        title={lexemes.forms.forgotPassword.title}\n      />\n    </div>\n  );\n};\n\nexport { ForgotPasswordPage };\n","import cs from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { lexemes } from '../../consts';\nimport { useAppSelector } from '../../services/store';\n\nimport style from './style.module.css';\n\nconst IngredientDetails = ({ className }: { className?: string }) => {\n  const { id } = useParams() as { id: string };\n  const { idToIngredientMap } = useAppSelector((state) => state.burger);\n  const {\n    calories,\n    carbohydrates,\n    fat,\n    proteins,\n    image,\n    name: title,\n  } = idToIngredientMap[id];\n  const nutritionalValues = useMemo(() => {\n    return {\n      calories,\n      carbohydrates,\n      fat,\n      proteins,\n    };\n  }, [calories, carbohydrates, fat, proteins]);\n\n  return (\n    <div className={cs(style['ingredient-details'], 'mb-5', className)}>\n      <div\n        className={cs(\n          style['ingredient-details__picture-wrapper'],\n          'pl-5 pr-5'\n        )}\n      >\n        <img\n          alt={title}\n          className={style['ingredient-details__picture']}\n          src={image}\n        />\n      </div>\n      <div className={'pt-4'} />\n      <div\n        className={cs(\n          style['ingredient-details__title'],\n          'text text_type_main-medium'\n        )}\n      >\n        {title}\n      </div>\n      <div className={'pt-8'} />\n      <div\n        className={cs(\n          style['ingredient-details__nutritional-values'],\n          'text_color_inactive'\n        )}\n      >\n        {Object.entries(nutritionalValues).map(([key, value], ix, list) => (\n          <React.Fragment key={key}>\n            <div className={style['ingredient-details__nutritional-value']}>\n              <div\n                className={style['ingredient-details__nutritional-value-title']}\n              >\n                {(lexemes as any)[key]}\n              </div>\n              <div\n                className={cs(\n                  style['ingredient-details__nutritional-value-value'],\n                  'text text_type_digits-default pt-2'\n                )}\n              >\n                {value}\n              </div>\n            </div>\n            {ix + 1 < list.length ? <div className={'pl-5'} /> : null}\n          </React.Fragment>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nIngredientDetails.propTypes = {\n  className: PropTypes.string,\n};\n\nexport { IngredientDetails };\n","import React from 'react';\nimport cs from 'classnames';\nimport { Redirect, useRouteMatch } from 'react-router-dom';\nimport { IngredientDetails } from '../../components/ingredient-details';\nimport { useAppSelector } from '../../services/store';\n\nimport pageStyles from '../page-style.module.css';\n\nconst ingredientsPageClassname = 'ingredients-page';\n\nconst IngredientsPage = () => {\n  const {\n    params: { id },\n  } = useRouteMatch() as { params: { id: string } };\n  const { idToIngredientMap, ingredientsRequest } = useAppSelector(\n    (state) => state.burger\n  );\n\n  if (ingredientsRequest) {\n    return null;\n  }\n\n  const { [id]: ingredient } = idToIngredientMap;\n\n  if (!ingredient) {\n    return <Redirect to={'/'} />;\n  }\n\n  return (\n    <div\n      className={cs(\n        pageStyles['page'],\n        pageStyles[`page_${ingredientsPageClassname}`], // for BEM methodology accomplishments\n        ingredientsPageClassname\n      )}\n    >\n      <IngredientDetails />\n    </div>\n  );\n};\n\nexport { IngredientsPage };\n","import cs from 'classnames';\nimport React, { useEffect } from 'react';\nimport { Redirect, useLocation } from 'react-router-dom';\nimport {\n  ComponentInputType,\n  Form,\n  InputDeclaration,\n} from '../../components/form';\nimport { lexemes } from '../../consts';\nimport {\n  interruptUserLogin,\n  login,\n  UserLoginPhase,\n} from '../../services/reducers';\nimport { useAppDispatch, useAppSelector } from '../../services/store';\n\nimport { AdditionalAction } from '../../types';\n\nimport pageStyles from '../page-style.module.css';\n\nconst loginPageClassname = 'login-page';\n\nconst additionalActions: AdditionalAction[] = [\n  {\n    title: lexemes.forms.login.areYouTheNewUser,\n    url: '/register',\n    urlTitle: lexemes.forms.__common__.doRegister,\n  },\n  {\n    title: lexemes.forms.login.areYouForgetYourPassword,\n    url: '/forgot-password',\n    urlTitle: lexemes.forms.login.doResetYourPassword,\n  },\n];\nconst inputDeclarations: InputDeclaration[] = [\n  {\n    componentType: ComponentInputType.input,\n    name: 'email',\n    placeholder: lexemes.forms.__common__.email,\n    type: 'email',\n  },\n  {\n    componentType: ComponentInputType.passwordInput,\n    name: 'password',\n  },\n];\n\nconst LoginPage = () => {\n  const { userLoginPhase } = useAppSelector((state) => state.user);\n  const dispatch = useAppDispatch();\n  const { state: { redirectedFrom = '/' } = {} } = useLocation() as {\n    state: { redirectedFrom?: string };\n  };\n\n  useEffect(() => {\n    return () => {\n      if ([UserLoginPhase.rejected].includes(userLoginPhase)) {\n        dispatch(interruptUserLogin());\n      }\n    };\n  }, [dispatch, userLoginPhase]);\n\n  if ([UserLoginPhase.fulfilled].includes(userLoginPhase)) {\n    return <Redirect to={redirectedFrom} />;\n  }\n\n  return (\n    <div\n      className={cs(\n        pageStyles['page'],\n        pageStyles[`page_${loginPageClassname}`], // for BEM methodology accomplishments\n        loginPageClassname\n      )}\n    >\n      <Form\n        additionalActions={additionalActions}\n        inputDeclarations={inputDeclarations}\n        buttonTitle={lexemes.forms.__common__.doLogin}\n        onSubmit={({ email, password }) => {\n          if (\n            [UserLoginPhase.initial, UserLoginPhase.rejected].includes(\n              userLoginPhase\n            )\n          ) {\n            dispatch(login({ email, password }));\n          }\n        }}\n        title={lexemes.forms.login.title}\n      />\n    </div>\n  );\n};\n\nexport { LoginPage };\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { logout, UserLoginPhase } from '../../services/reducers';\nimport { useAppDispatch, useAppSelector } from '../../services/store';\n\nconst LogoutPage = () => {\n  const { userLoginPhase } = useAppSelector((state) => state.user);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (userLoginPhase === UserLoginPhase.fulfilled) {\n      dispatch(logout());\n    }\n  });\n\n  if (\n    [\n      UserLoginPhase.initial,\n      UserLoginPhase.pending,\n      UserLoginPhase.rejected,\n    ].includes(userLoginPhase)\n  ) {\n    return <Redirect to={'/login'} />;\n  }\n\n  return null;\n};\n\nexport { LogoutPage };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport style from './style.module.css';\n\nconst Amount = ({\n  amount,\n  className,\n  isTotal,\n}: {\n  amount: number;\n  className?: string;\n  isTotal?: boolean;\n}) => (\n  <div\n    className={cs(\n      style['amount'],\n      'text',\n      {\n        [style['amount_type_total']]: isTotal,\n        'text_type_digits-default': !isTotal,\n        'text_type_digits-medium': isTotal,\n      },\n      className\n    )}\n  >\n    <div className={style['amount__amount']}>{amount}</div>\n    <div className={style['amount__currency-wrapper']}>\n      <CurrencyIcon type={'primary'} />\n    </div>\n  </div>\n);\n\nAmount.propTypes = {\n  amount: PropTypes.number.isRequired,\n  className: PropTypes.string,\n  isTotal: PropTypes.bool,\n};\n\nexport { Amount };\n","import { Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport cs from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useCallback } from 'react';\nimport { useDrop } from 'react-dnd';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { lexemes } from '../../consts';\nimport {\n  addIngredient,\n  placeAnOrder,\n  removeIngredient,\n} from '../../services/reducers';\nimport { useAppDispatch, useAppSelector } from '../../services/store';\nimport {\n  DraggableTypes,\n  IngredientDragItem,\n  IngredientType,\n} from '../../types';\nimport { Amount } from '../amount';\nimport { BurgerConstructorItem } from './burger-constructor-item';\n\nimport style from './style.module.css';\n\nconst BurgerConstructor = ({ className }: { className?: string }) => {\n  const {\n    actualIngredients,\n    idToIngredientMap,\n    orderDetailsRequest,\n    totalAmount,\n  } = useAppSelector((state) => state.burger);\n  const { user } = useAppSelector((state) => state.user);\n  const dispatch = useAppDispatch();\n  const location = useLocation();\n  const history = useHistory();\n\n  const topBun = actualIngredients.slice(0, 1)[0];\n  const bottomBun = actualIngredients.slice(-1)[0];\n  const placeAnOrderClickHandler = useCallback(() => {\n    if (!user) {\n      history.replace('/login');\n    } else {\n      if (!orderDetailsRequest) {\n        dispatch(placeAnOrder(actualIngredients.map(({ refId }) => refId)));\n      }\n    }\n  }, [actualIngredients, dispatch, history, orderDetailsRequest, user]);\n\n  const [{ isCanDrop, isDragOver }, dropRef] = useDrop({\n    accept: DraggableTypes.ingredient,\n    canDrop(item, monitor) {\n      return !(\n        actualIngredients.length === 0 &&\n        monitor.getItemType() === DraggableTypes.ingredient &&\n        (item as IngredientDragItem).type !== IngredientType.bun\n      );\n    },\n    drop(item) {\n      const { refId } = item as IngredientDragItem;\n\n      dispatch(addIngredient(idToIngredientMap[refId]));\n    },\n    collect(monitor) {\n      return {\n        isCanDrop: monitor.canDrop(),\n        isDragOver: monitor.isOver(),\n      };\n    },\n  });\n\n  return (\n    <div\n      className={cs(\n        style['burger-constructor'],\n        'pt-25 pb-5',\n        {\n          [style['burger-constructor_is-empty']]:\n            actualIngredients.length === 0,\n          [style['burger-constructor_is-can-drop']]: isCanDrop,\n          [style['burger-constructor_is-drag-over']]: isDragOver,\n        },\n        className\n      )}\n    >\n      <div ref={dropRef} className={style['burger-constructor__list']}>\n        {topBun && (\n          <>\n            {(() => {\n              const { isLocked = false, refId, type } = topBun;\n              const ingredient = idToIngredientMap[refId];\n\n              return (\n                ingredient && (\n                  <BurgerConstructorItem\n                    ingredient={idToIngredientMap[refId]!}\n                    isLocked={isLocked}\n                    onShowIngredientInfo={() => {\n                      history.push({\n                        pathname: `/ingredients/${ingredient._id}`,\n                        state: {\n                          backgroundPageLocation: location,\n                        },\n                      });\n                    }}\n                    type={type}\n                  />\n                )\n              );\n            })()}\n            <div className={'pt-4'} />\n          </>\n        )}\n        <div\n          className={cs(style['burger-constructor__filling'], 'custom-scroll')}\n        >\n          {actualIngredients\n            .slice(1, -1)\n            .map(({ id, isLocked = false, refId, type }, ix) => {\n              const ingredient = idToIngredientMap[refId];\n\n              return (\n                ingredient && (\n                  <BurgerConstructorItem\n                    key={id}\n                    id={id}\n                    index={ix + 1}\n                    ingredient={idToIngredientMap[refId]!}\n                    isLocked={isLocked}\n                    onShowIngredientInfo={() => {\n                      history.push({\n                        pathname: `/ingredients/${ingredient._id}`,\n                        state: {\n                          backgroundPageLocation: location,\n                        },\n                      });\n                    }}\n                    onDelete={() => {\n                      dispatch(removeIngredient(id));\n                    }}\n                    type={type}\n                  />\n                )\n              );\n            })}\n        </div>\n        {bottomBun && (\n          <>\n            <div className={'pt-4'} />\n            {(() => {\n              const { isLocked = false, refId, type } = bottomBun;\n              const ingredient = idToIngredientMap[refId];\n\n              return (\n                ingredient && (\n                  <BurgerConstructorItem\n                    ingredient={idToIngredientMap[refId]!}\n                    isLocked={isLocked}\n                    onShowIngredientInfo={() => {\n                      history.push({\n                        pathname: `/ingredients/${ingredient._id}`,\n                        state: {\n                          backgroundPageLocation: location,\n                        },\n                      });\n                    }}\n                    type={type}\n                  />\n                )\n              );\n            })()}\n          </>\n        )}\n      </div>\n      <div className={cs(style['burger-constructor__total-wrapper'], 'pt-10')}>\n        <Amount\n          amount={totalAmount}\n          className={style['burger-constructor__total']}\n          isTotal={true}\n        />\n        <div className={'pl-10'} />\n        <Button\n          onClick={placeAnOrderClickHandler}\n          size={'large'}\n          type={'primary'}\n        >\n          {lexemes.placeAnOrder}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nBurgerConstructor.propTypes = { className: PropTypes.string };\n\nexport { BurgerConstructor };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { DragPreviewImage, useDrag } from 'react-dnd';\nimport {\n  DraggableTypes,\n  Ingredient_t,\n  IngredientDragItem,\n} from '../../../types';\nimport { useAppSelector } from '../../../services/store';\nimport { Amount } from '../../amount';\nimport { Counter } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport style from './style.module.css';\n\nconst BurgerIngredient = ({\n  ingredient: { _id, image, name: title, price, type },\n  onClick,\n}: {\n  ingredient: Ingredient_t;\n  onClick?: () => void;\n}) => {\n  const { idToActualIngredientsCountMap } = useAppSelector(\n    (state) => state.burger\n  );\n  const [{ isItPicked }, dragRef, preview] = useDrag({\n    type: DraggableTypes.ingredient,\n    options: {\n      dropEffect: 'copy',\n    },\n    item: {\n      refId: _id,\n      type,\n    } as IngredientDragItem,\n    collect(monitoring) {\n      return {\n        isItPicked: monitoring.isDragging(),\n      };\n    },\n  });\n\n  return (\n    <li\n      ref={dragRef}\n      className={cs(style['burger-ingredient'], {\n        [style['burger-ingredient_interactive']]: onClick,\n        [style['burger-ingredient_is-picked']]: isItPicked,\n      })}\n      onClick={onClick}\n    >\n      <DragPreviewImage connect={preview} src={image} />\n      {idToActualIngredientsCountMap[_id] && (\n        <Counter count={idToActualIngredientsCountMap[_id]} />\n      )}\n      <div>\n        <div\n          className={cs(style['burger-ingredient__image-wrapper'], 'pl-4 pr-4')}\n        >\n          <img\n            alt={title}\n            className={style['burger-ingredient__image']}\n            src={image}\n          />\n        </div>\n        <Amount\n          amount={price}\n          className={cs(style['burger-ingredient__price-wrapper'], 'pt-1 pb-1')}\n        />\n        <div className={cs(style['burger-ingredient__title'])}>{title}</div>\n      </div>\n    </li>\n  );\n};\n\nBurgerIngredient.propTypes = {\n  ingredient: PropTypes.object.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport { BurgerIngredient };\n","import cs from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Ingredient_t } from '../../../types';\nimport { BurgerIngredient } from '../burger-ingredient';\n\nimport style from './style.module.css';\n\nconst BurgerIngredientType = ({\n  className,\n  ingredients,\n  title,\n  type,\n}: {\n  className?: string;\n  ingredients: Ingredient_t[];\n  title: string;\n  type: string;\n}) => {\n  const location = useLocation();\n  const history = useHistory();\n\n  return (\n    <li className={cs('pt-10', className)} data-type={type}>\n      <div className={'text text_type_main-medium'}>{title}</div>\n      <ul\n        className={cs(\n          style['burger-ingredient-type__ingredient-list'],\n          'pt-6 pr-4 pl-4'\n        )}\n      >\n        {ingredients.map((ingredient, ix) => (\n          <React.Fragment key={ingredient._id}>\n            <BurgerIngredient\n              ingredient={ingredient}\n              onClick={() => {\n                history.push({\n                  pathname: `/ingredients/${ingredient._id}`,\n                  state: {\n                    backgroundPageLocation: location,\n                  },\n                });\n              }}\n            />\n            <li\n              className={cs({\n                'pl-6': ix % 2 === 0,\n                'pt-8': ix % 2 === 1,\n              })}\n            />\n          </React.Fragment>\n        ))}\n      </ul>\n    </li>\n  );\n};\n\nBurgerIngredientType.propTypes = {\n  className: PropTypes.string,\n  ingredients: PropTypes.arrayOf(PropTypes.object).isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport { BurgerIngredientType };\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { IngredientType } from '../../types';\nimport { useAppSelector } from '../../services/store';\nimport { lexemes } from '../../consts';\nimport { BurgerIngredientType } from './burger-ingredient-type';\n\nimport style from './style.module.css';\n\nconst ingredientTypeTitles = {\n  bun: lexemes.buns,\n  sauce: lexemes.sauces,\n  main: lexemes.burgerFillings,\n};\nconst ingredientTypes = Object.keys(ingredientTypeTitles) as Array<\n  keyof typeof ingredientTypeTitles\n>;\n\nconst thresholdsStepsCount = 50;\nconst thresholds = [\n  ...Array.from({ length: thresholdsStepsCount - 1 }).map(\n    (_, ix) => ix / (thresholdsStepsCount - 1)\n  ),\n  1,\n];\n\nconst BurgerIngredients = ({ className }: { className?: string }) => {\n  const { ingredients } = useAppSelector((state) => state.burger);\n  const [selectedIngredientType, setSelectedIngredientType] = useState(\n    ingredientTypes[0]\n  );\n  const ingredientTypeToIngredientsMap = useMemo(() => {\n    const axillaryMap = new Map();\n\n    ingredients.forEach((ingredient) => {\n      const { type } = ingredient;\n\n      if (!axillaryMap.has(type)) {\n        axillaryMap.set(type, []);\n      }\n\n      axillaryMap.get(type).push(ingredient);\n    });\n\n    const result = ingredientTypes.reduce((result, ingredientType) => {\n      if (axillaryMap.has(ingredientType)) {\n        result.set(ingredientType, axillaryMap.get(ingredientType));\n      } else {\n        result.set(ingredientType, []);\n      }\n\n      return result;\n    }, new Map());\n\n    axillaryMap.clear();\n\n    return result;\n  }, [ingredients]);\n  const typeListElementRef = useRef<HTMLUListElement>(null);\n\n  useEffect(() => {\n    const { current: typeListElement } = typeListElementRef;\n    const items = typeListElement!.querySelectorAll(\n      `.${style['burger-ingredients__type-item']}`\n    ) as NodeListOf<HTMLLIElement>;\n\n    if (items.length > 0) {\n      const ingredientToIntersectionRatioMap = new Map();\n\n      const intersectionObserver = new IntersectionObserver(\n        (intersectionObserverEntries) => {\n          intersectionObserverEntries.forEach(\n            ({ target, intersectionRatio }) => {\n              const {\n                dataset: { type },\n              } = target as HTMLLIElement;\n\n              if (type) {\n                ingredientToIntersectionRatioMap.set(type, intersectionRatio);\n              }\n            }\n          );\n\n          const mostVisibleType = [\n            // @ts-ignore\n            ...ingredientToIntersectionRatioMap.entries(),\n          ].sort(([, irA], [, irB]) => irB - irA)[0][0];\n\n          setSelectedIngredientType(mostVisibleType);\n        },\n        {\n          root: typeListElement,\n          threshold: thresholds,\n        }\n      );\n\n      items.forEach((item) => {\n        ingredientToIntersectionRatioMap.set(item.dataset.type, 0);\n        intersectionObserver.observe(item);\n      });\n\n      return () => {\n        intersectionObserver.disconnect();\n        ingredientToIntersectionRatioMap.clear();\n      };\n    }\n  }, []);\n\n  return (\n    <div className={cs(style['burger-ingredients'], 'pb-5', className)}>\n      <div\n        className={cs(\n          style['burger-ingredients__title'],\n          'pt-10 pb-5 text text_type_main-large'\n        )}\n      >\n        {lexemes.assembleABurger}\n      </div>\n      <div className={cs(style['burger-ingredients__filter'])}>\n        {ingredientTypes.map((type) => (\n          <Tab\n            key={type}\n            active={selectedIngredientType === type}\n            value={type}\n            onClick={(type) => {\n              const { current: typeListElement } = typeListElementRef;\n\n              if (typeListElement) {\n                const currentListItemElement = typeListElement.querySelector(\n                  `.${style['burger-ingredients__type-item']}[data-type=\"${type}\"]`\n                );\n\n                if (currentListItemElement) {\n                  currentListItemElement.scrollIntoView({ behavior: 'smooth' });\n                }\n              }\n            }}\n          >\n            {(ingredientTypeTitles as any)[type]}\n          </Tab>\n        ))}\n      </div>\n      <ul\n        ref={typeListElementRef}\n        className={cs(style['burger-ingredients__type-list'], 'custom-scroll')}\n      >\n        {Array.from(ingredientTypeToIngredientsMap.entries()).map(\n          ([type, ingredients]) => (\n            <BurgerIngredientType\n              key={type}\n              className={style['burger-ingredients__type-item']}\n              ingredients={ingredients}\n              title={ingredientTypeTitles[type as IngredientType]}\n              type={type}\n            />\n          )\n        )}\n      </ul>\n    </div>\n  );\n};\n\nBurgerIngredients.propTypes = { className: PropTypes.string };\n\nexport { BurgerIngredients };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\n\nimport style from './style.module.css';\n\nconst ModalOverlay = ({\n  className,\n  onClick,\n}: {\n  className?: string;\n  onClick?: () => void;\n}) => (\n  <div\n    className={cs(\n      style['modal-overlay'],\n      {\n        [`${style['modal-overlay_interactive']}`]: onClick,\n      },\n      className\n    )}\n    onClick={onClick}\n  />\n);\n\nModalOverlay.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nexport { ModalOverlay };\n","import React, {\n  MutableRefObject,\n  ReactNode,\n  ReactPortal,\n  useCallback,\n  useEffect,\n  useRef,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { ModalOverlay } from './modal-overlay';\n\nimport style from './style.module.css';\n\nconst Modal = ({\n  children,\n  className,\n  onClose,\n  title,\n}: {\n  children?: ReactNode | ReactPortal;\n  className?: string;\n  onClose: () => void;\n  title?: string;\n}) => {\n  const modalElementRef = useRef(null);\n\n  useEffect(() => {\n    const { current: modalElement } =\n      modalElementRef as MutableRefObject<HTMLElement | null>;\n\n    if (modalElement) {\n      modalElement.focus();\n    }\n  }, []);\n\n  const keyDownHandler = useCallback(\n    ({ key }) => {\n      if (key === 'Escape' && onClose) {\n        onClose();\n      }\n    },\n    [onClose]\n  );\n\n  return (\n    <>\n      <ModalOverlay className={style['modal__overlay']} onClick={onClose} />\n      <div\n        ref={modalElementRef}\n        className={cs(style['modal'], 'p-10', className)}\n        onKeyDown={keyDownHandler}\n        tabIndex={0}\n      >\n        <div className={style['modal__header']}>\n          <div\n            className={cs(style['modal__title'], ' text text_type_main-large')}\n          >\n            {title}\n          </div>\n          <button className={style['modal__close-button']} onClick={onClose}>\n            <CloseIcon type={'primary'} />\n          </button>\n        </div>\n        <div className={style['modal__content']}>{children}</div>\n      </div>\n    </>\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  className: PropTypes.string,\n  onClose: PropTypes.func.isRequired,\n  title: PropTypes.string,\n};\n\nexport { Modal };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { CheckMarkIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { OrderDetails_t } from '../../types';\nimport { lexemes, orderStatusToStatusTitleMap } from '../../consts';\n\nimport style from './style.module.css';\n\nconst OrderDetails = ({\n  className,\n  orderDetails: { id, status, message },\n}: {\n  className?: string;\n  orderDetails: OrderDetails_t;\n}) => (\n  <div className={cs(style['order-details'], className)}>\n    <div\n      className={cs(style['order-details__id'], 'text text_type_digits-large')}\n    >\n      {String(id).padStart(6, '0')}\n    </div>\n    <div className={'pt-8'} />\n    <div\n      className={cs(\n        style['order-details__id-title'],\n        'text text_type_main-medium'\n      )}\n    >\n      {lexemes.orderId}\n    </div>\n    <div className={'pt-15'} />\n    <div className={style['order-details__status-icon-wrapper']}>\n      <CheckMarkIcon type={'primary'} />\n    </div>\n    <div className={'pt-15'} />\n    <div className={style['order-details__status-title']}>\n      {orderStatusToStatusTitleMap[status]}\n    </div>\n    <div className={'pt-2'} />\n    <div className={cs(style['order-details__message'], 'text_color_inactive')}>\n      {message}\n    </div>\n  </div>\n);\n\nOrderDetails.propTypes = {\n  className: PropTypes.string,\n  orderDetails: PropTypes.object.isRequired,\n};\n\nexport { OrderDetails };\n","import cs from 'classnames';\nimport React from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend as Html5Backend } from 'react-dnd-html5-backend';\nimport { BurgerConstructor } from '../../components/burger-constructor';\nimport burgerConstructorStyles from '../../components/burger-constructor/style.module.css';\nimport { BurgerIngredients } from '../../components/burger-ingredients';\nimport { Modal } from '../../components/modal';\nimport { OrderDetails } from '../../components/order-details';\nimport { resetOrderDetails } from '../../services/reducers';\nimport { useAppDispatch, useAppSelector } from '../../services/store';\n\nimport pageStyles from '../page-style.module.css';\nimport mainPageStyles from './style.module.css';\n\nconst mainPageClassName = 'main-page';\n\nconst MainPage = () => {\n  const { orderDetails } = useAppSelector((state) => state.burger);\n  const dispatch = useAppDispatch();\n\n  return (\n    <div\n      className={cs(\n        pageStyles['page'],\n        pageStyles[`page_${mainPageClassName}`], // for BEM methodology accomplishments\n        mainPageStyles[mainPageClassName]\n      )}\n    >\n      <DndProvider backend={Html5Backend}>\n        <BurgerIngredients\n          className={mainPageStyles[`${mainPageClassName}__ingredients`]}\n        />\n        <div\n          className={cs(mainPageStyles[`${mainPageClassName}__space`], 'pl-10')}\n        />\n        <BurgerConstructor\n          className={mainPageStyles[`${mainPageClassName}__constructor`]}\n        />\n      </DndProvider>\n      {orderDetails && (\n        <Modal onClose={() => dispatch(resetOrderDetails())}>\n          <OrderDetails\n            className={cs(\n              burgerConstructorStyles['burger-constructor__order-details'],\n              'mt-4 mb-20'\n            )}\n            orderDetails={orderDetails}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport { MainPage };\n","import React from 'react';\nimport cs from 'classnames';\n\nimport pageStyles from '../page-style.module.css';\n\nconst notFoundPageClassname = 'not-found-page';\n\nconst NotFoundPage = () => (\n  <div\n    className={cs(\n      pageStyles['page'],\n      pageStyles[`page_${notFoundPageClassname}`], // for BEM methodology accomplishments\n      notFoundPageClassname\n    )}\n  >\n    Not Found Page\n  </div>\n);\n\nexport { NotFoundPage };\n","import React from 'react';\n\nconst Orders = () => <div>Orders Subpage</div>;\n\nexport { Orders };\n","import React, { useEffect, useMemo } from 'react';\nimport {\n  ComponentInputType,\n  Form,\n  InputDeclaration,\n} from '../../../components/form';\nimport { lexemes } from '../../../consts';\nimport {\n  interruptUpdateUserData,\n  updateUserData,\n  UpdateUserDataPhase,\n} from '../../../services/reducers';\nimport { useAppDispatch, useAppSelector } from '../../../services/store';\n\nconst inputDeclarations: Readonly<InputDeclaration>[] = [\n  {\n    componentType: ComponentInputType.input,\n    icon: 'EditIcon',\n    name: 'name',\n    placeholder: lexemes.forms.__common__.name,\n    type: 'text',\n  },\n  {\n    componentType: ComponentInputType.input,\n    icon: 'EditIcon',\n    name: 'email',\n    placeholder: lexemes.forms.profile.email,\n    type: 'email',\n  },\n  {\n    componentType: ComponentInputType.input,\n    icon: 'EditIcon',\n    name: 'password',\n    placeholder: lexemes.forms.__common__.password,\n    type: 'password',\n  },\n];\n\nconst Profile = () => {\n  const { user, updateUserDataPhase } = useAppSelector((state) => state.user);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    return () => {\n      dispatch(interruptUpdateUserData());\n    };\n  }, [dispatch]);\n\n  const actualInputDeclarations = useMemo(() => {\n    if (!user) {\n      return inputDeclarations;\n    }\n\n    return inputDeclarations.map((inputDeclaration) => {\n      const inputDeclarationCopy: InputDeclaration = {\n        ...inputDeclaration,\n      };\n\n      if (Object.prototype.hasOwnProperty.call(user, inputDeclaration.name)) {\n        inputDeclarationCopy.initialValue =\n          user[inputDeclaration.name as keyof typeof user];\n      }\n\n      return inputDeclarationCopy;\n    });\n  }, [user]);\n\n  return (\n    <div>\n      <Form\n        inputDeclarations={actualInputDeclarations}\n        isButtonHiddenOnNotModifiedForm={true}\n        buttonTitle={lexemes.forms.profile.doEdit}\n        onSubmit={({ email, name, password }) => {\n          if (updateUserDataPhase === UpdateUserDataPhase.initial) {\n            dispatch(updateUserData({ email, name, password }));\n          }\n        }}\n        resetButtonTitle={lexemes.forms.__common__.resetForm}\n        showErrors={true}\n      />\n    </div>\n  );\n};\n\nexport { Profile };\n","import cs from 'classnames';\nimport React from 'react';\nimport { Link, Redirect, Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { useAppSelector } from '../../services/store';\n\nimport pageStyles from '../page-style.module.css';\nimport { Orders } from './orders';\nimport { Profile } from './profile';\nimport profilePageStyle from './style.module.css';\n\nconst profilePageClassname = 'profile-page';\n\nconst ProfilePage = () => {\n  const { userTimeStamp } = useAppSelector((state) => state.user);\n  const { path } = useRouteMatch();\n  const isProfileSubpageMatched = useRouteMatch({ path, exact: true });\n  const isOrdersSubpageMatched = useRouteMatch({ path: `${path}/orders` });\n\n  return (\n    <div\n      className={cs(\n        pageStyles['page'],\n        pageStyles[`page_${profilePageClassname}`], // for BEM methodology accomplishments\n        profilePageStyle[profilePageClassname],\n        'pt-25'\n      )}\n    >\n      <ul\n        className={cs(\n          profilePageStyle[`${profilePageClassname}__menu`],\n          'text_color_inactive'\n        )}\n      >\n        <li\n          className={cs(\n            profilePageStyle[`${profilePageClassname}__menu-item`],\n            {\n              [profilePageStyle[`${profilePageClassname}__menu-item-active`]]:\n                isProfileSubpageMatched,\n            }\n          )}\n        >\n          <Link\n            className={profilePageStyle[`${profilePageClassname}__link`]}\n            to={`${path}`}\n          >\n            Профиль\n          </Link>\n        </li>\n        <li\n          className={cs(\n            profilePageStyle[`${profilePageClassname}__menu-item`],\n            {\n              [profilePageStyle[`${profilePageClassname}__menu-item-active`]]:\n                isOrdersSubpageMatched,\n            }\n          )}\n        >\n          <Link\n            className={profilePageStyle[`${profilePageClassname}__link`]}\n            to={`${path}/orders`}\n          >\n            История заказов\n          </Link>\n        </li>\n        <li className={profilePageStyle[`${profilePageClassname}__menu-item`]}>\n          <Link\n            className={profilePageStyle[`${profilePageClassname}__link`]}\n            to={`/logout`}\n          >\n            Выход\n          </Link>\n        </li>\n      </ul>\n      <div className={'pl-15'} />\n      <div className={profilePageStyle[`${profilePageClassname}__content`]}>\n        <Switch>\n          <Route exact path={`${path}`}>\n            <Profile key={userTimeStamp} />\n          </Route>\n          <Route path={`${path}/orders`}>\n            <Orders />\n          </Route>\n          <Route>\n            <Redirect to={path} />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport { ProfilePage };\n","import cs from 'classnames';\nimport React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {\n  ComponentInputType,\n  Form,\n  InputDeclaration,\n} from '../../components/form';\nimport { lexemes } from '../../consts';\nimport {\n  interruptUserRegistration,\n  registerUser,\n  UserLoginPhase,\n  UserRegistrationPhase,\n} from '../../services/reducers';\nimport { useAppDispatch, useAppSelector } from '../../services/store';\nimport { AdditionalAction } from '../../types';\n\nimport pageStyles from '../page-style.module.css';\n\nconst registerPageClassname = 'register-page';\n\nconst additionalActions: AdditionalAction[] = [\n  {\n    title: lexemes.forms.register.areYouRegisteredAlready,\n    url: '/login',\n    urlTitle: lexemes.forms.__common__.doLogin,\n  },\n];\nconst inputDeclarations: InputDeclaration[] = [\n  {\n    componentType: ComponentInputType.input,\n    name: 'name',\n    placeholder: lexemes.forms.__common__.name,\n  },\n  {\n    componentType: ComponentInputType.input,\n    name: 'email',\n    placeholder: lexemes.forms.__common__.email,\n    type: 'email',\n  },\n  {\n    componentType: ComponentInputType.passwordInput,\n    name: 'password',\n  },\n];\n\nconst RegisterPage = () => {\n  const { userLoginPhase, userRegistrationPhase } = useAppSelector(\n    (state) => state.user\n  );\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    return () => {\n      dispatch(interruptUserRegistration());\n    };\n  }, [dispatch]);\n\n  if ([UserLoginPhase.fulfilled].includes(userLoginPhase)) {\n    return <Redirect to={'/login'} />;\n  }\n\n  if (\n    [UserRegistrationPhase.fulfilled, UserRegistrationPhase.rejected].includes(\n      userRegistrationPhase\n    )\n  ) {\n    return <Redirect to={'/login'} />;\n  }\n\n  return (\n    <div\n      className={cs(\n        pageStyles['page'],\n        pageStyles[`page_${registerPageClassname}`], // for BEM methodology accomplishments\n        registerPageClassname\n      )}\n    >\n      <Form\n        additionalActions={additionalActions}\n        inputDeclarations={inputDeclarations}\n        buttonTitle={lexemes.forms.__common__.doRegister}\n        onSubmit={({ email, name, password }) => {\n          if (userRegistrationPhase === UserRegistrationPhase.initial) {\n            dispatch(\n              registerUser({\n                email,\n                name,\n                password,\n              })\n            );\n          }\n        }}\n        showErrors={true}\n        title={lexemes.forms.register.title}\n      />\n    </div>\n  );\n};\n\nexport { RegisterPage };\n","import cs from 'classnames';\nimport React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {\n  ComponentInputType,\n  Form,\n  InputDeclaration,\n} from '../../components/form';\nimport { lexemes } from '../../consts';\nimport {\n  interruptPasswordResettingWorkflow,\n  PasswordResettingPhase,\n  requestNewPasswordSetting,\n  UserLoginPhase,\n} from '../../services/reducers';\nimport { useAppDispatch, useAppSelector } from '../../services/store';\nimport { AdditionalAction } from '../../types';\n\nimport pageStyles from '../page-style.module.css';\n\nconst resetPasswordPageClassname = 'reset-password-page';\n\nconst additionalActions: AdditionalAction[] = [\n  {\n    title: lexemes.forms.__common__.haveYouRememberedYourPassword,\n    url: '/login',\n    urlTitle: lexemes.forms.__common__.doLogin,\n  },\n];\nconst inputDeclarations: InputDeclaration[] = [\n  {\n    componentType: ComponentInputType.passwordInput,\n    name: 'newPassword',\n  },\n  {\n    componentType: ComponentInputType.input,\n    name: 'approvalCode',\n    type: 'text',\n    placeholder: lexemes.forms.resetPassword.provideApprovalCode,\n  },\n];\n\nconst ResetPasswordPage = () => {\n  const { userLoginPhase, passwordResettingPhase } = useAppSelector(\n    (state) => state.user\n  );\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    return () => {\n      dispatch(interruptPasswordResettingWorkflow());\n    };\n  }, [dispatch]);\n\n  if ([UserLoginPhase.fulfilled].includes(userLoginPhase)) {\n    return <Redirect to={'/'} />;\n  }\n\n  if (\n    [\n      PasswordResettingPhase.fulfilled,\n      PasswordResettingPhase.initial,\n      PasswordResettingPhase.rejected,\n    ].includes(passwordResettingPhase)\n  ) {\n    return <Redirect to={'/login'} />;\n  }\n\n  return (\n    <div\n      className={cs(\n        pageStyles['page'],\n        pageStyles[`page_${resetPasswordPageClassname}`], // for BEM methodology accomplishments\n        resetPasswordPageClassname\n      )}\n    >\n      <Form\n        additionalActions={additionalActions}\n        inputDeclarations={inputDeclarations}\n        buttonTitle={lexemes.forms.resetPassword.doReset}\n        onSubmit={({ newPassword: password, approvalCode: token }) => {\n          if (\n            passwordResettingPhase ===\n            PasswordResettingPhase.requestingCredentialsFromUser\n          ) {\n            dispatch(requestNewPasswordSetting({ password, token }));\n          }\n        }}\n        showErrors={true}\n        title={lexemes.forms.resetPassword.title}\n      />\n    </div>\n  );\n};\n\nexport { ResetPasswordPage };\n","import React, { ReactNode } from 'react';\nimport { Redirect, Route, useLocation } from 'react-router-dom';\nimport { UserLoginPhase } from '../../services/reducers';\nimport { useAppSelector } from '../../services/store';\n\nimport PropTypes from 'prop-types';\n\nconst ProtectedRoute = ({\n  children,\n  ...rest\n}: {\n  children: ReactNode;\n  [key: string]: any;\n}) => {\n  const { userLoginPhase } = useAppSelector((state) => state.user);\n  const { pathname } = useLocation();\n\n  return (\n    <Route\n      {...rest}\n      render={() =>\n        userLoginPhase === UserLoginPhase.fulfilled ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: {\n                redirectedFrom: pathname,\n              },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nProtectedRoute.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport { ProtectedRoute };\n","import cs from 'classnames';\nimport React from 'react';\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\nimport { lexemes } from '../../consts';\nimport {\n  FeedPage,\n  ForgotPasswordPage,\n  IngredientsPage,\n  LoginPage,\n  LogoutPage,\n  MainPage,\n  NotFoundPage,\n  ProfilePage,\n  RegisterPage,\n  ResetPasswordPage,\n} from '../../pages';\nimport burgerConstructorStyles from '../burger-constructor/style.module.css';\nimport { IngredientDetails } from '../ingredient-details';\nimport { Modal } from '../modal';\nimport { ProtectedRoute } from '../protected-route';\n\nimport styles from './style.module.css';\n\nconst AppBody = () => {\n  let location = useLocation();\n  const { state: locationState } = useLocation() as {\n    state: { backgroundPageLocation?: typeof location } | null;\n  };\n  const { backgroundPageLocation } = locationState ?? {};\n  const history = useHistory();\n\n  if (backgroundPageLocation) {\n    location = backgroundPageLocation;\n  }\n\n  return (\n    <main\n      className={cs(\n        styles['app-body'],\n        'pl-5 pr-5 text text_type_main-default'\n      )}\n    >\n      <Switch location={location}>\n        <Route exact path=\"/\">\n          <MainPage />\n        </Route>\n        <Route exact path=\"/login\">\n          <LoginPage />\n        </Route>\n        <Route exact path=\"/register\">\n          <RegisterPage />\n        </Route>\n        <Route exact path=\"/forgot-password\">\n          <ForgotPasswordPage />\n        </Route>\n        <Route exact path=\"/reset-password\">\n          <ResetPasswordPage />\n        </Route>\n        <Route path=\"/feed\">\n          <FeedPage />\n        </Route>\n        <ProtectedRoute path=\"/profile\">\n          <ProfilePage />\n        </ProtectedRoute>\n        <Route path=\"/ingredients/:id\">\n          <IngredientsPage />\n        </Route>\n        <Route path=\"/logout\">\n          <LogoutPage />\n        </Route>\n        <Route>\n          <NotFoundPage />\n        </Route>\n      </Switch>\n      {backgroundPageLocation ? (\n        <Route path=\"/ingredients/:id\">\n          <Modal\n            onClose={() => history.goBack()}\n            title={lexemes.ingredientDetails}\n          >\n            <IngredientDetails\n              className={cs(\n                burgerConstructorStyles[\n                  'burger-constructor__ingredient-details'\n                ]\n              )}\n            />\n          </Modal>\n        </Route>\n      ) : null}\n    </main>\n  );\n};\n\nexport { AppBody };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { TIconProps } from '@ya.praktikum/react-developer-burger-ui-components/dist/ui/icons/utils';\nimport style from './style.module.css';\n\ntype Icon_t = ({ type }: TIconProps) => JSX.Element;\n\nconst MenuItem = ({\n  className,\n  Icon,\n  isActive,\n  onClick,\n  text,\n}: {\n  className?: string;\n  Icon: Icon_t;\n  isActive?: boolean;\n  onClick?: (...a: any[]) => void;\n  text: string;\n}) => {\n  return (\n    <li\n      className={cs(\n        style['menu-item'],\n        {\n          [style['menu-item_active']]: isActive,\n        },\n        className,\n        'p-5 text',\n        {\n          text_color_inactive: !isActive,\n        }\n      )}\n      onClick={onClick}\n      role=\"button\"\n    >\n      <Icon type={isActive ? 'primary' : 'secondary'} />\n      <span className=\"ml-2\">{text}</span>\n    </li>\n  );\n};\n\nMenuItem.propTypes = {\n  className: PropTypes.string,\n  Icon: PropTypes.elementType.isRequired,\n  isActive: PropTypes.bool,\n  onClick: PropTypes.func,\n  text: PropTypes.string.isRequired,\n};\n\nMenuItem.defaultProps = {\n  isActive: true,\n};\n\nexport { MenuItem };\n","import React from 'react';\nimport { Link, useHistory, useRouteMatch } from 'react-router-dom';\nimport cs from 'classnames';\nimport {\n  Logo,\n  BurgerIcon,\n  ListIcon,\n  ProfileIcon,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport { lexemes } from '../../consts';\nimport { MenuItem } from './menu-item';\n\nimport styles from './style.module.css';\n\nconst AppHeader = () => {\n  const history = useHistory();\n  const mainPageMatch = useRouteMatch('/');\n  const feedPageMatch = useRouteMatch('/feed');\n  const profilePageMatch = useRouteMatch('/profile');\n\n  return (\n    <header\n      className={cs(\n        styles['app-header'],\n        'text text_type_main-default pt-3 pb-3'\n      )}\n    >\n      <nav>\n        <ul className={cs(styles['app-header__menu-list'], 'pt-4 pb-4')}>\n          <MenuItem\n            className={styles['app-header__menu-item']}\n            Icon={BurgerIcon}\n            isActive={(mainPageMatch && mainPageMatch.isExact) ?? false}\n            onClick={() => {\n              history.push({\n                pathname: '/',\n              });\n            }}\n            text={lexemes.constructor}\n          />\n          <MenuItem\n            className={styles['app-header__menu-item']}\n            Icon={ListIcon}\n            isActive={Boolean(feedPageMatch)}\n            onClick={() => {\n              history.push({\n                pathname: '/feed',\n              });\n            }}\n            text={lexemes.orderList}\n          />\n          <li className={styles['app-header__logo-wrapper']}>\n            <Link to={'/'}>\n              <Logo />\n            </Link>\n          </li>\n          <MenuItem\n            className={styles['app-header__menu-item']}\n            Icon={ProfileIcon}\n            isActive={Boolean(profilePageMatch)}\n            onClick={() => {\n              history.push({\n                pathname: '/profile',\n              });\n            }}\n            text={lexemes.profile}\n          />\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport { AppHeader };\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport {\n  AutoLoginPhase,\n  doAutoLogin,\n  fetchIngredients,\n} from '../../services/reducers';\nimport { useAppDispatch, useAppSelector } from '../../services/store';\nimport { AppBody } from '../app-body';\nimport { AppHeader } from '../app-header';\n\nimport style from './style.module.css';\n\nconst App = () => {\n  const { ingredientsError, ingredientsRequest } = useAppSelector(\n    (state) => state.burger\n  );\n  const { autoLoginPhase } = useAppSelector((state) => state.user);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(fetchIngredients());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(doAutoLogin());\n  }, [dispatch]);\n\n  if (\n    ![AutoLoginPhase.fulfilled, AutoLoginPhase.rejected].includes(\n      autoLoginPhase\n    )\n  ) {\n    return null;\n  }\n\n  return (\n    <div className={style.app}>\n      <Router>\n        <AppHeader />\n        {!ingredientsRequest && !ingredientsError && <AppBody />}\n      </Router>\n    </div>\n  );\n};\n\nexport { App };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './services/store';\nimport { App } from './components/app';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    <div id=\"modal-container\" />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"style_form__3d8HQ\",\"form__header\":\"style_form__header__3sDZb\",\"form__body\":\"style_form__body__2i5xi\",\"form__errors\":\"style_form__errors__29KrO\",\"form__buttons-container\":\"style_form__buttons-container__3hu67\",\"form__button-wrapper\":\"style_form__button-wrapper__I3YEI\",\"form__additional-actions\":\"style_form__additional-actions__3Z0Nm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient-details\":\"style_ingredient-details__13xEY\",\"ingredient-details__picture-wrapper\":\"style_ingredient-details__picture-wrapper__2n82A\",\"ingredient-details__picture\":\"style_ingredient-details__picture__11V57\",\"ingredient-details__title\":\"style_ingredient-details__title__WZMcA\",\"ingredient-details__nutritional-values\":\"style_ingredient-details__nutritional-values__XSWu_\",\"ingredient-details__nutritional-value\":\"style_ingredient-details__nutritional-value__1P1f6\",\"ingredient-details__nutritional-value-title\":\"style_ingredient-details__nutritional-value-title__3110a\",\"ingredient-details__nutritional-value-value\":\"style_ingredient-details__nutritional-value-value__2HErT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-constructor-item\":\"style_burger-constructor-item__6ndAy\",\"burger-constructor-item_is-drag-over\":\"style_burger-constructor-item_is-drag-over__8rJ5N\",\"burger-constructor-item_is-can-drop\":\"style_burger-constructor-item_is-can-drop__1ROm7\",\"burger-constructor-item_is-picked\":\"style_burger-constructor-item_is-picked__bR2iz\",\"burger-constructor-item__constructor-element-wrapper\":\"style_burger-constructor-item__constructor-element-wrapper__2ki39\",\"burger-constructor-item_interactive\":\"style_burger-constructor-item_interactive__3QnkX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-ingredient\":\"style_burger-ingredient__It1Se\",\"burger-ingredient_interactive\":\"style_burger-ingredient_interactive__3zkQq\",\"burger-ingredient_is-picked\":\"style_burger-ingredient_is-picked__3Qo2E\",\"burger-ingredient__image-wrapper\":\"style_burger-ingredient__image-wrapper__2P4Vw\",\"burger-ingredient__price-wrapper\":\"style_burger-ingredient__price-wrapper__2td-g\",\"burger-ingredient__title\":\"style_burger-ingredient__title__26qp_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-ingredients\":\"style_burger-ingredients__2mHyl\",\"burger-ingredients__filter\":\"style_burger-ingredients__filter__1NLWy\",\"burger-ingredients__type-list\":\"style_burger-ingredients__type-list__IM2C3\",\"burger-ingredients__type-item\":\"style_burger-ingredients__type-item__1JXTu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"style_modal__vQxtL\",\"modal__header\":\"style_modal__header__3dmqg\",\"modal__title\":\"style_modal__title__14q9S\",\"modal__close-button\":\"style_modal__close-button__3aKnX\",\"modal__content\":\"style_modal__content__1zYdw\"};","import { OrderStatus_t } from './types';\n\nexport const orderStatusToStatusTitleMap: {\n  [key in OrderStatus_t]: string;\n} = {\n  [OrderStatus_t.BEING_COOKED]: 'Ваш заказ начали готовить',\n  [OrderStatus_t.COOKED]: 'Заказ приготовлен',\n  [OrderStatus_t.BEING_DELIVERED]: 'Ваш заказ доставляется',\n  [OrderStatus_t.DELIVERED]: 'Заказ доставлен',\n};\n\nconst allLexemes = {\n  ru: {\n    assembleABurger: 'Соберите бургер',\n    bottom: 'низ',\n    buns: 'Булки',\n    burgerFillings: 'Начинки',\n    calories: 'Калории, ккал',\n    carbohydrates: 'Углеводы, г',\n    constructor: 'Конструктор',\n    fat: 'Жиры, г',\n    ingredientDetails: 'Детали ингредиента',\n    orderId: 'Идентификатор заказа',\n    orderList: 'Лента заказов',\n    placeAnOrder: 'Оформить заказ',\n    profile: 'Личный кабинет',\n    proteins: 'Белки, г',\n    sauces: 'Соусы',\n    top: 'верх',\n    forms: {\n      __common__: {\n        __errors__: {\n          required: 'Заполните обязательное поле',\n          passwordLength: 'Пароль должен содержать как минимум 6 символов',\n        },\n        doHidePassword: 'Скрыть пароль',\n        doLogin: 'Войти',\n        doRegister: 'Зарегистрироваться',\n        doShowPassword: 'Показать пароль',\n        email: 'E-mail',\n        haveYouRememberedYourPassword: 'Вспомнили пароль?',\n        name: 'Имя',\n        password: 'Пароль',\n        resetForm: 'Отмена',\n      },\n      forgotPassword: {\n        doResetPassword: 'Восстановить',\n        provideYourEmail: 'Укажите e-mail',\n        title: 'Восстановление пароля',\n      },\n      login: {\n        areYouForgetYourPassword: 'Забыли пароль?',\n        areYouTheNewUser: 'Вы новый пользователь?',\n        doResetYourPassword: 'Восстановить пароль',\n        title: 'Вход',\n      },\n      profile: {\n        doEdit: 'Изменить',\n        email: 'Логин',\n      },\n      register: {\n        areYouRegisteredAlready: 'Уже зарегистрированы?',\n        title: 'Регистрация',\n      },\n      resetPassword: {\n        doReset: 'Сохранить',\n        provideApprovalCode: 'Введите код из письма',\n        provideYourNewPassword: 'Введите новый пароль',\n        title: 'Восстановление пароля',\n      },\n    },\n  },\n};\n\nexport const lexemes = allLexemes.ru;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-details\":\"style_order-details__DhWNa\",\"order-details__id\":\"style_order-details__id__31e3O\",\"order-details__id-title\":\"style_order-details__id-title__3AKtK\",\"order-details__status-icon-wrapper\":\"style_order-details__status-icon-wrapper__3cIJk\",\"order-details__status-title\":\"style_order-details__status-title__3ORfi\",\"order-details__message\":\"style_order-details__message__2ChKS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-header\":\"style_app-header__C5Utm\",\"app-header__menu-list\":\"style_app-header__menu-list__tOfh6\",\"app-header__logo-wrapper\":\"style_app-header__logo-wrapper__2jy8W\"};","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  AuthUserResponse,\n  RefreshTokensResponse,\n  User,\n  UserResponse,\n} from '../../types';\nimport {\n  getUserData as apiGetUserData,\n  login as apiLogin,\n  logout as apiLogout,\n  refreshTokens as apiRefreshTokens,\n  registerUser as apiRegisterUser,\n  requestNewPasswordSetting as apiRequestNewPasswordSetting,\n  requestPasswordResettingForEmail as apiRequestPasswordResettingForEmail,\n  updateUserData as apiUpdateUserData,\n} from '../api';\nimport {\n  authenticationSideEffect,\n  cleanUpAuthenticationSideEffect,\n  getAccessSchemaAndToken,\n  getRefreshToken,\n  resetUser,\n  setUser,\n} from '../helpers';\n\nexport enum PasswordResettingPhase {\n  initial = 'initial',\n  requestingApprovalCode = 'requesting-approval-code',\n  requestingCredentialsFromUser = 'requesting-credentials-from-user',\n  pendingResetting = 'pending-resetting',\n  fulfilled = 'fulfilled',\n  rejected = 'rejected',\n}\n\nexport enum UserRegistrationPhase {\n  initial = 'initial',\n  pending = 'pending',\n  fulfilled = 'fulfilled',\n  rejected = 'rejected',\n}\n\nexport enum UserLoginPhase {\n  initial = 'initial',\n  pending = 'pending',\n  fulfilled = 'fulfilled',\n  rejected = 'rejected',\n}\n\nexport enum UpdateUserDataPhase {\n  initial = 'initial',\n  pending = 'pending',\n  fulfilled = 'fulfilled',\n  rejected = 'rejected',\n}\n\nexport enum AutoLoginPhase {\n  initial = 'initial',\n  pending = 'pending',\n  fulfilled = 'fulfilled',\n  rejected = 'rejected',\n}\n\nconst initialState: Readonly<{\n  accessToken?: string;\n  autoLoginPhase: AutoLoginPhase;\n  passwordResettingPhase: PasswordResettingPhase;\n  refreshToken?: string;\n  user?: User;\n  userLoginPhase: UserLoginPhase;\n  userRegistrationPhase: UserRegistrationPhase;\n  userTimeStamp?: number;\n  updateUserDataPhase: UpdateUserDataPhase;\n}> = {\n  autoLoginPhase: AutoLoginPhase.initial,\n  passwordResettingPhase: PasswordResettingPhase.initial,\n  userLoginPhase: UserLoginPhase.initial,\n  userRegistrationPhase: UserRegistrationPhase.initial,\n  updateUserDataPhase: UpdateUserDataPhase.initial,\n};\n\nexport const doAutoLogin = createAsyncThunk('user/doAutoLogin', async () => {\n  const { accessSchema, accessToken } = getAccessSchemaAndToken();\n\n  if (!accessSchema || !accessToken) {\n    throw new Error('Action cannot be handled');\n  }\n\n  try {\n    return await apiGetUserData({ auth: { accessSchema, accessToken } });\n  } catch (error) {\n    if (error.message !== 'jwt expired') {\n      throw error;\n    }\n\n    const refreshToken = getRefreshToken();\n\n    if (!refreshToken) {\n      throw error;\n    }\n\n    const payload = await apiRefreshTokens({ refreshToken });\n\n    authenticationSideEffect(payload);\n\n    const { accessSchema, accessToken } = getAccessSchemaAndToken() as Pick<\n      RefreshTokensResponse,\n      'accessSchema' | 'accessToken'\n    >;\n\n    return apiGetUserData({\n      auth: {\n        accessSchema,\n        accessToken,\n      },\n    });\n  }\n});\n\nexport const login = createAsyncThunk('user/login', apiLogin);\n\nexport const logout = createAsyncThunk('user/logout', async () => {\n  const refreshToken = getRefreshToken();\n\n  if (refreshToken) {\n    return apiLogout({ refreshToken: refreshToken });\n  }\n});\n\nexport const registerUser = createAsyncThunk(\n  'user/registerUser',\n  apiRegisterUser\n);\n\nexport const requestNewPasswordSetting = createAsyncThunk(\n  'user/requestNewPasswordSetting',\n  apiRequestNewPasswordSetting\n);\n\nexport const requestPasswordResettingForEmail = createAsyncThunk(\n  'user/requestPasswordResettingForEmail',\n  apiRequestPasswordResettingForEmail\n);\n\nexport const updateUserData = createAsyncThunk(\n  'user/updateUserData',\n  async ({\n    email,\n    name,\n    password,\n  }: {\n    email: string;\n    name: string;\n    password: string;\n  }) => {\n    const { accessSchema, accessToken } = getAccessSchemaAndToken();\n\n    if (!accessSchema || !accessToken) {\n      throw new Error('Action cannot be handled');\n    }\n\n    try {\n      return await apiUpdateUserData({\n        auth: {\n          accessSchema,\n          accessToken,\n        },\n        data: {\n          email,\n          name,\n          password,\n        },\n      });\n    } catch (error) {\n      if (error.message !== 'jwt expired') {\n        throw error;\n      }\n\n      const refreshToken = getRefreshToken();\n\n      if (!refreshToken) {\n        throw error;\n      }\n\n      const payload = await apiRefreshTokens({ refreshToken });\n\n      authenticationSideEffect(payload);\n\n      const { accessSchema, accessToken } = getAccessSchemaAndToken() as Pick<\n        RefreshTokensResponse,\n        'accessSchema' | 'accessToken'\n      >;\n\n      return apiUpdateUserData({\n        auth: { accessSchema, accessToken },\n        data: { email, name, password },\n      });\n    }\n  }\n);\n\nconst slice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    interruptPasswordResettingWorkflow(state) {\n      state.passwordResettingPhase = PasswordResettingPhase.initial;\n    },\n    interruptUpdateUserData(state) {\n      state.updateUserDataPhase = UpdateUserDataPhase.initial;\n    },\n    interruptUserLogin(state) {\n      state.userLoginPhase = UserLoginPhase.initial;\n    },\n    interruptUserRegistration(state) {\n      state.userRegistrationPhase = UserRegistrationPhase.initial;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(requestPasswordResettingForEmail.pending, (state) => {\n        state.passwordResettingPhase =\n          PasswordResettingPhase.requestingApprovalCode;\n      })\n      .addCase(requestPasswordResettingForEmail.fulfilled, (state) => {\n        state.passwordResettingPhase =\n          PasswordResettingPhase.requestingCredentialsFromUser;\n      })\n      .addCase(requestPasswordResettingForEmail.rejected, (state) => {\n        state.passwordResettingPhase = PasswordResettingPhase.initial;\n      });\n\n    builder\n      .addCase(requestNewPasswordSetting.pending, (state) => {\n        state.passwordResettingPhase = PasswordResettingPhase.pendingResetting;\n      })\n      .addCase(requestNewPasswordSetting.fulfilled, (state) => {\n        state.passwordResettingPhase = PasswordResettingPhase.fulfilled;\n      })\n      .addCase(requestNewPasswordSetting.rejected, (state) => {\n        state.passwordResettingPhase = PasswordResettingPhase.rejected;\n      });\n\n    builder\n      .addCase(registerUser.pending, (state) => {\n        state.userRegistrationPhase = UserRegistrationPhase.pending;\n      })\n      .addCase(\n        registerUser.fulfilled,\n        (state, { payload }: PayloadAction<AuthUserResponse>) => {\n          authenticationSideEffect(payload);\n          state.userRegistrationPhase = UserRegistrationPhase.fulfilled;\n          setUser(state, payload.user);\n        }\n      )\n      .addCase(registerUser.rejected, (state) => {\n        state.userRegistrationPhase = UserRegistrationPhase.rejected;\n      });\n\n    builder\n      .addCase(login.pending, (state) => {\n        state.userLoginPhase = UserLoginPhase.pending;\n      })\n      .addCase(\n        login.fulfilled,\n        (state, { payload }: PayloadAction<AuthUserResponse>) => {\n          authenticationSideEffect(payload);\n          state.userLoginPhase = UserLoginPhase.fulfilled;\n          setUser(state, payload.user);\n        }\n      )\n      .addCase(login.rejected, (state) => {\n        state.userLoginPhase = UserLoginPhase.rejected;\n      });\n\n    builder\n      .addCase(logout.pending, () => {})\n      .addCase(logout.fulfilled, (state) => {\n        cleanUpAuthenticationSideEffect();\n        resetUser(state);\n        state.userLoginPhase = UserLoginPhase.initial;\n      })\n      .addCase(logout.rejected, () => {});\n\n    builder\n      .addCase(updateUserData.pending, (state) => {\n        state.updateUserDataPhase = UpdateUserDataPhase.pending;\n      })\n      .addCase(\n        updateUserData.fulfilled,\n        (state, { payload }: PayloadAction<UserResponse>) => {\n          setUser(state, payload.user);\n          state.updateUserDataPhase = UpdateUserDataPhase.fulfilled;\n        }\n      )\n      .addCase(updateUserData.rejected, (state) => {\n        state.updateUserDataPhase = UpdateUserDataPhase.rejected;\n      });\n\n    builder\n      .addCase(doAutoLogin.pending, (state) => {\n        state.autoLoginPhase = AutoLoginPhase.pending;\n      })\n      .addCase(\n        doAutoLogin.fulfilled,\n        (state, { payload }: PayloadAction<User>) => {\n          state.autoLoginPhase = AutoLoginPhase.fulfilled;\n          state.userLoginPhase = UserLoginPhase.fulfilled;\n          setUser(state, payload);\n        }\n      )\n      .addCase(doAutoLogin.rejected, (state) => {\n        state.autoLoginPhase = AutoLoginPhase.rejected;\n      });\n  },\n});\n\nconst { reducer } = slice;\n\nexport { reducer as userReducer };\n\nexport const {\n  interruptPasswordResettingWorkflow,\n  interruptUpdateUserData,\n  interruptUserLogin,\n  interruptUserRegistration,\n} = slice.actions;\n","import {\n  AuthUserResponse,\n  Ingredient_t,\n  OrderDetails_t,\n  OrderStatus_t,\n  RefreshTokensResponse,\n  User,\n  UserResponse,\n} from '../../types';\n\nexport const apiHostUrl = 'https://norma.nomoreparties.space';\n\nconst getAccessSchemaAndTokenAndRefreshToken = (\n  response: any\n): RefreshTokensResponse => {\n  const { accessToken: accessTokenWithSchema, refreshToken } = response;\n  const [accessSchema, accessToken] = accessTokenWithSchema.split(' ');\n\n  return {\n    accessSchema,\n    accessToken,\n    refreshToken,\n  };\n};\n\nexport const fetchIngredients = async (): Promise<Ingredient_t[]> => {\n  const response = await fetch(`${apiHostUrl}/api/ingredients`);\n  const result = await response.json();\n\n  if (result.success === true) {\n    return result.data;\n  } else {\n    throw new Error(\"Can't get data from server\");\n  }\n};\n\ninterface LoginRequestParams {\n  email: string;\n  password: string;\n}\n\nexport const login = async ({\n  email,\n  password,\n}: LoginRequestParams): Promise<AuthUserResponse> => {\n  const response = await fetch(`${apiHostUrl}/api/auth/login`, {\n    body: JSON.stringify({ email, password }),\n    headers: new Headers([['Content-Type', 'application/json']]),\n    method: 'POST',\n  });\n  const result = await response.json();\n\n  if (result.success !== true) {\n    throw new Error(\"Can't get data from server\");\n  }\n\n  const {\n    user: { email: userEmailFromServer, name: userNameFromServer },\n  } = result;\n\n  return {\n    ...getAccessSchemaAndTokenAndRefreshToken(result),\n    user: {\n      email: userEmailFromServer,\n      name: userNameFromServer,\n    },\n  };\n};\n\nexport const logout = async ({\n  refreshToken,\n}: Pick<RefreshTokensResponse, 'refreshToken'>): Promise<void> => {\n  const response = await fetch(`${apiHostUrl}/api/auth/logout`, {\n    body: JSON.stringify({ token: refreshToken }),\n    headers: new Headers([['Content-Type', 'application/json']]),\n    method: 'POST',\n  });\n  const result = await response.json();\n\n  if (result.success !== true) {\n    throw new Error(\"Can't get data from server\");\n  }\n};\n\nexport const placeAnOrder = async (\n  ingredients: Ingredient_t['_id'][]\n): Promise<OrderDetails_t> => {\n  const response = await fetch(`${apiHostUrl}/api/orders`, {\n    body: JSON.stringify({ ingredients }),\n    headers: new Headers([['Content-Type', 'application/json']]),\n    method: 'POST',\n  });\n  const result = await response.json();\n\n  if (result.success === true) {\n    return {\n      id: result.order.number,\n      message: 'Дождитесь готовности на орбитальной станции',\n      status: OrderStatus_t.BEING_COOKED,\n    };\n  } else {\n    throw new Error(\"Can't get data from server\");\n  }\n};\n\nexport const refreshTokens = async ({\n  refreshToken: token,\n}: Pick<\n  RefreshTokensResponse,\n  'refreshToken'\n>): Promise<RefreshTokensResponse> => {\n  const response = await fetch(`${apiHostUrl}/api/auth/token`, {\n    body: JSON.stringify({ token }),\n    headers: new Headers([['Content-Type', 'application/json']]),\n    method: 'POST',\n  });\n  const result = await response.json();\n\n  if (result.success === true) {\n    return getAccessSchemaAndTokenAndRefreshToken(result);\n  } else {\n    throw new Error(\"Can't get data from server\");\n  }\n};\n\ninterface RegisterUserRequestParams {\n  email: string;\n  name: string;\n  password: string;\n}\n\nexport const registerUser = async ({\n  email,\n  name,\n  password,\n}: RegisterUserRequestParams): Promise<AuthUserResponse> => {\n  const response = await fetch(`${apiHostUrl}/api/auth/register`, {\n    body: JSON.stringify({ email, name, password }),\n    headers: new Headers([['Content-Type', 'application/json']]),\n    method: 'POST',\n  });\n  const result = await response.json();\n\n  if (result.success !== true) {\n    throw new Error(\"Can't get data from server\");\n  }\n\n  const {\n    accessToken: accessTokenWithSchema,\n    refreshToken,\n    user: { email: userEmailFromServer, name: userNameFromServer },\n  } = result;\n\n  const [accessSchema, accessToken] = accessTokenWithSchema.split(' ');\n\n  return {\n    accessSchema,\n    accessToken,\n    refreshToken,\n    user: {\n      email: userEmailFromServer,\n      name: userNameFromServer,\n    },\n  };\n};\n\ninterface RequestPasswordResettingForEmailParams {\n  email: string;\n}\n\nexport const requestPasswordResettingForEmail = async ({\n  email,\n}: RequestPasswordResettingForEmailParams): Promise<void> => {\n  const response = await fetch(`${apiHostUrl}/api/password-reset`, {\n    body: JSON.stringify({ email }),\n    headers: new Headers([['Content-Type', 'application/json']]),\n    method: 'POST',\n  });\n  const result = await response.json();\n\n  if (result.success !== true) {\n    throw new Error(\"Can't get data from server\");\n  }\n};\n\ninterface RequestNewPasswordSettingParams {\n  password: string;\n  token: string;\n}\n\nexport const requestNewPasswordSetting = async ({\n  password,\n  token,\n}: RequestNewPasswordSettingParams): Promise<void> => {\n  const response = await fetch(`${apiHostUrl}/api/password-reset/reset`, {\n    body: JSON.stringify({ password, token }),\n    headers: new Headers([['Content-Type', 'application/json']]),\n    method: 'POST',\n  });\n  const result = await response.json();\n\n  if (result.success !== true) {\n    throw new Error(\"Can't get data from server\");\n  }\n};\n\ntype AccessSchemaWithToken = Pick<\n  RefreshTokensResponse,\n  'accessSchema' | 'accessToken'\n>;\n\ntype GetUserDataParams = {\n  auth: AccessSchemaWithToken;\n};\n\nexport const getUserData = async ({\n  auth: { accessSchema, accessToken },\n}: GetUserDataParams): Promise<User> => {\n  const response = await fetch(`${apiHostUrl}/api/auth/user`, {\n    headers: new Headers([\n      ['Content-Type', 'application/json'],\n      ['Authorization', `${accessSchema} ${accessToken}`],\n    ]),\n    method: 'GET',\n  });\n  const result = await response.json();\n\n  if (result.success !== true) {\n    throw new Error(\"Can't get data from server\");\n  }\n\n  return result.user;\n};\n\ntype UpdateUserDataParams = {\n  auth: AccessSchemaWithToken;\n  data: {\n    email: string;\n    name: string;\n    password: string;\n  };\n};\n\nexport const updateUserData = async ({\n  auth: { accessSchema, accessToken },\n  data: { email, name, password },\n}: UpdateUserDataParams): Promise<UserResponse> => {\n  const response = await fetch(`${apiHostUrl}/api/auth/user`, {\n    body: JSON.stringify({ name, email, password }),\n    headers: new Headers([\n      ['Content-Type', 'application/json'],\n      ['Authorization', `${accessSchema} ${accessToken}`],\n    ]),\n    method: 'PATCH',\n  });\n  const result = await response.json();\n\n  if (result.success !== true) {\n    throw new Error(\"Can't get data from server\");\n  }\n\n  return {\n    user: result.user,\n  };\n};\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { v4 as uuidV4 } from 'uuid';\nimport {\n  ActualIngredient_t,\n  ActualIngredientType,\n  Ingredient_t,\n  IngredientType,\n  OrderDetails_t,\n} from '../../types';\nimport {\n  fetchIngredients as apiFetchIngredients,\n  placeAnOrder as apiPlaceAnOrder,\n} from '../api';\n\nconst generateIngredientId = () => uuidV4();\n\nconst initialState: Readonly<{\n  actualIngredients: ActualIngredient_t[];\n  idToIngredientMap: { [key: string]: Ingredient_t };\n  idToActualIngredientsCountMap: { [key: string]: number };\n  ingredients: Ingredient_t[];\n  ingredientsError: unknown | null;\n  ingredientsRequest: boolean;\n  orderDetails: OrderDetails_t | null;\n  orderDetailsError: unknown | null;\n  orderDetailsRequest: boolean;\n  totalAmount: number;\n}> = {\n  actualIngredients: [],\n  idToActualIngredientsCountMap: {},\n  idToIngredientMap: {},\n  ingredients: [],\n  ingredientsError: null,\n  ingredientsRequest: true,\n  orderDetails: null,\n  orderDetailsError: null,\n  orderDetailsRequest: false,\n  totalAmount: 0,\n};\n\ntype InitialState_t = typeof initialState;\n\nconst calcTotal = ({\n  actualIngredients,\n  idToIngredientMap,\n}: InitialState_t) => {\n  const ingredientIds = actualIngredients.map(({ refId }) => refId);\n\n  return ingredientIds.reduce((result, refId) => {\n    const { price } = idToIngredientMap[refId]!;\n\n    return result + price;\n  }, 0);\n};\n\nconst buildIdToActualIngredientsCountMap = ({\n  actualIngredients,\n}: InitialState_t): InitialState_t['idToActualIngredientsCountMap'] =>\n  actualIngredients.reduce((map, actualIngredient) => {\n    if (Object.prototype.hasOwnProperty.call(map, actualIngredient.refId)) {\n      map[actualIngredient.refId] += 1;\n    } else {\n      map[actualIngredient.refId] = 1;\n    }\n\n    return map;\n  }, {} as InitialState_t['idToActualIngredientsCountMap']);\n\nexport const fetchIngredients = createAsyncThunk(\n  'burger/fetchIngredients',\n  apiFetchIngredients\n);\n\nexport const placeAnOrder = createAsyncThunk(\n  'burger/placeAnOrder',\n  async (ingredients: Ingredient_t['_id'][]) => {\n    if (ingredients.length === 0) {\n      throw new Error(\n        'Unable to place an order for the empty ingredients list'\n      );\n    }\n\n    return apiPlaceAnOrder(ingredients);\n  }\n);\n\nconst slice = createSlice({\n  name: 'burger',\n  initialState,\n  reducers: {\n    addIngredient(state, { payload: ingredient }: PayloadAction<Ingredient_t>) {\n      const { actualIngredients } = state;\n      const { _id, type } = ingredient;\n\n      if (type === IngredientType.bun) {\n        const [topBun, bottomBun] = [\n          ActualIngredientType.top,\n          ActualIngredientType.bottom,\n        ].map((type) => ({\n          id: generateIngredientId(),\n          type,\n          isLocked: true,\n          refId: _id,\n        }));\n\n        state.actualIngredients = [\n          topBun,\n          ...actualIngredients.slice(1, -1),\n          bottomBun,\n        ];\n      } else {\n        const newValue = [...actualIngredients];\n\n        newValue.splice(-1, 0, {\n          id: generateIngredientId(),\n          refId: _id,\n        });\n\n        state.actualIngredients = newValue;\n      }\n\n      state.totalAmount = calcTotal(state);\n      state.idToActualIngredientsCountMap =\n        buildIdToActualIngredientsCountMap(state);\n    },\n    moveIngredient(\n      state,\n      { payload: [fromIndex, toIndex] }: PayloadAction<[number, number]>\n    ) {\n      const { actualIngredients: actualIngredientsFromState } = state;\n      const actualIngredients = [...actualIngredientsFromState];\n\n      actualIngredients.splice(\n        toIndex,\n        0,\n        actualIngredients.splice(fromIndex, 1)[0]\n      );\n\n      state.actualIngredients = actualIngredients;\n    },\n    removeIngredient(\n      state,\n      { payload: idToRemove }: PayloadAction<ActualIngredient_t['id']>\n    ) {\n      const { actualIngredients } = state;\n      const removableIngredients = state.actualIngredients.slice(1, -1);\n\n      if (removableIngredients.map(({ id }) => id).includes(idToRemove)) {\n        state.actualIngredients = [\n          actualIngredients[0],\n          ...removableIngredients.filter(({ id }) => id !== idToRemove),\n          actualIngredients[actualIngredients.length - 1],\n        ];\n        state.totalAmount = calcTotal(state);\n        state.idToActualIngredientsCountMap =\n          buildIdToActualIngredientsCountMap(state);\n      }\n    },\n    resetOrderDetails(state) {\n      if (!state.orderDetailsRequest) {\n        Object.assign(state, {\n          orderDetails: null,\n          orderDetailsError: null,\n          orderDetailsRequest: false,\n        });\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchIngredients.pending, (state) => {\n        Object.assign(state, {\n          ...initialState,\n          ingredientsRequest: true,\n        });\n      })\n      .addCase(\n        fetchIngredients.fulfilled,\n        (state, { payload: ingredients }: PayloadAction<Ingredient_t[]>) => {\n          const idToIngredientMap: InitialState_t['idToIngredientMap'] = {};\n\n          ingredients.forEach((ingredient) => {\n            idToIngredientMap[ingredient._id] = ingredient;\n          });\n\n          Object.assign(state, {\n            idToIngredientMap,\n            ingredients,\n            ingredientsRequest: false,\n          });\n        }\n      )\n      .addCase(\n        fetchIngredients.rejected,\n        (\n          state,\n          { error }: PayloadAction<unknown, string, unknown, unknown>\n        ) => {\n          Object.assign(state, {\n            ingredientsError: error,\n            ingredientsRequest: false,\n          });\n        }\n      );\n    builder\n      .addCase(placeAnOrder.pending, (state) => {\n        Object.assign(state, {\n          orderDetails: null,\n          orderDetailsError: null,\n          orderDetailsRequest: true,\n        });\n      })\n      .addCase(\n        placeAnOrder.fulfilled,\n        (state, { payload: orderDetails }: PayloadAction<OrderDetails_t>) => {\n          state.orderDetailsRequest = false;\n          state.orderDetails = orderDetails;\n          state.actualIngredients = [];\n          state.totalAmount = calcTotal(state);\n          state.idToActualIngredientsCountMap =\n            buildIdToActualIngredientsCountMap(state);\n        }\n      )\n      .addCase(\n        placeAnOrder.rejected,\n        (\n          state,\n          { error }: PayloadAction<unknown, string, unknown, unknown>\n        ) => {\n          Object.assign(state, {\n            orderDetailsError: error,\n            orderDetailsRequest: false,\n          });\n        }\n      );\n  },\n});\n\nconst { reducer } = slice;\n\nexport { reducer as burgerReducer };\n\nexport const {\n  addIngredient,\n  moveIngredient,\n  removeIngredient,\n  resetOrderDetails,\n} = slice.actions;\n","import { AuthUserResponse, RefreshTokensResponse } from '../../types';\nimport Cookies from 'universal-cookie';\n\nconst authRefreshTokenKey = 'authRefreshToken';\nconst cookiesCtrl = new Cookies();\n\nexport const authenticationSideEffect = ({\n  accessSchema,\n  accessToken,\n  refreshToken,\n}: RefreshTokensResponse) => {\n  const cookies = {\n    accessSchema,\n    accessToken,\n  };\n\n  Object.entries(cookies).forEach(([cookieName, cookieValue]) =>\n    cookiesCtrl.set(cookieName, cookieValue, { path: '/' })\n  );\n  localStorage.setItem(authRefreshTokenKey, refreshToken);\n};\n\nexport const cleanUpAuthenticationSideEffect = () => {\n  localStorage.removeItem(authRefreshTokenKey);\n  ['accessSchema', 'accessToken'].forEach((cookieName) =>\n    cookiesCtrl.remove(cookieName)\n  );\n};\n\nexport const getAccessSchemaAndToken = (): Partial<\n  Pick<RefreshTokensResponse, 'accessSchema' | 'accessToken'>\n> => {\n  return ['accessSchema', 'accessToken'].reduce(\n    (result, cookieName) =>\n      Object.assign(result, {\n        [cookieName]: cookiesCtrl.get(cookieName),\n      }),\n    {}\n  );\n};\n\nexport const getRefreshToken = ():\n  | AuthUserResponse['refreshToken']\n  | undefined => {\n  return localStorage.authRefreshToken;\n};\n\nexport const getAuthHeaderValue = (): string | undefined => {\n  const { accessSchema, accessToken } = getAccessSchemaAndToken();\n\n  if (accessSchema && accessToken) {\n    return `${accessSchema} ${accessToken}`;\n  }\n};\n\nexport const setUser = (state: any, user: any) => {\n  state.user = user;\n  state.userTimeStamp = new Date().getTime();\n};\n\nexport const resetUser = (state: any) => {\n  delete state.user;\n  delete state.userTimeStamp;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"amount\":\"style_amount__2_jh4\",\"amount_type_total\":\"style_amount_type_total__pvRzS\",\"amount__amount\":\"style_amount__amount__315ja\",\"amount__currency-wrapper\":\"style_amount__currency-wrapper__2m355\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-page\":\"style_main-page__Jmc7f\",\"main-page__ingredients\":\"style_main-page__ingredients__1V60h\",\"main-page__constructor\":\"style_main-page__constructor__UVP6s\",\"main-page__space\":\"style_main-page__space__3sPGu\"};","import { configureStore } from '@reduxjs/toolkit';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { burgerReducer, userReducer } from './reducers';\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV === 'development',\n  reducer: {\n    burger: burgerReducer,\n    user: userReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector = <T>(func: (state: RootState) => T): T =>\n  useSelector(func);\n\nexport { store };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\nimport { DragPreviewImage, useDrag, useDrop } from 'react-dnd';\nimport {\n  ConstructorElement,\n  DragIcon,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport {\n  ActualIngredientDragItem,\n  ActualIngredientType,\n  DraggableTypes,\n  Ingredient_t,\n} from '../../../types';\nimport { lexemes } from '../../../consts';\nimport { useAppDispatch } from '../../../services/store';\nimport { moveIngredient } from '../../../services/reducers';\n\nimport style from './style.module.css';\n\nconst BurgerConstructorItem = ({\n  className,\n  index,\n  ingredient: { _id, image, name, price },\n  isLocked,\n  onShowIngredientInfo,\n  onDelete,\n  type,\n}: {\n  className?: string;\n  index?: number;\n  ingredient: Ingredient_t;\n  isLocked: boolean;\n  onShowIngredientInfo?: () => void;\n  onDelete?: () => void;\n  type?: ActualIngredientType;\n}) => {\n  const dispatch = useAppDispatch();\n  const [{ isItPicked }, dragRef, preview] = useDrag({\n    type: DraggableTypes.actualIngredient,\n    canDrag: !isLocked,\n    item: {\n      index,\n    } as ActualIngredientDragItem,\n    collect(monitor) {\n      return {\n        isItPicked: monitor.isDragging(),\n      };\n    },\n  });\n  const [{ isCanDrop, isDragOver }, dropRef] = useDrop({\n    accept: DraggableTypes.actualIngredient,\n    canDrop() {\n      return !isLocked;\n    },\n    collect(monitor) {\n      return {\n        isCanDrop: monitor.canDrop(),\n        isDragOver: monitor.isOver(),\n      };\n    },\n    hover(item) {\n      const { index: draggableIndex } = item as ActualIngredientDragItem;\n\n      if (index === draggableIndex) {\n        return;\n      }\n\n      if (index != null) {\n        //mutate the item in order to prevent multiple dispatches\n        (item as ActualIngredientDragItem).index = index;\n        setImmediate(() => {\n          dispatch(moveIngredient([draggableIndex, index]));\n        });\n      }\n    },\n  });\n\n  return (\n    <div\n      ref={dropRef}\n      className={cs(\n        style['burger-constructor-item'],\n        {\n          [style['burger-constructor-item_interactive']]: onShowIngredientInfo,\n          [style['burger-constructor-item_is-picked']]: isItPicked,\n          [style['burger-constructor-item_is-can-drop']]: isCanDrop,\n          [style['burger-constructor-item_is-drag-over']]: isDragOver,\n          'pt-4': !isLocked,\n        },\n        className\n      )}\n      onClick={(event) => {\n        const target = event.target as HTMLElement;\n\n        if (\n          onShowIngredientInfo &&\n          target.closest(\n            `.${style['burger-constructor-item__constructor-element-wrapper']}`\n          ) &&\n          !target.closest('.constructor-element__action')\n        ) {\n          onShowIngredientInfo();\n        }\n      }}\n    >\n      {!isLocked ? (\n        <div ref={dragRef}>\n          <DragIcon type={'primary'} />\n        </div>\n      ) : (\n        <div className={'pl-8'} />\n      )}\n      <DragPreviewImage connect={preview} src={image} />\n      <div className={'pl-6'} />\n      <div\n        className={\n          style['burger-constructor-item__constructor-element-wrapper']\n        }\n      >\n        <ConstructorElement\n          handleClose={onDelete}\n          isLocked={isLocked}\n          price={price}\n          text={`${name}${\n            type\n              ? ` (${\n                  type === ActualIngredientType.top\n                    ? lexemes.top\n                    : lexemes.bottom\n                })`\n              : ''\n          }`}\n          thumbnail={image}\n          type={type}\n        />\n      </div>\n    </div>\n  );\n};\n\nBurgerConstructorItem.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  index: PropTypes.number,\n  ingredient: PropTypes.object.isRequired,\n  isLocked: PropTypes.bool.isRequired,\n  onShowIngredientInfo: PropTypes.func,\n  onDelete: PropTypes.func,\n  type: PropTypes.oneOf([\n    ActualIngredientType.top,\n    ActualIngredientType.bottom,\n  ]),\n};\n\nexport { BurgerConstructorItem };\n"],"sourceRoot":""}